{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-03-19T16:00:23.213275Z", "invocation_id": "f80d1f9a-f691-4451-b74c-33770175da8b", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.127537Z", "completed_at": "2024-03-19T16:00:19.139120Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.143059Z", "completed_at": "2024-03-19T16:00:19.143075Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020427942276000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__account_types_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_account_type_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.132022Z", "completed_at": "2024-03-19T16:00:19.143369Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.146379Z", "completed_at": "2024-03-19T16:00:19.146386Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022131919860839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_book_subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_accounting_book_sub_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.135664Z", "completed_at": "2024-03-19T16:00:19.143627Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.146669Z", "completed_at": "2024-03-19T16:00:19.146673Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022124052047729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_books_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_accounting_book_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.139592Z", "completed_at": "2024-03-19T16:00:19.144633Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.147400Z", "completed_at": "2024-03-19T16:00:19.147403Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022455215454101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_period_fiscal_cal_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_accounting_period_fiscal_cal_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.150443Z", "completed_at": "2024-03-19T16:00:19.155392Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.165154Z", "completed_at": "2024-03-19T16:00:19.165161Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018779754638671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_periods_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_accounting_period_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.158699Z", "completed_at": "2024-03-19T16:00:19.166056Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.168152Z", "completed_at": "2024-03-19T16:00:19.168156Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015035867691040039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__classes_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_classification_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.155860Z", "completed_at": "2024-03-19T16:00:19.166276Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.168380Z", "completed_at": "2024-03-19T16:00:19.168384Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015997886657714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounts_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_account_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.161356Z", "completed_at": "2024-03-19T16:00:19.166847Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.168801Z", "completed_at": "2024-03-19T16:00:19.168804Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01851511001586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__consolidated_exchange_rates_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_consolidated_exchange_rate_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.170094Z", "completed_at": "2024-03-19T16:00:19.175096Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.181633Z", "completed_at": "2024-03-19T16:00:19.181639Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017002105712890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__currencies_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_currency_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.176478Z", "completed_at": "2024-03-19T16:00:19.185298Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.187139Z", "completed_at": "2024-03-19T16:00:19.187144Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017015933990478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__customers_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_customer_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.179166Z", "completed_at": "2024-03-19T16:00:19.185607Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.187632Z", "completed_at": "2024-03-19T16:00:19.187636Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017358064651489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__departments_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_department_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.181895Z", "completed_at": "2024-03-19T16:00:19.186440Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.191707Z", "completed_at": "2024-03-19T16:00:19.191710Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01758408546447754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entities_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_entities_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.187902Z", "completed_at": "2024-03-19T16:00:19.193487Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.195691Z", "completed_at": "2024-03-19T16:00:19.195696Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015490055084228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entity_address_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_entity_address_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entity_address_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.195951Z", "completed_at": "2024-03-19T16:00:19.204538Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.206076Z", "completed_at": "2024-03-19T16:00:19.206082Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015583992004394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__items_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_item_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.198657Z", "completed_at": "2024-03-19T16:00:19.205384Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.209640Z", "completed_at": "2024-03-19T16:00:19.209644Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016257047653198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__jobs_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_job_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.201676Z", "completed_at": "2024-03-19T16:00:19.205845Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.209917Z", "completed_at": "2024-03-19T16:00:19.209922Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0162811279296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__location_main_address_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_location_main_address_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__location_main_address_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.206517Z", "completed_at": "2024-03-19T16:00:19.210912Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.213773Z", "completed_at": "2024-03-19T16:00:19.213782Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012639045715332031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__locations_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_location_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.214378Z", "completed_at": "2024-03-19T16:00:19.224069Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.225724Z", "completed_at": "2024-03-19T16:00:19.225732Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017304182052612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_subsidiary_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.218039Z", "completed_at": "2024-03-19T16:00:19.225049Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.229481Z", "completed_at": "2024-03-19T16:00:19.229486Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017410755157470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_accounting_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_tran_acct_line_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.221760Z", "completed_at": "2024-03-19T16:00:19.225495Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.229798Z", "completed_at": "2024-03-19T16:00:19.229801Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017220735549926758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_transaction_line_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.226182Z", "completed_at": "2024-03-19T16:00:19.230335Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.232836Z", "completed_at": "2024-03-19T16:00:19.232840Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012431859970092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transactions_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_transaction_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.233699Z", "completed_at": "2024-03-19T16:00:19.244896Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.246767Z", "completed_at": "2024-03-19T16:00:19.246774Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018915891647338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendor_categories_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_vendor_category_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.238068Z", "completed_at": "2024-03-19T16:00:19.246236Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.251054Z", "completed_at": "2024-03-19T16:00:19.251058Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019321918487548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendors_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_vendor_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.241609Z", "completed_at": "2024-03-19T16:00:19.246999Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.251754Z", "completed_at": "2024-03-19T16:00:19.251758Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019912004470825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_books_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_accounting_books_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.247454Z", "completed_at": "2024-03-19T16:00:19.251982Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.254615Z", "completed_at": "2024-03-19T16:00:19.254618Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013290166854858398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_periods_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_accounting_periods_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.255184Z", "completed_at": "2024-03-19T16:00:19.260052Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.267275Z", "completed_at": "2024-03-19T16:00:19.267282Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019225120544433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.260324Z", "completed_at": "2024-03-19T16:00:19.267520Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.273238Z", "completed_at": "2024-03-19T16:00:19.273244Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019968032836914062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__classes_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_classes_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.263513Z", "completed_at": "2024-03-19T16:00:19.267757Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.273530Z", "completed_at": "2024-03-19T16:00:19.273534Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017195940017700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__consolidated_exchange_rates_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_consolidated_exchange_rates_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.267998Z", "completed_at": "2024-03-19T16:00:19.273856Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.276544Z", "completed_at": "2024-03-19T16:00:19.276547Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014473915100097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__currencies_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_currencies_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.276776Z", "completed_at": "2024-03-19T16:00:19.282030Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.288843Z", "completed_at": "2024-03-19T16:00:19.288848Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018238067626953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__customers_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_customers_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.285168Z", "completed_at": "2024-03-19T16:00:19.291641Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.293844Z", "completed_at": "2024-03-19T16:00:19.293848Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015150785446166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__expense_accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_expense_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.282411Z", "completed_at": "2024-03-19T16:00:19.291939Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.294084Z", "completed_at": "2024-03-19T16:00:19.294087Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016096115112304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__departments_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_departments_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.289106Z", "completed_at": "2024-03-19T16:00:19.293548Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.296259Z", "completed_at": "2024-03-19T16:00:19.296262Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012383222579956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__income_accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_income_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.297058Z", "completed_at": "2024-03-19T16:00:19.301775Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.309225Z", "completed_at": "2024-03-19T16:00:19.309234Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018532991409301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__items_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_items_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.302577Z", "completed_at": "2024-03-19T16:00:19.312330Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.314378Z", "completed_at": "2024-03-19T16:00:19.314382Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015323877334594727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__locations_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_locations_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.306406Z", "completed_at": "2024-03-19T16:00:19.313500Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.316212Z", "completed_at": "2024-03-19T16:00:19.316217Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016621828079223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_subsidiaries_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.309614Z", "completed_at": "2024-03-19T16:00:19.314067Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.316689Z", "completed_at": "2024-03-19T16:00:19.316692Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01851201057434082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transaction_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_transaction_lines_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.317738Z", "completed_at": "2024-03-19T16:00:19.322318Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.326484Z", "completed_at": "2024-03-19T16:00:19.326489Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0172879695892334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transactions_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_transactions_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.330360Z", "completed_at": "2024-03-19T16:00:19.331357Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.333579Z", "completed_at": "2024-03-19T16:00:19.333583Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01188206672668457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.323234Z", "completed_at": "2024-03-19T16:00:19.331628Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.333811Z", "completed_at": "2024-03-19T16:00:19.333814Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014123916625976562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendor_types_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_vendor_types_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.326748Z", "completed_at": "2024-03-19T16:00:19.333299Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.335691Z", "completed_at": "2024-03-19T16:00:19.335694Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015409231185913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendors_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_vendors_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.336468Z", "completed_at": "2024-03-19T16:00:19.337504Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.339832Z", "completed_at": "2024-03-19T16:00:19.339836Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009183883666992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_account_type_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.340446Z", "completed_at": "2024-03-19T16:00:19.341561Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.346854Z", "completed_at": "2024-03-19T16:00:19.346862Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010044097900390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_book_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.341927Z", "completed_at": "2024-03-19T16:00:19.342785Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.347179Z", "completed_at": "2024-03-19T16:00:19.347184Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010206937789916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_book_sub_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.345433Z", "completed_at": "2024-03-19T16:00:19.346483Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.349272Z", "completed_at": "2024-03-19T16:00:19.349275Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012458086013793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_period_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.349972Z", "completed_at": "2024-03-19T16:00:19.352014Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.354581Z", "completed_at": "2024-03-19T16:00:19.354585Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011100053787231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_period_fiscal_cal_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.355278Z", "completed_at": "2024-03-19T16:00:19.356269Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.361547Z", "completed_at": "2024-03-19T16:00:19.361555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010129928588867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_classification_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.356685Z", "completed_at": "2024-03-19T16:00:19.357975Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.361878Z", "completed_at": "2024-03-19T16:00:19.361882Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010232925415039062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_consolidated_exchange_rate_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.360056Z", "completed_at": "2024-03-19T16:00:19.361107Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.364047Z", "completed_at": "2024-03-19T16:00:19.364050Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011777877807617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_currency_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.364849Z", "completed_at": "2024-03-19T16:00:19.365934Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.368674Z", "completed_at": "2024-03-19T16:00:19.368679Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011043787002563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.369264Z", "completed_at": "2024-03-19T16:00:19.371351Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.376037Z", "completed_at": "2024-03-19T16:00:19.376045Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010449886322021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_department_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.371745Z", "completed_at": "2024-03-19T16:00:19.372658Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.376383Z", "completed_at": "2024-03-19T16:00:19.376389Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010529041290283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_entities_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.374588Z", "completed_at": "2024-03-19T16:00:19.375693Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.378497Z", "completed_at": "2024-03-19T16:00:19.378501Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011939048767089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_entity_address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.379300Z", "completed_at": "2024-03-19T16:00:19.380400Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.383349Z", "completed_at": "2024-03-19T16:00:19.383355Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01010894775390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.383999Z", "completed_at": "2024-03-19T16:00:19.385095Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.391393Z", "completed_at": "2024-03-19T16:00:19.391400Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011716127395629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_job_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.385366Z", "completed_at": "2024-03-19T16:00:19.386289Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.391650Z", "completed_at": "2024-03-19T16:00:19.391653Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011887073516845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_location_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.388463Z", "completed_at": "2024-03-19T16:00:19.390995Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.393986Z", "completed_at": "2024-03-19T16:00:19.393991Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013603925704956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_location_main_address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.395439Z", "completed_at": "2024-03-19T16:00:19.396588Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.400012Z", "completed_at": "2024-03-19T16:00:19.400021Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012192964553833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_subsidiary_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.400791Z", "completed_at": "2024-03-19T16:00:19.402012Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.407004Z", "completed_at": "2024-03-19T16:00:19.407010Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01099705696105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_tran_acct_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.402367Z", "completed_at": "2024-03-19T16:00:19.403438Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.407283Z", "completed_at": "2024-03-19T16:00:19.407287Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010844945907592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.405548Z", "completed_at": "2024-03-19T16:00:19.406677Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.409857Z", "completed_at": "2024-03-19T16:00:19.409864Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013662099838256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_transaction_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.410790Z", "completed_at": "2024-03-19T16:00:19.413313Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.416232Z", "completed_at": "2024-03-19T16:00:19.416237Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04509782791137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_vendor_category_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.416836Z", "completed_at": "2024-03-19T16:00:19.450777Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.455197Z", "completed_at": "2024-03-19T16:00:19.455202Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04189491271972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_vendor_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.451244Z", "completed_at": "2024-03-19T16:00:19.452188Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.455430Z", "completed_at": "2024-03-19T16:00:19.455433Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04191994667053223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounting_books_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.453945Z", "completed_at": "2024-03-19T16:00:19.454909Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.457233Z", "completed_at": "2024-03-19T16:00:19.457236Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04293107986450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounting_periods_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.457937Z", "completed_at": "2024-03-19T16:00:19.458898Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.461281Z", "completed_at": "2024-03-19T16:00:19.461285Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009385824203491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.461879Z", "completed_at": "2024-03-19T16:00:19.462837Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.467219Z", "completed_at": "2024-03-19T16:00:19.467223Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008632898330688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_classes_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.463083Z", "completed_at": "2024-03-19T16:00:19.464630Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.467438Z", "completed_at": "2024-03-19T16:00:19.467441Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008711099624633789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_consolidated_exchange_rates_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.466086Z", "completed_at": "2024-03-19T16:00:19.466959Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.469229Z", "completed_at": "2024-03-19T16:00:19.469232Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009852886199951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_currencies_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.469904Z", "completed_at": "2024-03-19T16:00:19.470910Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.473211Z", "completed_at": "2024-03-19T16:00:19.473215Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00853586196899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_customers_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.473746Z", "completed_at": "2024-03-19T16:00:19.474724Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.478457Z", "completed_at": "2024-03-19T16:00:19.478462Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00790715217590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_departments_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.474963Z", "completed_at": "2024-03-19T16:00:19.475802Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.478706Z", "completed_at": "2024-03-19T16:00:19.478709Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007969141006469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_expense_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.477222Z", "completed_at": "2024-03-19T16:00:19.478155Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.480485Z", "completed_at": "2024-03-19T16:00:19.480488Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010175228118896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_income_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.481149Z", "completed_at": "2024-03-19T16:00:19.483062Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.485390Z", "completed_at": "2024-03-19T16:00:19.485394Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009438037872314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_items_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.485918Z", "completed_at": "2024-03-19T16:00:19.486849Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.490551Z", "completed_at": "2024-03-19T16:00:19.490554Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0077250003814697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_locations_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.487108Z", "completed_at": "2024-03-19T16:00:19.487962Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.490771Z", "completed_at": "2024-03-19T16:00:19.490774Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007796049118041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_subsidiaries_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.489432Z", "completed_at": "2024-03-19T16:00:19.490293Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.492501Z", "completed_at": "2024-03-19T16:00:19.492503Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008807897567749023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_transaction_lines_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.493147Z", "completed_at": "2024-03-19T16:00:19.494037Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.496079Z", "completed_at": "2024-03-19T16:00:19.496082Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008709192276000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_transactions_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.496612Z", "completed_at": "2024-03-19T16:00:19.497488Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.507089Z", "completed_at": "2024-03-19T16:00:19.507094Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013712167739868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_vendor_types_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.498506Z", "completed_at": "2024-03-19T16:00:19.499319Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.507366Z", "completed_at": "2024-03-19T16:00:19.507369Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013849020004272461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_vendors_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.500737Z", "completed_at": "2024-03-19T16:00:19.783092Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.785025Z", "completed_at": "2024-03-19T16:00:19.785033Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.31199097633361816, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__account_types", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    balancesheet\n    \n as \n    \n    balancesheet\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    defaultcashflowratetype\n    \n as \n    \n    defaultcashflowratetype\n    \n, \n    \n    \n    defaultgeneralratetype\n    \n as \n    \n    defaultgeneralratetype\n    \n, \n    \n    \n    eliminationalgo\n    \n as \n    \n    eliminationalgo\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includeinrevaldefault\n    \n as \n    \n    includeinrevaldefault\n    \n, \n    \n    \n    internalid\n    \n as \n    \n    internalid\n    \n, \n    \n    \n        \n            \n            \"left\"\n            \n        \n    \n as \n    \n        \n            \n            \"left\"\n            \n        \n    \n, \n    \n    \n    longname\n    \n as \n    \n    longname\n    \n, \n    \n    \n    seqnum\n    \n as \n    \n    seqnum\n    \n, \n    \n    \n    usercanchangerevaloption\n    \n as \n    \n    usercanchangerevaloption\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        id as account_type_id,\n        balancesheet = 'T' as is_balancesheet,\"left\"= 'T' as is_leftside,\n        longname as type_name\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.521565Z", "completed_at": "2024-03-19T16:00:19.784265Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.786162Z", "completed_at": "2024-03-19T16:00:19.786167Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.30061817169189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_period_fiscal_cal", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountingperiod\n    \n as \n    \n    accountingperiod\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    fiscalcalendar\n    \n as \n    \n    fiscalcalendar\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        accountingperiod as accounting_period_id,\n        fiscalcalendar as fiscal_calendar_id,\n        parent as parent_id\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.509958Z", "completed_at": "2024-03-19T16:00:19.784764Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.786670Z", "completed_at": "2024-03-19T16:00:19.786673Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3088109493255615, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_book_subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        accountingbook as accounting_book_id,\n        status,\n        subsidiary as subsidiary_id\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.516629Z", "completed_at": "2024-03-19T16:00:19.783664Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:19.785492Z", "completed_at": "2024-03-19T16:00:19.785496Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.30235719680786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_books", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    basebook\n    \n as \n    \n    basebook\n    \n, \n    cast(null as TEXT) as \n    \n    contingentrevenuehandling\n    \n , \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    effectiveperiod\n    \n as \n    \n    effectiveperiod\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isadjustmentonly\n    \n as \n    \n    isadjustmentonly\n    \n, \n    \n    \n    isconsolidated\n    \n as \n    \n    isconsolidated\n    \n, \n    \n    \n    isprimary\n    \n as \n    \n    isprimary\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subsidiariesstring\n    \n as \n    \n    subsidiariesstring\n    \n, \n    cast(null as TEXT) as \n    \n    twosteprevenueallocation\n    \n , \n    cast(null as TEXT) as \n    \n    unbilledreceivablegrouping\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as accounting_book_id,\n        name as accounting_book_name,\n        basebook as base_book_id,\n        effectiveperiod as effective_period_id,\n        isadjustmentonly = 'T' as is_adjustment_only,\n        isconsolidated = 'T' as is_consolidated,\n        contingentrevenuehandling as is_contingent_revenue_handling,\n        isprimary = 'T' as is_primary,\n        twosteprevenueallocation as is_two_step_revenue_allocation\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.809850Z", "completed_at": "2024-03-19T16:00:20.049577Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.050256Z", "completed_at": "2024-03-19T16:00:20.050266Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2910468578338623, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_periods", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    alllocked\n    \n as \n    \n    alllocked\n    \n, \n    \n    \n    allownonglchanges\n    \n as \n    \n    allownonglchanges\n    \n, \n    \n    \n    aplocked\n    \n as \n    \n    aplocked\n    \n, \n    \n    \n    arlocked\n    \n as \n    \n    arlocked\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    \n    \n    closedondate\n    \n as \n    \n    closedondate\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    enddate\n    \n as \n    \n    enddate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isadjust\n    \n as \n    \n    isadjust\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isposting\n    \n as \n    \n    isposting\n    \n, \n    \n    \n    isquarter\n    \n as \n    \n    isquarter\n    \n, \n    \n    \n    isyear\n    \n as \n    \n    isyear\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    periodname\n    \n as \n    \n    periodname\n    \n, \n    \n    \n    startdate\n    \n as \n    \n    startdate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as accounting_period_id,\n        parent as parent_id, \n        periodname as name,\n        startdate as starting_at,\n        enddate as ending_at,\n        closedondate as closed_at,\n        isquarter = 'T' as is_quarter,\n        isyear = 'T' as is_year,\n        isadjust = 'T' as is_adjustment,\n        isposting = 'T' as is_posting,\n        closed = 'T' as is_closed,\n        alllocked = 'T' as is_all_locked,\n        arlocked = 'T' as is_ar_locked,\n        aplocked = 'T' as is_ap_locked\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.825158Z", "completed_at": "2024-03-19T16:00:20.100898Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.102749Z", "completed_at": "2024-03-19T16:00:20.102755Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3059728145599365, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    acctnumber\n    \n as \n    \n    acctnumber\n    \n, \n    \n    \n    accttype\n    \n as \n    \n    accttype\n    \n, \n    \n    \n    sspecacct\n    \n as \n    \n    sspecacct\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    accountsearchdisplaynamecopy\n    \n as \n    \n    accountsearchdisplaynamecopy\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    deferralacct\n    \n as \n    \n    deferralacct\n    \n, \n    \n    \n    cashflowrate\n    \n as \n    \n    cashflowrate\n    \n, \n    \n    \n    generalrate\n    \n as \n    \n    generalrate\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    includechildren\n    \n as \n    \n    includechildren\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    issummary\n    \n as \n    \n    issummary\n    \n, \n    \n    \n    eliminate\n    \n as \n    \n    eliminate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as account_id, \n        externalid as account_external_id,\n        parent as parent_id,\n        acctnumber as account_number,\n        accttype as account_type_id,\n        sspecacct as special_account_type_id,\n        fullname as name,\n        accountsearchdisplaynamecopy as display_name,\n        description as account_description,\n        deferralacct as deferral_account_id,\n        cashflowrate as cash_flow_rate_type,\n        generalrate as general_rate_type,\n        currency as currency_id,\n        class as class_id,\n        department as department_id,\n        location as location_id,\n        includechildren = 'T' as is_including_child_subs,\n        isinactive = 'T' as is_inactive,\n        issummary = 'T' as is_summary,\n        eliminate = 'T' as is_eliminate,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your accounts_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.829216Z", "completed_at": "2024-03-19T16:00:20.101735Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.107358Z", "completed_at": "2024-03-19T16:00:20.107362Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3131101131439209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__consolidated_exchange_rates", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    averagerate\n    \n as \n    \n    averagerate\n    \n, \n    \n    \n    currentrate\n    \n as \n    \n    currentrate\n    \n, \n    \n    \n    fromcurrency\n    \n as \n    \n    fromcurrency\n    \n, \n    \n    \n    fromsubsidiary\n    \n as \n    \n    fromsubsidiary\n    \n, \n    \n    \n    historicalrate\n    \n as \n    \n    historicalrate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    postingperiod\n    \n as \n    \n    postingperiod\n    \n, \n    \n    \n    tocurrency\n    \n as \n    \n    tocurrency\n    \n, \n    \n    \n    tosubsidiary\n    \n as \n    \n    tosubsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as consolidated_exchange_rate_id,\n        postingperiod as accounting_period_id,\n        fromcurrency as from_currency_id,\n        fromsubsidiary as from_subsidiary_id,\n        tocurrency as to_currency_id,\n        tosubsidiary as to_subsidiary_id,\n        accountingbook as accounting_book_id,\n        currentrate as current_rate, \n        averagerate as average_rate,\n        historicalrate as historical_rate\n\n        --The below macro adds the fields defined within your consolidated_exchange_rates_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:19.820307Z", "completed_at": "2024-03-19T16:00:20.188686Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.189242Z", "completed_at": "2024-03-19T16:00:20.189250Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.39798593521118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__classes", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as class_id,\n        externalid as class_external_id,\n        name,\n        fullname as full_name,\n        isinactive = 'T' as is_inactive,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your classes_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.103038Z", "completed_at": "2024-03-19T16:00:20.367929Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.368709Z", "completed_at": "2024-03-19T16:00:20.368722Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.29153990745544434, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__currencies", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    currencyprecision\n    \n as \n    \n    currencyprecision\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    displaysymbol\n    \n as \n    \n    displaysymbol\n    \n, \n    \n    \n    exchangerate\n    \n as \n    \n    exchangerate\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fxrateupdatetimezone\n    \n as \n    \n    fxrateupdatetimezone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includeinfxrateupdates\n    \n as \n    \n    includeinfxrateupdates\n    \n, \n    \n    \n    isbasecurrency\n    \n as \n    \n    isbasecurrency\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    overridecurrencyformat\n    \n as \n    \n    overridecurrencyformat\n    \n, \n    \n    \n    symbol\n    \n as \n    \n    symbol\n    \n, \n    \n    \n    symbolplacement\n    \n as \n    \n    symbolplacement\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as currency_id,\n        name,\n        symbol\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.133815Z", "completed_at": "2024-03-19T16:00:20.381874Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.382861Z", "completed_at": "2024-03-19T16:00:20.382872Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.27149391174316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__departments", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as department_id,\n        parent as parent_id,\n        name,\n        fullname as full_name,\n        subsidiary as subsidiary_id,\n        isinactive = 'T' as is_inactive,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your departments_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.218319Z", "completed_at": "2024-03-19T16:00:20.467151Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.467673Z", "completed_at": "2024-03-19T16:00:20.467684Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2739839553833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entities", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    altemail\n    \n as \n    \n    altemail\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    altphone\n    \n as \n    \n    altphone\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    employee\n    \n as \n    \n    employee\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fax\n    \n as \n    \n    fax\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    genericresource\n    \n as \n    \n    genericresource\n    \n, \n    \n    \n    homephone\n    \n as \n    \n    homephone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    laborcost\n    \n as \n    \n    laborcost\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    middlename\n    \n as \n    \n    middlename\n    \n, \n    \n    \n    mobilephone\n    \n as \n    \n    mobilephone\n    \n, \n    \n    \n    othername\n    \n as \n    \n    othername\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    partner\n    \n as \n    \n    partner\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    project\n    \n as \n    \n    project\n    \n, \n    \n    \n    projecttemplate\n    \n as \n    \n    projecttemplate\n    \n, \n    \n    \n    salutation\n    \n as \n    \n    salutation\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    toplevelparent\n    \n as \n    \n    toplevelparent\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as entity_id,\n        parent as parent_id,\n        entitytitle as entity_name,\n        type as entity_type,\n        isperson = 'T' as is_person,\n        contact as contact_id,\n        customer as customer_id,\n        employee as employee_id,\n        project as job_id,\n        vendor as vendor_id\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.126468Z", "completed_at": "2024-03-19T16:00:20.565133Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.565710Z", "completed_at": "2024-03-19T16:00:20.565716Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.45838403701782227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__customers", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    receivablesaccount\n    \n as \n    \n    receivablesaccount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    firstorderdate\n    \n as \n    \n    firstorderdate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as customer_id,\n        entityid as entity_id,\n        externalid as customer_external_id,\n        parent as parent_id,\n        isperson = 'T' as is_person,\n        companyname as company_name,\n        firstname as first_name,\n        lastname as last_name,\n        email as email_address,\n        phone as phone_number,\n        defaultbillingaddress as default_billing_address_id,\n        defaultshippingaddress as default_shipping_address_id,\n        receivablesaccount as receivables_account_id,\n        currency as currency_id,\n        firstorderdate as date_first_order_at\n\n        --The below macro adds the fields defined within your customers_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.406264Z", "completed_at": "2024-03-19T16:00:20.708360Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.708829Z", "completed_at": "2024-03-19T16:00:20.708833Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.32459592819213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__items", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as integer) as \n    \n    alternatedemandsourceitem\n    \n , \n    cast(null as integer) as \n    \n    amortizationperiod\n    \n , \n    cast(null as integer) as \n    \n    amortizationtemplate\n    \n , \n    \n    \n    assetaccount\n    \n as \n    \n    assetaccount\n    \n, \n    cast(null as TEXT) as \n    \n    atpmethod\n    \n , \n    cast(null as TEXT) as \n    \n    autoexpandkitforrevenuemgmt\n    \n , \n    cast(null as float) as \n    \n    averagecost\n    \n , \n    cast(null as integer) as \n    \n    backwardconsumptiondays\n    \n , \n    cast(null as integer) as \n    \n    billexchratevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    billingschedule\n    \n , \n    cast(null as integer) as \n    \n    billpricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    billqtyvarianceacct\n    \n , \n    cast(null as TEXT) as \n    \n    buildentireassembly\n    \n , \n    cast(null as float) as \n    \n    buildtime\n    \n , \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    cast(null as integer) as \n    \n    consumptionunit\n    \n , \n    cast(null as TEXT) as \n    \n    copydescription\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as float) as \n    \n    costestimate\n    \n , \n    cast(null as TEXT) as \n    \n    costestimatetype\n    \n , \n    cast(null as TEXT) as \n    \n    costingmethod\n    \n , \n    cast(null as TEXT) as \n    \n    costingmethoddisplay\n    \n , \n    cast(null as TEXT) as \n    \n    countryofmanufacture\n    \n , \n    cast(null as timestamp) as \n    \n    createddate\n    \n , \n    cast(null as integer) as \n    \n    createexpenseplanson\n    \n , \n    cast(null as TEXT) as \n    \n    createjob\n    \n , \n    cast(null as integer) as \n    \n    createrevenueplanson\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    \n    \n    deferralaccount\n    \n as \n    \n    deferralaccount\n    \n, \n    cast(null as integer) as \n    \n    deferredrevenueaccount\n    \n , \n    cast(null as TEXT) as \n    \n    deferrevrec\n    \n , \n    cast(null as float) as \n    \n    demandmodifier\n    \n , \n    cast(null as TEXT) as \n    \n    demandsource\n    \n , \n    cast(null as integer) as \n    \n    demandtimefence\n    \n , \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    cast(null as TEXT) as \n    \n    directrevenueposting\n    \n , \n    cast(null as TEXT) as \n    \n    displayname\n    \n , \n    cast(null as integer) as \n    \n    dropshipexpenseaccount\n    \n , \n    cast(null as TEXT) as \n    \n    enforceminqtyinternally\n    \n , \n    cast(null as TEXT) as \n    \n    excludefromsitemap\n    \n , \n    \n    \n    expenseaccount\n    \n as \n    \n    expenseaccount\n    \n, \n    cast(null as integer) as \n    \n    expenseamortizationrule\n    \n , \n    cast(null as TEXT) as \n    \n    externalid\n    \n , \n    cast(null as float) as \n    \n    fixedlotsize\n    \n , \n    cast(null as integer) as \n    \n    forwardconsumptiondays\n    \n , \n    cast(null as TEXT) as \n    \n    froogleproductfeed\n    \n , \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    cast(null as float) as \n    \n    fxcost\n    \n , \n    \n    \n    gainlossaccount\n    \n as \n    \n    gainlossaccount\n    \n, \n    cast(null as TEXT) as \n    \n    generateaccruals\n    \n , \n    cast(null as float) as \n    \n    handlingcost\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as TEXT) as \n    \n    includechildren\n    \n , \n    \n    \n    incomeaccount\n    \n as \n    \n    incomeaccount\n    \n, \n    cast(null as integer) as \n    \n    intercodefrevaccount\n    \n , \n    cast(null as integer) as \n    \n    intercoexpenseaccount\n    \n , \n    cast(null as integer) as \n    \n    intercoincomeaccount\n    \n , \n    cast(null as TEXT) as \n    \n    isdropshipitem\n    \n , \n    cast(null as TEXT) as \n    \n    isfulfillable\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    islotitem\n    \n , \n    cast(null as TEXT) as \n    \n    isonline\n    \n , \n    cast(null as TEXT) as \n    \n    isphantom\n    \n , \n    cast(null as TEXT) as \n    \n    isserialitem\n    \n , \n    cast(null as TEXT) as \n    \n    isspecialorderitem\n    \n , \n    cast(null as TEXT) as \n    \n    isspecialworkorderitem\n    \n , \n    cast(null as TEXT) as \n    \n    itemid\n    \n , \n    cast(null as integer) as \n    \n    itemrevenuecategory\n    \n , \n    \n    \n    itemtype\n    \n as \n    \n    itemtype\n    \n, \n    cast(null as timestamp) as \n    \n    lastmodifieddate\n    \n , \n    cast(null as float) as \n    \n    lastpurchaseprice\n    \n , \n    cast(null as integer) as \n    \n    leadtime\n    \n , \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    cast(null as TEXT) as \n    \n    manufacturer\n    \n , \n    cast(null as TEXT) as \n    \n    matchbilltoreceipt\n    \n , \n    cast(null as TEXT) as \n    \n    matrixitemnametemplate\n    \n , \n    cast(null as TEXT) as \n    \n    matrixtype\n    \n , \n    cast(null as integer) as \n    \n    maximumquantity\n    \n , \n    cast(null as integer) as \n    \n    minimumquantity\n    \n , \n    cast(null as TEXT) as \n    \n    mpn\n    \n , \n    cast(null as TEXT) as \n    \n    nextagcategory\n    \n , \n    cast(null as TEXT) as \n    \n    nextagproductfeed\n    \n , \n    cast(null as TEXT) as \n    \n    overallquantitypricingtype\n    \n , \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    cast(null as integer) as \n    \n    periodiclotsizedays\n    \n , \n    cast(null as TEXT) as \n    \n    periodiclotsizetype\n    \n , \n    cast(null as integer) as \n    \n    preferredlocation\n    \n , \n    cast(null as integer) as \n    \n    pricinggroup\n    \n , \n    cast(null as TEXT) as \n    \n    printitems\n    \n , \n    cast(null as integer) as \n    \n    prodpricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    prodqtyvarianceacct\n    \n , \n    cast(null as integer) as \n    \n    projectexpensetype\n    \n , \n    cast(null as integer) as \n    \n    projecttemplate\n    \n , \n    cast(null as TEXT) as \n    \n    purchasedescription\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as integer) as \n    \n    purchasepricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    purchaseunit\n    \n , \n    cast(null as integer) as \n    \n    quantitypricingschedule\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    relateditemsdescription\n    \n , \n    cast(null as integer) as \n    \n    rescheduleindays\n    \n , \n    cast(null as integer) as \n    \n    rescheduleoutdays\n    \n , \n    cast(null as float) as \n    \n    residual\n    \n , \n    cast(null as integer) as \n    \n    revenueallocationgroup\n    \n , \n    cast(null as integer) as \n    \n    revenuerecognitionrule\n    \n , \n    cast(null as integer) as \n    \n    revrecforecastrule\n    \n , \n    cast(null as integer) as \n    \n    revreclassfxaccount\n    \n , \n    cast(null as TEXT) as \n    \n    roundupascomponent\n    \n , \n    cast(null as float) as \n    \n    safetystocklevel\n    \n , \n    cast(null as integer) as \n    \n    saleunit\n    \n , \n    cast(null as integer) as \n    \n    scrapacct\n    \n , \n    cast(null as TEXT) as \n    \n    searchkeywords\n    \n , \n    cast(null as TEXT) as \n    \n    seasonaldemand\n    \n , \n    cast(null as TEXT) as \n    \n    shipindividually\n    \n , \n    cast(null as integer) as \n    \n    shippackage\n    \n , \n    cast(null as float) as \n    \n    shippingcost\n    \n , \n    cast(null as TEXT) as \n    \n    shoppingdotcomcategory\n    \n , \n    cast(null as TEXT) as \n    \n    shoppingproductfeed\n    \n , \n    cast(null as integer) as \n    \n    shopzillacategoryid\n    \n , \n    cast(null as TEXT) as \n    \n    shopzillaproductfeed\n    \n , \n    cast(null as TEXT) as \n    \n    sitemappriority\n    \n , \n    cast(null as TEXT) as \n    \n    stockdescription\n    \n , \n    cast(null as integer) as \n    \n    stockunit\n    \n , \n    cast(null as TEXT) as \n    \n    storedescription\n    \n , \n    cast(null as integer) as \n    \n    storedisplayimage\n    \n , \n    cast(null as TEXT) as \n    \n    storedisplayname\n    \n , \n    cast(null as integer) as \n    \n    storedisplaythumbnail\n    \n , \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    cast(null as TEXT) as \n    \n    subtype\n    \n , \n    cast(null as TEXT) as \n    \n    supplylotsizingmethod\n    \n , \n    cast(null as TEXT) as \n    \n    supplyreplenishmentmethod\n    \n , \n    cast(null as integer) as \n    \n    supplytimefence\n    \n , \n    cast(null as TEXT) as \n    \n    supplytype\n    \n , \n    cast(null as float) as \n    \n    totalquantityonhand\n    \n , \n    cast(null as float) as \n    \n    totalvalue\n    \n , \n    cast(null as float) as \n    \n    transferprice\n    \n , \n    cast(null as integer) as \n    \n    unbuildvarianceaccount\n    \n , \n    cast(null as integer) as \n    \n    unitstype\n    \n , \n    cast(null as TEXT) as \n    \n    upccode\n    \n , \n    cast(null as TEXT) as \n    \n    usebins\n    \n , \n    cast(null as TEXT) as \n    \n    usemarginalrates\n    \n , \n    cast(null as TEXT) as \n    \n    vendorname\n    \n , \n    cast(null as integer) as \n    \n    vendreturnvarianceaccount\n    \n , \n    cast(null as TEXT) as \n    \n    vsoedelivered\n    \n , \n    cast(null as TEXT) as \n    \n    vsoepermitdiscount\n    \n , \n    cast(null as TEXT) as \n    \n    vsoesopgroup\n    \n , \n    cast(null as float) as \n    \n    weight\n    \n , \n    cast(null as integer) as \n    \n    weightunit\n    \n , \n    cast(null as TEXT) as \n    \n    weightunits\n    \n , \n    cast(null as integer) as \n    \n    wipacct\n    \n , \n    cast(null as integer) as \n    \n    wipvarianceacct\n    \n , \n    cast(null as TEXT) as \n    \n    yahooproductfeed\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as item_id,\n        fullname as name,\n        itemtype as type_name,\n        description as sales_description,\n        department as department_id,\n        class as class_id,\n        location as location_id,\n        subsidiary as subsidiary_id,\n        assetaccount as asset_account_id,\n        expenseaccount as expense_account_id,\n        gainlossaccount as gain_loss_account_id,\n        incomeaccount as income_account_id,\n        intercoexpenseaccount as interco_expense_account_id,\n        intercoincomeaccount as interco_income_account_id,\n        deferralaccount as deferred_expense_account_id,\n        deferredrevenueaccount as deferred_revenue_account_id,\n        parent as parent_item_id\n\n        --The below macro adds the fields defined within your items_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.394689Z", "completed_at": "2024-03-19T16:00:20.707455Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.707925Z", "completed_at": "2024-03-19T16:00:20.707933Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3374490737915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entity_address", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entity_address_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    addr1\n    \n as \n    \n    addr1\n    \n, \n    \n    \n    addr2\n    \n as \n    \n    addr2\n    \n, \n    \n    \n    addr3\n    \n as \n    \n    addr3\n    \n, \n    \n    \n    addressee\n    \n as \n    \n    addressee\n    \n, \n    \n    \n    addrphone\n    \n as \n    \n    addrphone\n    \n, \n    \n    \n    addrtext\n    \n as \n    \n    addrtext\n    \n, \n    \n    \n    attention\n    \n as \n    \n    attention\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    dropdownstate\n    \n as \n    \n    dropdownstate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    nkey\n    \n as \n    \n    nkey\n    \n, \n    \n    \n    override\n    \n as \n    \n    override\n    \n, \n    \n    \n    recordowner\n    \n as \n    \n    recordowner\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        addr1,\n        addr2,\n        addr3,\n        addressee,\n        addrtext as full_address,\n        city,\n        country,\n        coalesce(state, dropdownstate) as state,\n        nkey,\n        zip as zipcode\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entity_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.492851Z", "completed_at": "2024-03-19T16:00:20.773216Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.773703Z", "completed_at": "2024-03-19T16:00:20.773710Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3020009994506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__jobs", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountnumber\n    \n as \n    \n    accountnumber\n    \n, \n    \n    \n    actualtime\n    \n as \n    \n    actualtime\n    \n, \n    \n    \n    allowallresourcesfortasks\n    \n as \n    \n    allowallresourcesfortasks\n    \n, \n    \n    \n    allowexpenses\n    \n as \n    \n    allowexpenses\n    \n, \n    \n    \n    allowtime\n    \n as \n    \n    allowtime\n    \n, \n    \n    \n    alternatecontact\n    \n as \n    \n    alternatecontact\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    billingschedule\n    \n as \n    \n    billingschedule\n    \n, \n    \n    \n    calculatedenddate\n    \n as \n    \n    calculatedenddate\n    \n, \n    \n    \n    calculatedenddatebaseline\n    \n as \n    \n    calculatedenddatebaseline\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    contactlist\n    \n as \n    \n    contactlist\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    currencyprecision\n    \n as \n    \n    currencyprecision\n    \n, \n    \n    \n    custentity1\n    \n as \n    \n    custentity1\n    \n, \n    \n    \n    custentity4\n    \n as \n    \n    custentity4\n    \n, \n    \n    \n    custentity5\n    \n as \n    \n    custentity5\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    enddate\n    \n as \n    \n    enddate\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitystatus\n    \n as \n    \n    entitystatus\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    estimatedcost\n    \n as \n    \n    estimatedcost\n    \n, \n    \n    \n    estimatedgrossprofit\n    \n as \n    \n    estimatedgrossprofit\n    \n, \n    \n    \n    estimatedgrossprofitpercent\n    \n as \n    \n    estimatedgrossprofitpercent\n    \n, \n    \n    \n    estimatedlaborcost\n    \n as \n    \n    estimatedlaborcost\n    \n, \n    \n    \n    estimatedlaborcostbaseline\n    \n as \n    \n    estimatedlaborcostbaseline\n    \n, \n    \n    \n    estimatedlaborrevenue\n    \n as \n    \n    estimatedlaborrevenue\n    \n, \n    \n    \n    estimatedrevenue\n    \n as \n    \n    estimatedrevenue\n    \n, \n    \n    \n    estimatedtime\n    \n as \n    \n    estimatedtime\n    \n, \n    \n    \n    estimatedtimeoverride\n    \n as \n    \n    estimatedtimeoverride\n    \n, \n    \n    \n    estimatedtimeoverridebaseline\n    \n as \n    \n    estimatedtimeoverridebaseline\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    files\n    \n as \n    \n    files\n    \n, \n    \n    \n    forecastchargerunondemand\n    \n as \n    \n    forecastchargerunondemand\n    \n, \n    \n    \n    fxrate\n    \n as \n    \n    fxrate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includecrmtasksintotals\n    \n as \n    \n    includecrmtasksintotals\n    \n, \n    \n    \n    isexempttime\n    \n as \n    \n    isexempttime\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isproductivetime\n    \n as \n    \n    isproductivetime\n    \n, \n    \n    \n    isutilizedtime\n    \n as \n    \n    isutilizedtime\n    \n, \n    \n    \n    jobbillingtype\n    \n as \n    \n    jobbillingtype\n    \n, \n    \n    \n    jobitem\n    \n as \n    \n    jobitem\n    \n, \n    \n    \n    jobprice\n    \n as \n    \n    jobprice\n    \n, \n    \n    \n    jobtype\n    \n as \n    \n    jobtype\n    \n, \n    \n    \n    lastbaselinedate\n    \n as \n    \n    lastbaselinedate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    limittimetoassignees\n    \n as \n    \n    limittimetoassignees\n    \n, \n    \n    \n    materializetime\n    \n as \n    \n    materializetime\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    percentcomplete\n    \n as \n    \n    percentcomplete\n    \n, \n    \n    \n    percenttimecomplete\n    \n as \n    \n    percenttimecomplete\n    \n, \n    \n    \n    primarycontact\n    \n as \n    \n    primarycontact\n    \n, \n    \n    \n    projectedenddate\n    \n as \n    \n    projectedenddate\n    \n, \n    \n    \n    projectedenddatebaseline\n    \n as \n    \n    projectedenddatebaseline\n    \n, \n    \n    \n    projectmanager\n    \n as \n    \n    projectmanager\n    \n, \n    \n    \n    startdate\n    \n as \n    \n    startdate\n    \n, \n    \n    \n    startdatebaseline\n    \n as \n    \n    startdatebaseline\n    \n, \n    \n    \n    timeapproval\n    \n as \n    \n    timeapproval\n    \n, \n    \n    \n    timeremaining\n    \n as \n    \n    timeremaining\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        id as job_id,\n        externalid as job_external_id,\n        customer as customer_id,\n        entityid as entity_id,\n        defaultbillingaddress as billing_address_id,\n        defaultshippingaddress as shipping_address_id,\n        parent as parent_id\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.585470Z", "completed_at": "2024-03-19T16:00:20.979009Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:20.980044Z", "completed_at": "2024-03-19T16:00:20.980054Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.41747117042541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__location_main_address", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__location_main_address_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    addr1\n    \n as \n    \n    addr1\n    \n, \n    \n    \n    addr2\n    \n as \n    \n    addr2\n    \n, \n    \n    \n    addr3\n    \n as \n    \n    addr3\n    \n, \n    \n    \n    addressee\n    \n as \n    \n    addressee\n    \n, \n    \n    \n    addrphone\n    \n as \n    \n    addrphone\n    \n, \n    \n    \n    addrtext\n    \n as \n    \n    addrtext\n    \n, \n    \n    \n    attention\n    \n as \n    \n    attention\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    dropdownstate\n    \n as \n    \n    dropdownstate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    nkey\n    \n as \n    \n    nkey\n    \n, \n    \n    \n    override\n    \n as \n    \n    override\n    \n, \n    \n    \n    recordowner\n    \n as \n    \n    recordowner\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        addr1,\n        addr2,\n        addr3,\n        addressee,\n        addrtext as full_address,\n        city,\n        country,\n        coalesce(state, dropdownstate) as state,\n        nkey,\n        zip as zipcode\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__location_main_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.732795Z", "completed_at": "2024-03-19T16:00:20.999905Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.000606Z", "completed_at": "2024-03-19T16:00:21.000614Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.29473400115966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__locations", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    mainaddress\n    \n as \n    \n    mainaddress\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as location_id,\n        name,\n        fullname as full_name,\n        mainaddress as main_address_id,\n        parent as parent_id,\n        subsidiary as subsidiary_id\n\n        --The below macro adds the fields defined within your locations_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.795618Z", "completed_at": "2024-03-19T16:00:21.055142Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.055831Z", "completed_at": "2024-03-19T16:00:21.055839Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2903330326080322, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_accounting_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account\n    \n as \n    \n    account\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amountlinked\n    \n as \n    \n    amountlinked\n    \n, \n    \n    \n    amountpaid\n    \n as \n    \n    amountpaid\n    \n, \n    \n    \n    amountunpaid\n    \n as \n    \n    amountunpaid\n    \n, \n    \n    \n    credit\n    \n as \n    \n    credit\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    debit\n    \n as \n    \n    debit\n    \n, \n    \n    \n    exchangerate\n    \n as \n    \n    exchangerate\n    \n, \n    \n    \n    netamount\n    \n as \n    \n    netamount\n    \n, \n    \n    \n    overheadparentitem\n    \n as \n    \n    overheadparentitem\n    \n, \n    \n    \n    paymentamountunused\n    \n as \n    \n    paymentamountunused\n    \n, \n    \n    \n    paymentamountused\n    \n as \n    \n    paymentamountused\n    \n, \n    \n    \n    posting\n    \n as \n    \n    posting\n    \n, \n    \n    \n    transaction\n    \n as \n    \n    transaction\n    \n, \n    \n    \n    transactionline\n    \n as \n    \n    transactionline\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        transaction as transaction_id,\n        transactionline as transaction_line_id,\n        accountingbook as accounting_book_id,\n        account as account_id,\n        posting = 'T' as is_posting,\n        exchangerate as exchange_rate,\n        amount,\n        credit as credit_amount,\n        debit as debit_amount,\n        netamount as net_amount,\n        amountpaid as paid_amount,\n        amountunpaid as unpaid_amount\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:20.761620Z", "completed_at": "2024-03-19T16:00:21.147466Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.148211Z", "completed_at": "2024-03-19T16:00:21.148221Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4421577453613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    mainaddress\n    \n as \n    \n    mainaddress\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    fiscalcalendar\n    \n as \n    \n    fiscalcalendar\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    iselimination\n    \n as \n    \n    iselimination\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as subsidiary_id,\n        name,\n        fullname as full_name,\n        email as email_address,\n        mainaddress as main_address_id,\n        country,\n        state,\n        fiscalcalendar as fiscal_calendar_id,\n        parent as parent_id,\n        iselimination = 'T' as is_elimination,\n        currency as currency_id\n\n        --The below macro adds the fields defined within your subsidiaries_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.004048Z", "completed_at": "2024-03-19T16:00:21.242463Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.243193Z", "completed_at": "2024-03-19T16:00:21.243200Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2670328617095947, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    transaction\n    \n as \n    \n    transaction\n    \n, \n    \n    \n    linesequencenumber\n    \n as \n    \n    linesequencenumber\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    entity\n    \n as \n    \n    entity\n    \n, \n    \n    \n    item\n    \n as \n    \n    item\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    isclosed\n    \n as \n    \n    isclosed\n    \n, \n    \n    \n    isbillable\n    \n as \n    \n    isbillable\n    \n, \n    \n    \n    iscogs\n    \n as \n    \n    iscogs\n    \n, \n    \n    \n    cleared\n    \n as \n    \n    cleared\n    \n, \n    \n    \n    commitmentfirm\n    \n as \n    \n    commitmentfirm\n    \n, \n    \n    \n    mainline\n    \n as \n    \n    mainline\n    \n, \n    \n    \n    taxline\n    \n as \n    \n    taxline\n    \n, \n    \n    \n    eliminate\n    \n as \n    \n    eliminate\n    \n, \n    \n    \n    netamount\n    \n as \n    \n    netamount\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as transaction_line_id,\n        transaction as transaction_id,\n        linesequencenumber as transaction_line_number,\n        memo,\n        entity as entity_id,\n        item as item_id,\n        class as class_id,\n        location as location_id,\n        subsidiary as subsidiary_id,\n        department as department_id,\n        isclosed = 'T' as is_closed,\n        isbillable = 'T' as is_billable,\n        iscogs = 'T' as is_cogs,\n        cleared = 'T' as is_cleared,\n        commitmentfirm = 'T' as is_commitment_firm,\n        mainline = 'T' as is_main_line,\n        taxline = 'T' as is_tax_line,\n        eliminate = 'T' as is_eliminate,\n        netamount\n\n        --The below macro adds the fields defined within your transaction_lines_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.086640Z", "completed_at": "2024-03-19T16:00:21.337271Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.338059Z", "completed_at": "2024-03-19T16:00:21.338068Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.27463507652282715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendor_categories", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    istaxagency\n    \n as \n    \n    istaxagency\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as vendor_category_id,\n        name,\n        _fivetran_synced\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.028219Z", "completed_at": "2024-03-19T16:00:21.416437Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.417028Z", "completed_at": "2024-03-19T16:00:21.417036Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.43828392028808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transactions", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    transactionnumber\n    \n as \n    \n    transactionnumber\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    trandate\n    \n as \n    \n    trandate\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    createddate\n    \n as \n    \n    createddate\n    \n, \n    \n    \n    duedate\n    \n as \n    \n    duedate\n    \n, \n    \n    \n    closedate\n    \n as \n    \n    closedate\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    entity\n    \n as \n    \n    entity\n    \n, \n    \n    \n    postingperiod\n    \n as \n    \n    postingperiod\n    \n, \n    \n    \n    posting\n    \n as \n    \n    posting\n    \n, \n    cast(null as TEXT) as \n    \n    intercoadj\n    \n , \n    \n    \n    isreversal\n    \n as \n    \n    isreversal\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as transaction_id,\n        transactionnumber as transaction_number,\n        type as transaction_type,\n        memo,\n        trandate as transaction_date,\n        status,\n        createddate as created_at,\n        duedate as due_date_at,\n        closedate as closed_at,\n        currency as currency_id,\n        entity as entity_id,\n        postingperiod as accounting_period_id,\n        posting = 'T' as is_posting,\n        intercoadj = 'T' as is_intercompany_adjustment,\n        isreversal = 'T' as is_reversal\n\n        --The below macro adds the fields defined within your transactions_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.176558Z", "completed_at": "2024-03-19T16:00:21.467468Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.472837Z", "completed_at": "2024-03-19T16:00:21.472845Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.32265400886535645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendors", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountnumber\n    \n as \n    \n    accountnumber\n    \n, \n    \n    \n    altemail\n    \n as \n    \n    altemail\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    altphone\n    \n as \n    \n    altphone\n    \n, \n    \n    \n    balance\n    \n as \n    \n    balance\n    \n, \n    \n    \n    balanceprimary\n    \n as \n    \n    balanceprimary\n    \n, \n    cast(null as integer) as \n    \n    billingclass\n    \n , \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    contactlist\n    \n as \n    \n    contactlist\n    \n, \n    \n    \n    creditlimit\n    \n as \n    \n    creditlimit\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    defaultbankaccount\n    \n as \n    \n    defaultbankaccount\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    defaultvendorpaymentaccount\n    \n as \n    \n    defaultvendorpaymentaccount\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    emailpreference\n    \n as \n    \n    emailpreference\n    \n, \n    \n    \n    emailtransactions\n    \n as \n    \n    emailtransactions\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    expenseaccount\n    \n as \n    \n    expenseaccount\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fax\n    \n as \n    \n    fax\n    \n, \n    \n    \n    faxtransactions\n    \n as \n    \n    faxtransactions\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    giveaccess\n    \n as \n    \n    giveaccess\n    \n, \n    \n    \n    homephone\n    \n as \n    \n    homephone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    incoterm\n    \n as \n    \n    incoterm\n    \n, \n    cast(null as TEXT) as \n    \n    isautogeneratedrepresentingentity\n    \n , \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isjobresourcevend\n    \n as \n    \n    isjobresourcevend\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    laborcost\n    \n as \n    \n    laborcost\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    legalname\n    \n as \n    \n    legalname\n    \n, \n    \n    \n    middlename\n    \n as \n    \n    middlename\n    \n, \n    \n    \n    mobilephone\n    \n as \n    \n    mobilephone\n    \n, \n    \n    \n    payablesaccount\n    \n as \n    \n    payablesaccount\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    printoncheckas\n    \n as \n    \n    printoncheckas\n    \n, \n    \n    \n    printtransactions\n    \n as \n    \n    printtransactions\n    \n, \n    \n    \n    purchaseorderamount\n    \n as \n    \n    purchaseorderamount\n    \n, \n    \n    \n    purchaseorderquantity\n    \n as \n    \n    purchaseorderquantity\n    \n, \n    \n    \n    purchaseorderquantitydiff\n    \n as \n    \n    purchaseorderquantitydiff\n    \n, \n    \n    \n    receiptamount\n    \n as \n    \n    receiptamount\n    \n, \n    \n    \n    receiptquantity\n    \n as \n    \n    receiptquantity\n    \n, \n    \n    \n    receiptquantitydiff\n    \n as \n    \n    receiptquantitydiff\n    \n, \n    cast(null as integer) as \n    \n    representingsubsidiary\n    \n , \n    \n    \n    rolesforsearch\n    \n as \n    \n    rolesforsearch\n    \n, \n    \n    \n    salutation\n    \n as \n    \n    salutation\n    \n, \n    \n    \n    subsidiaryedition\n    \n as \n    \n    subsidiaryedition\n    \n, \n    \n    \n    terms\n    \n as \n    \n    terms\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    unbilledorders\n    \n as \n    \n    unbilledorders\n    \n, \n    \n    \n    unbilledordersprimary\n    \n as \n    \n    unbilledordersprimary\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    workcalendar\n    \n as \n    \n    workcalendar\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as vendor_id,\n        companyname as company_name,\n        datecreated as create_date_at,\n        category as vendor_category_id\n\n        --The below macro adds the fields defined within your vendors_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.272264Z", "completed_at": "2024-03-19T16:00:21.513566Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.514078Z", "completed_at": "2024-03-19T16:00:21.514088Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2764699459075928, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_books", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    accounting_book_extid\n    \n , \n    \n    \n    accounting_book_id\n    \n as \n    \n    accounting_book_id\n    \n, \n    cast(null as TEXT) as \n    \n    accounting_book_name\n    \n , \n    cast(null as float) as \n    \n    base_book_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_created\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as float) as \n    \n    effective_period_id\n    \n , \n    cast(null as TEXT) as \n    \n    form_template_component_id\n    \n , \n    cast(null as float) as \n    \n    form_template_id\n    \n , \n    cast(null as TEXT) as \n    \n    is_adjustment_only\n    \n , \n    cast(null as TEXT) as \n    \n    is_arrangement_level_reclass\n    \n , \n    cast(null as TEXT) as \n    \n    is_consolidated\n    \n , \n    cast(null as TEXT) as \n    \n    is_contingent_revenue_handling\n    \n , \n    cast(null as TEXT) as \n    \n    is_include_child_subsidiaries\n    \n , \n    \n    \n    is_primary\n    \n as \n    \n    is_primary\n    \n, \n    cast(null as TEXT) as \n    \n    is_two_step_revenue_allocation\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    unbilled_receivable_grouping\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        accounting_book_id,\n        is_primary,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.467701Z", "completed_at": "2024-03-19T16:00:21.721210Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.721867Z", "completed_at": "2024-03-19T16:00:21.721876Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2781028747558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    \n    \n    general_rate_type\n    \n as \n    \n    general_rate_type\n    \n, \n    \n    \n    is_balancesheet\n    \n as \n    \n    is_balancesheet\n    \n, \n    \n    \n    is_leftside\n    \n as \n    \n    is_leftside\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    type_name\n    \n as \n    \n    type_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        account_id,\n        parent_id,\n        name,\n        type_name,\n        accountnumber as account_number,\n        general_rate_type,\n        is_leftside,\n        is_balancesheet,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your accounts_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.362346Z", "completed_at": "2024-03-19T16:00:21.780588Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.781203Z", "completed_at": "2024-03-19T16:00:21.781211Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4381129741668701, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_periods", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    cast(null as TEXT) as \n    \n    closed_accounts_payable\n    \n , \n    cast(null as TEXT) as \n    \n    closed_accounts_receivable\n    \n , \n    cast(null as TEXT) as \n    \n    closed_all\n    \n , \n    cast(null as timestamp) as \n    \n    closed_on\n    \n , \n    cast(null as TEXT) as \n    \n    closed_payroll\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    \n    \n    ending\n    \n as \n    \n    ending\n    \n, \n    \n    \n    fiscal_calendar_id\n    \n as \n    \n    fiscal_calendar_id\n    \n, \n    cast(null as TEXT) as \n    \n    fivetran_index\n    \n , \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    is_adjustment\n    \n as \n    \n    is_adjustment\n    \n, \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    locked_accounts_payable\n    \n , \n    cast(null as TEXT) as \n    \n    locked_accounts_receivable\n    \n , \n    cast(null as TEXT) as \n    \n    locked_all\n    \n , \n    cast(null as TEXT) as \n    \n    locked_payroll\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    \n    \n    quarter\n    \n as \n    \n    quarter\n    \n, \n    \n    \n    starting\n    \n as \n    \n    starting\n    \n, \n    \n    \n    year_0\n    \n as \n    \n    year_0\n    \n, \n    \n    \n    year_id\n    \n as \n    \n    year_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        accounting_period_id,\n        name,\n        full_name,\n        fiscal_calendar_id,\n        year_id,\n        starting as starting_at,\n        ending as ending_at,\n        quarter,\n        year_0,\n        is_adjustment,\n        closed as is_closed,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.549785Z", "completed_at": "2024-03-19T16:00:21.790482Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.791350Z", "completed_at": "2024-03-19T16:00:21.791359Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.26651906967163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__consolidated_exchange_rates", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accounting_book_id\n    \n as \n    \n    accounting_book_id\n    \n, \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    cast(null as float) as \n    \n    average_budget_rate\n    \n , \n    \n    \n    average_rate\n    \n as \n    \n    average_rate\n    \n, \n    \n    \n    consolidated_exchange_rate_id\n    \n as \n    \n    consolidated_exchange_rate_id\n    \n, \n    cast(null as float) as \n    \n    current_budget_rate\n    \n , \n    \n    \n    current_rate\n    \n as \n    \n    current_rate\n    \n, \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    \n    \n    from_subsidiary_id\n    \n as \n    \n    from_subsidiary_id\n    \n, \n    cast(null as float) as \n    \n    historical_budget_rate\n    \n , \n    \n    \n    historical_rate\n    \n as \n    \n    historical_rate\n    \n, \n    \n    \n    to_subsidiary_id\n    \n as \n    \n    to_subsidiary_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        consolidated_exchange_rate_id,\n        accounting_book_id,\n        accounting_period_id,\n        average_rate,\n        current_rate,\n        historical_rate,\n        from_subsidiary_id,\n        to_subsidiary_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your consolidated_exchange_rates_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.499444Z", "completed_at": "2024-03-19T16:00:21.913236Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.913808Z", "completed_at": "2024-03-19T16:00:21.913816Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.439100980758667, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__classes", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    class_id\n    \n as \n    \n    class_id\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        class_id,\n        full_name,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your classes_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.746498Z", "completed_at": "2024-03-19T16:00:21.981388Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:21.981933Z", "completed_at": "2024-03-19T16:00:21.981941Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2613837718963623, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__currencies", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    currency_extid\n    \n , \n    \n    \n    currency_id\n    \n as \n    \n    currency_id\n    \n, \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    is_inactive\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    precision_0\n    \n , \n    \n    \n    symbol\n    \n as \n    \n    symbol\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        currency_id,\n        name,\n        symbol,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.816716Z", "completed_at": "2024-03-19T16:00:22.100579Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.101193Z", "completed_at": "2024-03-19T16:00:22.101201Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3081657886505127, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__expense_accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as float) as \n    \n    current_balance\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    desription\n    \n , \n    cast(null as TEXT) as \n    \n    expense_account_extid\n    \n , \n    \n    \n    expense_account_id\n    \n as \n    \n    expense_account_id\n    \n, \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    is_including_child_subs\n    \n , \n    cast(null as TEXT) as \n    \n    is_summary\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        expense_account_id,\n        name,\n        parent_id,\n        account_number,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.939437Z", "completed_at": "2024-03-19T16:00:22.164020Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.164612Z", "completed_at": "2024-03-19T16:00:22.164619Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2436370849609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__departments", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    department_id\n    \n as \n    \n    department_id\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        department_id,\n        name,\n        full_name,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your departments_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:21.801333Z", "completed_at": "2024-03-19T16:00:22.198735Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.199306Z", "completed_at": "2024-03-19T16:00:22.199315Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4333009719848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__customers", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    cast(null as TEXT) as \n    \n    companyname\n    \n , \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    cast(null as TEXT) as \n    \n    customer_extid\n    \n , \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date_first_order\n    \n as \n    \n    date_first_order\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zipcode\n    \n as \n    \n    zipcode\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id,\n        companyname as company_name,\n        customer_extid as customer_external_id,\n        city,\n        state,\n        zipcode,\n        country,\n        date_first_order as date_first_order_at,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your customers_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.008642Z", "completed_at": "2024-03-19T16:00:22.234037Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.235487Z", "completed_at": "2024-03-19T16:00:22.235493Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.25981688499450684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__income_accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as float) as \n    \n    current_balance\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    desription\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    income_account_extid\n    \n , \n    \n    \n    income_account_id\n    \n as \n    \n    income_account_id\n    \n, \n    cast(null as TEXT) as \n    \n    is_including_child_subs\n    \n , \n    cast(null as TEXT) as \n    \n    is_summary\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        income_account_id,\n        name, \n        parent_id,\n        account_number,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.125954Z", "completed_at": "2024-03-19T16:00:22.435540Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.436041Z", "completed_at": "2024-03-19T16:00:22.436048Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.33384013175964355, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__items", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    allow_drop_ship\n    \n , \n    cast(null as float) as \n    \n    alt_demand_source_item_id\n    \n , \n    cast(null as float) as \n    \n    asset_account_id\n    \n , \n    cast(null as float) as \n    \n    atp_lead_time\n    \n , \n    cast(null as TEXT) as \n    \n    atp_method\n    \n , \n    cast(null as TEXT) as \n    \n    available_to_partners\n    \n , \n    cast(null as TEXT) as \n    \n    avatax_taxcode\n    \n , \n    cast(null as float) as \n    \n    averagecost\n    \n , \n    cast(null as float) as \n    \n    backward_consumption_days\n    \n , \n    cast(null as TEXT) as \n    \n    build_sub_assemblies\n    \n , \n    cast(null as float) as \n    \n    class_id\n    \n , \n    cast(null as float) as \n    \n    code_of_supply_id\n    \n , \n    cast(null as TEXT) as \n    \n    commodity_code\n    \n , \n    cast(null as float) as \n    \n    consumption_unit_id\n    \n , \n    cast(null as float) as \n    \n    cost_0\n    \n , \n    cast(null as TEXT) as \n    \n    cost_category\n    \n , \n    cast(null as TEXT) as \n    \n    cost_estimate_type\n    \n , \n    cast(null as TEXT) as \n    \n    costing_method\n    \n , \n    cast(null as TEXT) as \n    \n    country_of_manufacture\n    \n , \n    cast(null as TEXT) as \n    \n    create_plan_on_event_type\n    \n , \n    cast(null as timestamp) as \n    \n    created\n    \n , \n    cast(null as float) as \n    \n    current_on_order_count\n    \n , \n    cast(null as float) as \n    \n    custreturn_variance_account_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as timestamp) as \n    \n    date_of_last_transaction\n    \n , \n    cast(null as float) as \n    \n    default_return_cost\n    \n , \n    cast(null as float) as \n    \n    deferred_expense_account_id\n    \n , \n    cast(null as float) as \n    \n    deferred_revenue_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    demand_source\n    \n , \n    cast(null as float) as \n    \n    demand_time_fence\n    \n , \n    cast(null as float) as \n    \n    department_id\n    \n , \n    cast(null as TEXT) as \n    \n    deposit\n    \n , \n    cast(null as TEXT) as \n    \n    displayname\n    \n , \n    cast(null as TEXT) as \n    \n    distribution_category\n    \n , \n    cast(null as TEXT) as \n    \n    distribution_network\n    \n , \n    cast(null as float) as \n    \n    dropship_expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    effective_bom_control_type\n    \n , \n    cast(null as float) as \n    \n    expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    featureddescription\n    \n , \n    cast(null as TEXT) as \n    \n    featureditem\n    \n , \n    cast(null as float) as \n    \n    fixed_lot_size\n    \n , \n    cast(null as float) as \n    \n    forward_consumption_days\n    \n , \n    cast(null as TEXT) as \n    \n    fraud_risk\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as float) as \n    \n    fx_adjustment_account_id\n    \n , \n    cast(null as float) as \n    \n    gain_loss_account_id\n    \n , \n    cast(null as float) as \n    \n    handling_cost\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_hazard_class\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_id\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_item_units\n    \n , \n    cast(null as float) as \n    \n    hazmat_item_units_qty\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_packing_group\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_shipping_name\n    \n , \n    cast(null as TEXT) as \n    \n    include_child_subsidiaries\n    \n , \n    cast(null as float) as \n    \n    income_account_id\n    \n , \n    cast(null as float) as \n    \n    interco_expense_account_id\n    \n , \n    cast(null as float) as \n    \n    interco_income_account_id\n    \n , \n    cast(null as float) as \n    \n    invt_count_classification\n    \n , \n    cast(null as float) as \n    \n    invt_count_interval\n    \n , \n    cast(null as TEXT) as \n    \n    is_cont_rev_handling\n    \n , \n    cast(null as TEXT) as \n    \n    is_enforce_min_qty_internally\n    \n , \n    cast(null as TEXT) as \n    \n    is_hold_rev_rec\n    \n , \n    cast(null as TEXT) as \n    \n    is_moss\n    \n , \n    cast(null as TEXT) as \n    \n    is_phantom\n    \n , \n    cast(null as TEXT) as \n    \n    is_special_order_item\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    isonline\n    \n , \n    cast(null as TEXT) as \n    \n    istaxable\n    \n , \n    cast(null as float) as \n    \n    item_defined_cost\n    \n , \n    cast(null as TEXT) as \n    \n    item_extid\n    \n , \n    \n    \n    item_id\n    \n as \n    \n    item_id\n    \n, \n    cast(null as float) as \n    \n    item_image\n    \n , \n    cast(null as TEXT) as \n    \n    item_revenue_category\n    \n , \n    cast(null as float) as \n    \n    item_term_id\n    \n , \n    cast(null as timestamp) as \n    \n    last_cogs_correction\n    \n , \n    cast(null as timestamp) as \n    \n    last_invt_count_date\n    \n , \n    cast(null as float) as \n    \n    last_purchase_price\n    \n , \n    cast(null as float) as \n    \n    location_id\n    \n , \n    cast(null as TEXT) as \n    \n    lot_numbered_item\n    \n , \n    cast(null as TEXT) as \n    \n    lot_sizing_method\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturer\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturing_charge_item\n    \n , \n    cast(null as TEXT) as \n    \n    match_bill_to_receipt\n    \n , \n    cast(null as TEXT) as \n    \n    matrix_type\n    \n , \n    cast(null as float) as \n    \n    maximum_quantity\n    \n , \n    cast(null as float) as \n    \n    minimum_quantity\n    \n , \n    cast(null as timestamp) as \n    \n    modified\n    \n , \n    cast(null as TEXT) as \n    \n    mpn\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    nature_of_transaction_codes_id\n    \n , \n    cast(null as timestamp) as \n    \n    next_invt_count_date\n    \n , \n    cast(null as float) as \n    \n    ng_asset_type_id\n    \n , \n    cast(null as float) as \n    \n    ns_lead_time\n    \n , \n    cast(null as TEXT) as \n    \n    offersupport\n    \n , \n    cast(null as TEXT) as \n    \n    onspecial\n    \n , \n    cast(null as TEXT) as \n    \n    overhead_type\n    \n , \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    cast(null as float) as \n    \n    payment_method_id\n    \n , \n    cast(null as float) as \n    \n    periodic_lot_size_days\n    \n , \n    cast(null as TEXT) as \n    \n    periodic_lot_size_type\n    \n , \n    cast(null as float) as \n    \n    pref_purchase_tax_id\n    \n , \n    cast(null as float) as \n    \n    pref_sale_tax_id\n    \n , \n    cast(null as float) as \n    \n    pref_stock_level\n    \n , \n    cast(null as TEXT) as \n    \n    prices_include_tax\n    \n , \n    cast(null as float) as \n    \n    pricing_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    print_sub_items\n    \n , \n    cast(null as float) as \n    \n    prod_price_var_account_id\n    \n , \n    cast(null as float) as \n    \n    prod_qty_var_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    prompt_payment_discount_item\n    \n , \n    cast(null as float) as \n    \n    purchase_price_var_account_id\n    \n , \n    cast(null as float) as \n    \n    purchase_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    purchasedescription\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as float) as \n    \n    quantityavailable\n    \n , \n    cast(null as float) as \n    \n    quantitybackordered\n    \n , \n    cast(null as float) as \n    \n    quantityonhand\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as float) as \n    \n    reorder_multiple\n    \n , \n    cast(null as float) as \n    \n    reorderpoint\n    \n , \n    cast(null as TEXT) as \n    \n    replenishment_method\n    \n , \n    cast(null as TEXT) as \n    \n    resalable\n    \n , \n    cast(null as float) as \n    \n    reschedule_in_days\n    \n , \n    cast(null as float) as \n    \n    reschedule_out_days\n    \n , \n    cast(null as float) as \n    \n    rev_rec_forecast_rule_id\n    \n , \n    cast(null as float) as \n    \n    rev_rec_rule_id\n    \n , \n    cast(null as TEXT) as \n    \n    revenue_allocation_group\n    \n , \n    cast(null as TEXT) as \n    \n    round_up_as_component\n    \n , \n    cast(null as float) as \n    \n    safety_stock_days\n    \n , \n    cast(null as float) as \n    \n    safety_stock_level\n    \n , \n    cast(null as float) as \n    \n    sale_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    salesdescription\n    \n , \n    cast(null as TEXT) as \n    \n    salesforce_id\n    \n , \n    cast(null as TEXT) as \n    \n    salesprice\n    \n , \n    cast(null as float) as \n    \n    scrap_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    serialized_item\n    \n , \n    cast(null as float) as \n    \n    shippingcost\n    \n , \n    cast(null as TEXT) as \n    \n    special_work_order_item\n    \n , \n    cast(null as TEXT) as \n    \n    specialsdescription\n    \n , \n    cast(null as float) as \n    \n    stock_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    storedescription\n    \n , \n    cast(null as TEXT) as \n    \n    storedetaileddescription\n    \n , \n    cast(null as TEXT) as \n    \n    storedisplayname\n    \n , \n    cast(null as TEXT) as \n    \n    subtype\n    \n , \n    cast(null as TEXT) as \n    \n    supplementary_unit__abberviat\n    \n , \n    cast(null as float) as \n    \n    supplementary_unit_id\n    \n , \n    cast(null as float) as \n    \n    supply_time_fence\n    \n , \n    cast(null as TEXT) as \n    \n    supply_type\n    \n , \n    cast(null as float) as \n    \n    tax_item_id\n    \n , \n    cast(null as float) as \n    \n    totalvalue\n    \n , \n    cast(null as float) as \n    \n    transferprice\n    \n , \n    \n    \n    type_name\n    \n as \n    \n    type_name\n    \n, \n    cast(null as float) as \n    \n    type_of_goods_id\n    \n , \n    cast(null as TEXT) as \n    \n    udf1\n    \n , \n    cast(null as TEXT) as \n    \n    udf2\n    \n , \n    cast(null as TEXT) as \n    \n    un_number\n    \n , \n    cast(null as float) as \n    \n    unbuild_variance_account_id\n    \n , \n    cast(null as float) as \n    \n    units_type_id\n    \n , \n    cast(null as TEXT) as \n    \n    upc_code\n    \n , \n    cast(null as TEXT) as \n    \n    use_component_yield\n    \n , \n    cast(null as float) as \n    \n    vendor_id\n    \n , \n    cast(null as TEXT) as \n    \n    vendorname\n    \n , \n    cast(null as float) as \n    \n    vendreturn_variance_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_deferral\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_delivered\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_discount\n    \n , \n    cast(null as float) as \n    \n    vsoe_price\n    \n , \n    cast(null as float) as \n    \n    weight\n    \n , \n    cast(null as float) as \n    \n    weight_in_user_defined_unit\n    \n , \n    cast(null as float) as \n    \n    weight_unit_index\n    \n , \n    cast(null as float) as \n    \n    wip_account_id\n    \n , \n    cast(null as float) as \n    \n    wip_cost_variance_account_id\n    \n , \n    cast(null as float) as \n    \n    work_order_lead_time\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        item_id,\n        name,\n        type_name,\n        salesdescription as sales_description,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your items_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.184521Z", "completed_at": "2024-03-19T16:00:22.470827Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.471310Z", "completed_at": "2024-03-19T16:00:22.471319Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.31284618377685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__locations", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        location_id,\n        name,\n        full_name,\n        city,\n        country,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your locations_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.269125Z", "completed_at": "2024-03-19T16:00:22.496658Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.497968Z", "completed_at": "2024-03-19T16:00:22.497973Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.26122117042541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transaction_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    class_id\n    \n as \n    \n    class_id\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n, \n    \n    \n    department_id\n    \n as \n    \n    department_id\n    \n, \n    \n    \n    item_id\n    \n as \n    \n    item_id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    non_posting_line\n    \n as \n    \n    non_posting_line\n    \n, \n    \n    \n    subsidiary_id\n    \n as \n    \n    subsidiary_id\n    \n, \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    transaction_line_id\n    \n as \n    \n    transaction_line_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        transaction_id,\n        transaction_line_id,\n        subsidiary_id,\n        account_id,\n        company_id,\n        item_id,\n        amount,\n        non_posting_line,\n        class_id,\n        location_id,\n        department_id,\n        memo\n\n        --The below macro adds the fields defined within your transaction_lines_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.236259Z", "completed_at": "2024-03-19T16:00:22.624031Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.625005Z", "completed_at": "2024-03-19T16:00:22.625013Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4161248207092285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    address\n    \n , \n    cast(null as TEXT) as \n    \n    address1\n    \n , \n    cast(null as TEXT) as \n    \n    address2\n    \n , \n    cast(null as float) as \n    \n    base_currency_id\n    \n , \n    cast(null as TEXT) as \n    \n    branch_id\n    \n , \n    cast(null as TEXT) as \n    \n    brn\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    edition\n    \n , \n    cast(null as TEXT) as \n    \n    federal_number\n    \n , \n    \n    \n    fiscal_calendar_id\n    \n as \n    \n    fiscal_calendar_id\n    \n, \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    is_elimination\n    \n , \n    cast(null as TEXT) as \n    \n    is_moss\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive_bool\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    cast(null as float) as \n    \n    moss_nexus_id\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    return_address\n    \n , \n    cast(null as TEXT) as \n    \n    return_address1\n    \n , \n    cast(null as TEXT) as \n    \n    return_address2\n    \n , \n    cast(null as TEXT) as \n    \n    return_city\n    \n , \n    cast(null as TEXT) as \n    \n    return_country\n    \n , \n    cast(null as TEXT) as \n    \n    return_state\n    \n , \n    cast(null as TEXT) as \n    \n    return_zipcode\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address1\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address2\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_city\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_country\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_state\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_zipcode\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    state_tax_number\n    \n , \n    cast(null as float) as \n    \n    subnav__searchable_subsidiary\n    \n , \n    cast(null as TEXT) as \n    \n    subsidiary_extid\n    \n , \n    \n    \n    subsidiary_id\n    \n as \n    \n    subsidiary_id\n    \n, \n    cast(null as float) as \n    \n    taxonomy_reference_id\n    \n , \n    cast(null as TEXT) as \n    \n    tran_num_prefix\n    \n , \n    cast(null as TEXT) as \n    \n    uen\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n , \n    cast(null as TEXT) as \n    \n    zipcode\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        subsidiary_id,\n        fiscal_calendar_id,\n        full_name,\n        name,\n        parent_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your subsidiaries_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.652754Z", "completed_at": "2024-03-19T16:00:22.660155Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.660861Z", "completed_at": "2024-03-19T16:00:22.660868Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009379148483276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__account_types_account_type_id.20889967ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_type_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types\"\nwhere account_type_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.662780Z", "completed_at": "2024-03-19T16:00:22.667746Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.668461Z", "completed_at": "2024-03-19T16:00:22.668467Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006921052932739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__account_types_account_type_id.aaea9bec0f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_type_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types\"\nwhere account_type_id is not null\ngroup by account_type_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.670171Z", "completed_at": "2024-03-19T16:00:22.673783Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.674413Z", "completed_at": "2024-03-19T16:00:22.674420Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005363941192626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_period_fiscal_cal__fivetran_id.ec8750b679", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.676276Z", "completed_at": "2024-03-19T16:00:22.679747Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.680223Z", "completed_at": "2024-03-19T16:00:22.680228Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00507807731628418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_period_fiscal_cal__fivetran_id.d2038de348", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.682038Z", "completed_at": "2024-03-19T16:00:22.685541Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.686024Z", "completed_at": "2024-03-19T16:00:22.686030Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0051577091217041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_book_subsidiaries__fivetran_id.76e6e71411", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.687909Z", "completed_at": "2024-03-19T16:00:22.691236Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.691694Z", "completed_at": "2024-03-19T16:00:22.691699Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00494694709777832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_book_subsidiaries__fivetran_id.27ddb08396", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.693443Z", "completed_at": "2024-03-19T16:00:22.697561Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.698028Z", "completed_at": "2024-03-19T16:00:22.698032Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005745887756347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_books_accounting_book_id.1b7504d30e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_book_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books\"\nwhere accounting_book_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.700010Z", "completed_at": "2024-03-19T16:00:22.702963Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.703430Z", "completed_at": "2024-03-19T16:00:22.703434Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004662990570068359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_books_accounting_book_id.70d96d1230", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_book_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books\"\nwhere accounting_book_id is not null\ngroup by accounting_book_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.704989Z", "completed_at": "2024-03-19T16:00:22.708732Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.709247Z", "completed_at": "2024-03-19T16:00:22.709252Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005277156829833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_periods_accounting_period_id.f2db2c547c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_period_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods\"\nwhere accounting_period_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.710773Z", "completed_at": "2024-03-19T16:00:22.713918Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.714388Z", "completed_at": "2024-03-19T16:00:22.714394Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0045621395111083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_periods_accounting_period_id.a9d8f4c6e1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_period_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods\"\nwhere accounting_period_id is not null\ngroup by accounting_period_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.716003Z", "completed_at": "2024-03-19T16:00:22.718676Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.719109Z", "completed_at": "2024-03-19T16:00:22.719112Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.003993988037109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounts_account_id.5a542e47a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.720479Z", "completed_at": "2024-03-19T16:00:22.724070Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.724512Z", "completed_at": "2024-03-19T16:00:22.724517Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004921913146972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounts_account_id.23a63b3e17", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.725900Z", "completed_at": "2024-03-19T16:00:22.728938Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.729405Z", "completed_at": "2024-03-19T16:00:22.729410Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004561901092529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__consolidated_exchange_rates_consolidated_exchange_rate_id.09703507c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect consolidated_exchange_rate_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.731789Z", "completed_at": "2024-03-19T16:00:22.734765Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.735217Z", "completed_at": "2024-03-19T16:00:22.735222Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004633903503417969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__consolidated_exchange_rates_consolidated_exchange_rate_id.2d4725bb7a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    consolidated_exchange_rate_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is not null\ngroup by consolidated_exchange_rate_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.736641Z", "completed_at": "2024-03-19T16:00:22.739450Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.739887Z", "completed_at": "2024-03-19T16:00:22.739892Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004132986068725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__classes_class_id.799b01ffba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect class_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes\"\nwhere class_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.741565Z", "completed_at": "2024-03-19T16:00:22.744569Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.745031Z", "completed_at": "2024-03-19T16:00:22.745036Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004462003707885742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__classes_class_id.d069e30c98", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    class_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes\"\nwhere class_id is not null\ngroup by class_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.752071Z", "completed_at": "2024-03-19T16:00:22.756409Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.757327Z", "completed_at": "2024-03-19T16:00:22.757331Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011934995651245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__currencies_currency_id.7eff9f9c1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect currency_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies\"\nwhere currency_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.759335Z", "completed_at": "2024-03-19T16:00:22.762163Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.762615Z", "completed_at": "2024-03-19T16:00:22.762620Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004307985305786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__currencies_currency_id.50d9c37c78", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    currency_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies\"\nwhere currency_id is not null\ngroup by currency_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.498642Z", "completed_at": "2024-03-19T16:00:22.756076Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.757089Z", "completed_at": "2024-03-19T16:00:22.757096Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3087899684906006, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendor_types", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_type_extid\n    \n , \n    \n    \n    vendor_type_id\n    \n as \n    \n    vendor_type_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        vendor_type_id,\n        name,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.802839Z", "completed_at": "2024-03-19T16:00:22.810805Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.811619Z", "completed_at": "2024-03-19T16:00:22.811626Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04891610145568848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__departments_department_id.7395bbfe71", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect department_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments\"\nwhere department_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.808074Z", "completed_at": "2024-03-19T16:00:22.812075Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.814055Z", "completed_at": "2024-03-19T16:00:22.814060Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0075130462646484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__departments_department_id.13e4897f0b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    department_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments\"\nwhere department_id is not null\ngroup by department_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.815942Z", "completed_at": "2024-03-19T16:00:22.822482Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.823108Z", "completed_at": "2024-03-19T16:00:22.823113Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009259939193725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__entities_entity_id.f22c18cfa2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect entity_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities\"\nwhere entity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.819598Z", "completed_at": "2024-03-19T16:00:22.823928Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.825418Z", "completed_at": "2024-03-19T16:00:22.825423Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007189035415649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__entities_entity_id.f9acd04f50", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    entity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities\"\nwhere entity_id is not null\ngroup by entity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.826408Z", "completed_at": "2024-03-19T16:00:22.833854Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.834500Z", "completed_at": "2024-03-19T16:00:22.834505Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00993204116821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__customers_customer_id.65a5ae302a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.831293Z", "completed_at": "2024-03-19T16:00:22.835449Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.836582Z", "completed_at": "2024-03-19T16:00:22.836587Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009476661682128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__customers_customer_id.05ca0360f2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.531271Z", "completed_at": "2024-03-19T16:00:22.811308Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.812906Z", "completed_at": "2024-03-19T16:00:22.812914Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.31041693687438965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendors", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_owner\n    \n , \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    cast(null as TEXT) as \n    \n    accounts_email\n    \n , \n    cast(null as float) as \n    \n    annual_revenue\n    \n , \n    cast(null as TEXT) as \n    \n    auto_renewals\n    \n , \n    cast(null as TEXT) as \n    \n    auto_send_statements\n    \n , \n    cast(null as TEXT) as \n    \n    billaddress\n    \n , \n    cast(null as float) as \n    \n    billing_class_id\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as TEXT) as \n    \n    companyname\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    \n    \n    create_date\n    \n as \n    \n    create_date\n    \n, \n    cast(null as float) as \n    \n    creditlimit\n    \n , \n    cast(null as float) as \n    \n    currency_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    dic\n    \n , \n    cast(null as TEXT) as \n    \n    email\n    \n , \n    cast(null as TEXT) as \n    \n    email_bill_payment_vouchers\n    \n , \n    cast(null as TEXT) as \n    \n    email_cash_sales\n    \n , \n    cast(null as TEXT) as \n    \n    email_credit_notes\n    \n , \n    cast(null as TEXT) as \n    \n    email_invoices\n    \n , \n    cast(null as TEXT) as \n    \n    email_item_fulfilments\n    \n , \n    cast(null as TEXT) as \n    \n    email_purchase_orders\n    \n , \n    cast(null as TEXT) as \n    \n    email_quotes\n    \n , \n    cast(null as TEXT) as \n    \n    email_sales_orders\n    \n , \n    cast(null as TEXT) as \n    \n    email_statements\n    \n , \n    cast(null as TEXT) as \n    \n    employee_number\n    \n , \n    cast(null as TEXT) as \n    \n    exemption_certificate_no\n    \n , \n    cast(null as float) as \n    \n    expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    fax\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    home_phone\n    \n , \n    cast(null as TEXT) as \n    \n    hris_id\n    \n , \n    cast(null as TEXT) as \n    \n    ico\n    \n , \n    cast(null as TEXT) as \n    \n    id_number_in_the_country_of_r\n    \n , \n    cast(null as float) as \n    \n    id_type_in_the_country_of_r_id\n    \n , \n    cast(null as float) as \n    \n    in_transit_balance\n    \n , \n    cast(null as TEXT) as \n    \n    incoterm\n    \n , \n    cast(null as float) as \n    \n    industry_id\n    \n , \n    cast(null as TEXT) as \n    \n    invoice_via_procurement_syste\n    \n , \n    cast(null as TEXT) as \n    \n    invoicing_details\n    \n , \n    cast(null as TEXT) as \n    \n    is1099eligible\n    \n , \n    cast(null as TEXT) as \n    \n    is_partner\n    \n , \n    cast(null as TEXT) as \n    \n    is_person\n    \n , \n    cast(null as TEXT) as \n    \n    isemailhtml\n    \n , \n    cast(null as TEXT) as \n    \n    isemailpdf\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as float) as \n    \n    labor_cost\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_date\n    \n , \n    cast(null as timestamp) as \n    \n    last_sales_activity\n    \n , \n    cast(null as TEXT) as \n    \n    line1\n    \n , \n    cast(null as TEXT) as \n    \n    line2\n    \n , \n    cast(null as TEXT) as \n    \n    line3\n    \n , \n    cast(null as TEXT) as \n    \n    loginaccess\n    \n , \n    cast(null as TEXT) as \n    \n    lsa_link\n    \n , \n    cast(null as TEXT) as \n    \n    lsa_link_name\n    \n , \n    cast(null as TEXT) as \n    \n    mobile_phone\n    \n , \n    cast(null as timestamp) as \n    \n    msa_effective_date\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as float) as \n    \n    no__of_employees\n    \n , \n    cast(null as float) as \n    \n    openbalance\n    \n , \n    cast(null as float) as \n    \n    openbalance_foreign\n    \n , \n    cast(null as float) as \n    \n    payables_account_id\n    \n , \n    cast(null as float) as \n    \n    payment_terms_id\n    \n , \n    cast(null as TEXT) as \n    \n    phone\n    \n , \n    cast(null as float) as \n    \n    prepayment_balance\n    \n , \n    cast(null as TEXT) as \n    \n    printoncheckas\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    purchases_email\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as float) as \n    \n    represents_subsidiary_id\n    \n , \n    cast(null as TEXT) as \n    \n    restrict_access_to_expensify\n    \n , \n    cast(null as TEXT) as \n    \n    salesforce_id\n    \n , \n    cast(null as TEXT) as \n    \n    shipaddress\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_email\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as float) as \n    \n    subsidiary\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_first_name\n    \n , \n    cast(null as float) as \n    \n    tax_contact_id\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_last_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_middle_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number\n    \n , \n    cast(null as TEXT) as \n    \n    taxidnum\n    \n , \n    cast(null as float) as \n    \n    time_approver_id\n    \n , \n    cast(null as TEXT) as \n    \n    transactions_need_approval\n    \n , \n    cast(null as TEXT) as \n    \n    uen\n    \n , \n    cast(null as float) as \n    \n    unbilled_orders\n    \n , \n    cast(null as float) as \n    \n    unbilled_orders_foreign\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n , \n    cast(null as TEXT) as \n    \n    vat_registration_no\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_extid\n    \n , \n    \n    \n    vendor_id\n    \n as \n    \n    vendor_id\n    \n, \n    \n    \n    vendor_type_id\n    \n as \n    \n    vendor_type_id\n    \n, \n    cast(null as TEXT) as \n    \n    zipcode\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        vendor_id,\n        companyname as company_name,\n        create_date as create_date_at,\n        vendor_type_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your vendors_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.836834Z", "completed_at": "2024-03-19T16:00:22.841683Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.845882Z", "completed_at": "2024-03-19T16:00:22.845892Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011099100112915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__items_item_id.e216b5b06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items\"\nwhere item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.843009Z", "completed_at": "2024-03-19T16:00:22.850341Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.851802Z", "completed_at": "2024-03-19T16:00:22.851808Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01143193244934082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__items_item_id.3fcafd9eee", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items\"\nwhere item_id is not null\ngroup by item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.847238Z", "completed_at": "2024-03-19T16:00:22.852042Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.902913Z", "completed_at": "2024-03-19T16:00:22.902920Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06118202209472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__jobs_job_id.d7b5b06b33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect job_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs\"\nwhere job_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.853409Z", "completed_at": "2024-03-19T16:00:22.907782Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.909106Z", "completed_at": "2024-03-19T16:00:22.909112Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.06129121780395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__jobs_job_id.c294ea849c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    job_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs\"\nwhere job_id is not null\ngroup by job_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.904733Z", "completed_at": "2024-03-19T16:00:22.909334Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.913727Z", "completed_at": "2024-03-19T16:00:22.913733Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011507987976074219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__locations_location_id.c335a5985e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations\"\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.909554Z", "completed_at": "2024-03-19T16:00:22.914361Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.922463Z", "completed_at": "2024-03-19T16:00:22.922471Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015223979949951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__locations_location_id.f1469a5149", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.916000Z", "completed_at": "2024-03-19T16:00:22.924319Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.929105Z", "completed_at": "2024-03-19T16:00:22.929115Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020328044891357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite2__transaction_accounting_lines_transaction_id__transaction_line_id__accounting_book_id.ac47a8ecc1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id, accounting_book_id\n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\n    group by transaction_id, transaction_line_id, accounting_book_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.924745Z", "completed_at": "2024-03-19T16:00:22.933719Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.935242Z", "completed_at": "2024-03-19T16:00:22.935246Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013514041900634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_accounting_lines_transaction_id.f28afbfa25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.929472Z", "completed_at": "2024-03-19T16:00:22.935831Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.940975Z", "completed_at": "2024-03-19T16:00:22.940981Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013988971710205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_accounting_lines_transaction_line_id.0f72869807", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.937315Z", "completed_at": "2024-03-19T16:00:22.945911Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.947506Z", "completed_at": "2024-03-19T16:00:22.947513Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015869855880737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__subsidiaries_subsidiary_id.0ab6516626", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subsidiary_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries\"\nwhere subsidiary_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.942991Z", "completed_at": "2024-03-19T16:00:22.947758Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.952445Z", "completed_at": "2024-03-19T16:00:22.952450Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012243032455444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__subsidiaries_subsidiary_id.8edc974229", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    subsidiary_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries\"\nwhere subsidiary_id is not null\ngroup by subsidiary_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.948000Z", "completed_at": "2024-03-19T16:00:22.953087Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.957517Z", "completed_at": "2024-03-19T16:00:22.957522Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011977910995483398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite2__transaction_lines_transaction_id__transaction_line_id.07b823514f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id\n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines\"\n    group by transaction_id, transaction_line_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.954551Z", "completed_at": "2024-03-19T16:00:22.959108Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.963703Z", "completed_at": "2024-03-19T16:00:22.963708Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01410222053527832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_lines_transaction_id.267b150890", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.959350Z", "completed_at": "2024-03-19T16:00:22.966404Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.967652Z", "completed_at": "2024-03-19T16:00:22.967656Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010841131210327148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_lines_transaction_line_id.a82e70adc1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.963952Z", "completed_at": "2024-03-19T16:00:22.967883Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.969588Z", "completed_at": "2024-03-19T16:00:22.969593Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01036524772644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__vendor_categories_vendor_category_id.60acd9acb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_category_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories\"\nwhere vendor_category_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.969859Z", "completed_at": "2024-03-19T16:00:22.976816Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.978124Z", "completed_at": "2024-03-19T16:00:22.978129Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01331019401550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__vendor_categories_vendor_category_id.874da088c6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_category_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories\"\nwhere vendor_category_id is not null\ngroup by vendor_category_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.974111Z", "completed_at": "2024-03-19T16:00:22.977886Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.981770Z", "completed_at": "2024-03-19T16:00:22.981774Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00981283187866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transactions_transaction_id.b4f6c6a72b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.978389Z", "completed_at": "2024-03-19T16:00:22.983099Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.988212Z", "completed_at": "2024-03-19T16:00:22.988220Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011911869049072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__transactions_transaction_id.af3d15dce4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions\"\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.984327Z", "completed_at": "2024-03-19T16:00:22.992704Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.994182Z", "completed_at": "2024-03-19T16:00:22.994187Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014878988265991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__vendors_vendor_id.777b758daf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors\"\nwhere vendor_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.989326Z", "completed_at": "2024-03-19T16:00:22.993711Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:22.997971Z", "completed_at": "2024-03-19T16:00:22.997975Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01470327377319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__vendors_vendor_id.415829ac1d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors\"\nwhere vendor_id is not null\ngroup by vendor_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.994613Z", "completed_at": "2024-03-19T16:00:22.999890Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.004105Z", "completed_at": "2024-03-19T16:00:23.004115Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014198064804077148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_books_accounting_book_id.12972ee6fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_book_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books\"\nwhere accounting_book_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.000962Z", "completed_at": "2024-03-19T16:00:23.008066Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.009429Z", "completed_at": "2024-03-19T16:00:23.009435Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014114856719970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__accounting_books_accounting_book_id.22e0106417", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_book_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books\"\nwhere accounting_book_id is not null\ngroup by accounting_book_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.004424Z", "completed_at": "2024-03-19T16:00:23.009179Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.013666Z", "completed_at": "2024-03-19T16:00:23.013671Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014270305633544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounts_account_id.f03cddbace", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.009713Z", "completed_at": "2024-03-19T16:00:23.014249Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.016266Z", "completed_at": "2024-03-19T16:00:23.016270Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013229131698608398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__accounts_account_id.e94563d281", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.016861Z", "completed_at": "2024-03-19T16:00:23.025723Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.029634Z", "completed_at": "2024-03-19T16:00:23.029641Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015436887741088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite__accounting_periods_accounting_period_id__fiscal_calendar_id.43005ecb69", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        accounting_period_id, fiscal_calendar_id\n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods\"\n    group by accounting_period_id, fiscal_calendar_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.022476Z", "completed_at": "2024-03-19T16:00:23.029326Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.030724Z", "completed_at": "2024-03-19T16:00:23.030727Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015107870101928711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_periods_accounting_period_id.5c1c46821c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_period_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods\"\nwhere accounting_period_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.026498Z", "completed_at": "2024-03-19T16:00:23.031226Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.033324Z", "completed_at": "2024-03-19T16:00:23.033333Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011937618255615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_periods_fiscal_calendar_id.8d75190563", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fiscal_calendar_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods\"\nwhere fiscal_calendar_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.033943Z", "completed_at": "2024-03-19T16:00:23.041509Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.047664Z", "completed_at": "2024-03-19T16:00:23.047672Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01653289794921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__consolidated_exchange_rates_consolidated_exchange_rate_id.83de8c8e97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect consolidated_exchange_rate_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.038187Z", "completed_at": "2024-03-19T16:00:23.047227Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.049015Z", "completed_at": "2024-03-19T16:00:23.049023Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01658797264099121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__consolidated_exchange_rates_consolidated_exchange_rate_id.2ca94ecb54", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    consolidated_exchange_rate_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is not null\ngroup by consolidated_exchange_rate_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.042335Z", "completed_at": "2024-03-19T16:00:23.049327Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.051430Z", "completed_at": "2024-03-19T16:00:23.051434Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011343240737915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__classes_class_id.462bfda765", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect class_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes\"\nwhere class_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.052745Z", "completed_at": "2024-03-19T16:00:23.059839Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.063686Z", "completed_at": "2024-03-19T16:00:23.063694Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013615131378173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__classes_class_id.c63c54840b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    class_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes\"\nwhere class_id is not null\ngroup by class_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.056395Z", "completed_at": "2024-03-19T16:00:23.062938Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.063956Z", "completed_at": "2024-03-19T16:00:23.063959Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013123035430908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__currencies_currency_id.e8b331ffb3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect currency_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies\"\nwhere currency_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.060134Z", "completed_at": "2024-03-19T16:00:23.064664Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.066776Z", "completed_at": "2024-03-19T16:00:23.066780Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008635997772216797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__currencies_currency_id.09ab867f2c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    currency_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies\"\nwhere currency_id is not null\ngroup by currency_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.068228Z", "completed_at": "2024-03-19T16:00:23.076286Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.080327Z", "completed_at": "2024-03-19T16:00:23.080333Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014858007431030273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__expense_accounts_expense_account_id.4de138ed23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect expense_account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts\"\nwhere expense_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.071687Z", "completed_at": "2024-03-19T16:00:23.079464Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.080581Z", "completed_at": "2024-03-19T16:00:23.080584Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01466679573059082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__expense_accounts_expense_account_id.5e813830ff", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    expense_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts\"\nwhere expense_account_id is not null\ngroup by expense_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.076576Z", "completed_at": "2024-03-19T16:00:23.080808Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.083071Z", "completed_at": "2024-03-19T16:00:23.083076Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008764982223510742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__departments_department_id.6d96b00002", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect department_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments\"\nwhere department_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.088339Z", "completed_at": "2024-03-19T16:00:23.094334Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.095426Z", "completed_at": "2024-03-19T16:00:23.095433Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01260519027709961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__customers_customer_id.bbb9eed2dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.085205Z", "completed_at": "2024-03-19T16:00:23.094609Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.095914Z", "completed_at": "2024-03-19T16:00:23.095918Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01368403434753418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__departments_department_id.2df16a9aa1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    department_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments\"\nwhere department_id is not null\ngroup by department_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.091782Z", "completed_at": "2024-03-19T16:00:23.095680Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.097608Z", "completed_at": "2024-03-19T16:00:23.097611Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007586240768432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__customers_customer_id.7c9debe8d9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.099902Z", "completed_at": "2024-03-19T16:00:23.110470Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.111345Z", "completed_at": "2024-03-19T16:00:23.111355Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014168024063110352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__income_accounts_income_account_id.a38311d5f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect income_account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts\"\nwhere income_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.104430Z", "completed_at": "2024-03-19T16:00:23.111053Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.112625Z", "completed_at": "2024-03-19T16:00:23.112629Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014624834060668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__income_accounts_income_account_id.28b4166a07", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    income_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts\"\nwhere income_account_id is not null\ngroup by income_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.107776Z", "completed_at": "2024-03-19T16:00:23.111820Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.113894Z", "completed_at": "2024-03-19T16:00:23.113898Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010934114456176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__items_item_id.ba322d7da3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items\"\nwhere item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.116167Z", "completed_at": "2024-03-19T16:00:23.122829Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.127389Z", "completed_at": "2024-03-19T16:00:23.127394Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01418614387512207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__items_item_id.760a674654", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items\"\nwhere item_id is not null\ngroup by item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.119735Z", "completed_at": "2024-03-19T16:00:23.127091Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.128669Z", "completed_at": "2024-03-19T16:00:23.128674Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014262199401855469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__locations_location_id.9f68ecaa6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations\"\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.123124Z", "completed_at": "2024-03-19T16:00:23.127866Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.129933Z", "completed_at": "2024-03-19T16:00:23.129936Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011645078659057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__locations_location_id.3857e2cac2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.132046Z", "completed_at": "2024-03-19T16:00:23.141667Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.142492Z", "completed_at": "2024-03-19T16:00:23.142499Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013470172882080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite__transaction_lines_transaction_id__transaction_line_id.651bc3120d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id\n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines\"\n    group by transaction_id, transaction_line_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.135726Z", "completed_at": "2024-03-19T16:00:23.142228Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.144522Z", "completed_at": "2024-03-19T16:00:23.144527Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014274120330810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transaction_lines_transaction_id.e8055d67bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.139084Z", "completed_at": "2024-03-19T16:00:23.142716Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.145288Z", "completed_at": "2024-03-19T16:00:23.145291Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011594057083129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transaction_lines_transaction_line_id.420bd8637c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.148395Z", "completed_at": "2024-03-19T16:00:23.158015Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.158590Z", "completed_at": "2024-03-19T16:00:23.158596Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01296687126159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__subsidiaries_subsidiary_id.9aa9c2d015", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subsidiary_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries\"\nwhere subsidiary_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.152003Z", "completed_at": "2024-03-19T16:00:23.159326Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.160749Z", "completed_at": "2024-03-19T16:00:23.160753Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013550043106079102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__subsidiaries_subsidiary_id.7d0dfe64f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    subsidiary_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries\"\nwhere subsidiary_id is not null\ngroup by subsidiary_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.155548Z", "completed_at": "2024-03-19T16:00:23.159537Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.160982Z", "completed_at": "2024-03-19T16:00:23.160985Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01085805892944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__vendor_types_vendor_type_id.faed6fe0e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_type_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types\"\nwhere vendor_type_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.162307Z", "completed_at": "2024-03-19T16:00:23.166303Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.172323Z", "completed_at": "2024-03-19T16:00:23.172330Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012426137924194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__vendor_types_vendor_type_id.6ba4f59b69", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_type_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types\"\nwhere vendor_type_id is not null\ngroup by vendor_type_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.166739Z", "completed_at": "2024-03-19T16:00:23.173154Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.173913Z", "completed_at": "2024-03-19T16:00:23.173916Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009071111679077148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__vendors_vendor_id.15978cc531", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors\"\nwhere vendor_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.169545Z", "completed_at": "2024-03-19T16:00:23.173674Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.174767Z", "completed_at": "2024-03-19T16:00:23.174770Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009402751922607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__vendors_vendor_id.a981580d39", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors\"\nwhere vendor_id is not null\ngroup by vendor_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:22.460304Z", "completed_at": "2024-03-19T16:00:23.183202Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.183662Z", "completed_at": "2024-03-19T16:00:23.183668Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7411880493164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transactions", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    \n    \n    currency_id\n    \n as \n    \n    currency_id\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    is_advanced_intercompany\n    \n as \n    \n    is_advanced_intercompany\n    \n, \n    \n    \n    is_intercompany\n    \n as \n    \n    is_intercompany\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    cast(null as timestamp) as \n    \n    trandate\n    \n , \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    transaction_type\n    \n as \n    \n    transaction_type\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        transaction_id,\n        status,\n        trandate as transaction_date,\n        currency_id,\n        accounting_period_id,\n        due_date as due_date_at,\n        transaction_type,\n        is_intercompany,\n        is_advanced_intercompany,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your transactions_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.202170Z", "completed_at": "2024-03-19T16:00:23.209610Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.210049Z", "completed_at": "2024-03-19T16:00:23.210054Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00881505012512207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transactions_transaction_id.9439fe1532", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-19T16:00:23.206983Z", "completed_at": "2024-03-19T16:00:23.210768Z"}, {"name": "execute", "started_at": "2024-03-19T16:00:23.211187Z", "completed_at": "2024-03-19T16:00:23.211191Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00517582893371582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__transactions_transaction_id.fd6bd3af79", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions\"\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 4.96540093421936, "args": {"strict_mode": false, "select": [], "partial_parse_file_diff": true, "static_parser": true, "invocation_command": "dbt docs generate -t postgres", "populate_cache": true, "favor_state": false, "cache_selected_only": false, "compile": true, "partial_parse": true, "write_json": true, "quiet": false, "version_check": true, "profiles_dir": "/Users/avinash.kunnath/.dbt", "warn_error_options": {"include": [], "exclude": []}, "log_path": "/Users/avinash.kunnath/Documents/dbt_packages/netsuite/dbt_netsuite_source/integration_tests/logs", "indirect_selection": "eager", "which": "generate", "log_level": "info", "exclude": [], "printer_width": 80, "log_file_max_bytes": 10485760, "vars": {}, "show_resource_report": false, "send_anonymous_usage_stats": true, "log_level_file": "debug", "project_dir": "/Users/avinash.kunnath/Documents/dbt_packages/netsuite/dbt_netsuite_source/integration_tests", "enable_legacy_logger": false, "introspect": true, "log_format_file": "debug", "print": true, "static": false, "macro_debugging": false, "defer": false, "log_format": "default", "use_colors": true, "empty_catalog": false, "use_colors_file": true, "target": "postgres"}}