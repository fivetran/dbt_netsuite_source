{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-04-29T22:43:41.385798Z", "invocation_id": "759846ac-cafe-4ad0-849f-960f0a10d57a", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.828425Z", "completed_at": "2024-04-29T22:43:35.857068Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.864283Z", "completed_at": "2024-04-29T22:43:35.864292Z"}], "thread_id": "Thread-1", "execution_time": 0.043540000915527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__account_types_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_account_type_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__account_types_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.836346Z", "completed_at": "2024-04-29T22:43:35.860636Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.864577Z", "completed_at": "2024-04-29T22:43:35.864580Z"}], "thread_id": "Thread-2", "execution_time": 0.04299211502075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_book_subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_accounting_book_sub_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.840524Z", "completed_at": "2024-04-29T22:43:35.861129Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.865350Z", "completed_at": "2024-04-29T22:43:35.865353Z"}], "thread_id": "Thread-3", "execution_time": 0.04343676567077637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_books_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_accounting_book_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_books_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.843973Z", "completed_at": "2024-04-29T22:43:35.861455Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.865857Z", "completed_at": "2024-04-29T22:43:35.865860Z"}], "thread_id": "Thread-4", "execution_time": 0.043890953063964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_period_fiscal_cal_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_accounting_period_fiscal_cal_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.851022Z", "completed_at": "2024-04-29T22:43:35.862522Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.867611Z", "completed_at": "2024-04-29T22:43:35.867614Z"}], "thread_id": "Thread-6", "execution_time": 0.04431629180908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounts_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_account_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.847623Z", "completed_at": "2024-04-29T22:43:35.862853Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.867890Z", "completed_at": "2024-04-29T22:43:35.867894Z"}], "thread_id": "Thread-5", "execution_time": 0.045285940170288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_periods_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_accounting_period_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_periods_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.854161Z", "completed_at": "2024-04-29T22:43:35.863439Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.868718Z", "completed_at": "2024-04-29T22:43:35.868725Z"}], "thread_id": "Thread-7", "execution_time": 0.045265913009643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__classes_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_classification_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__classes_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.857443Z", "completed_at": "2024-04-29T22:43:35.863973Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.869631Z", "completed_at": "2024-04-29T22:43:35.869634Z"}], "thread_id": "Thread-8", "execution_time": 0.045426368713378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__consolidated_exchange_rates_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_consolidated_exchange_rate_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.878529Z", "completed_at": "2024-04-29T22:43:35.897873Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.906701Z", "completed_at": "2024-04-29T22:43:35.906706Z"}], "thread_id": "Thread-1", "execution_time": 0.03573918342590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__currencies_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_currency_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__currencies_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.882310Z", "completed_at": "2024-04-29T22:43:35.898172Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.907807Z", "completed_at": "2024-04-29T22:43:35.907811Z"}], "thread_id": "Thread-2", "execution_time": 0.036643028259277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__customers_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_customer_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__customers_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.885521Z", "completed_at": "2024-04-29T22:43:35.904350Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.908584Z", "completed_at": "2024-04-29T22:43:35.908587Z"}], "thread_id": "Thread-3", "execution_time": 0.03670191764831543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__departments_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_department_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__departments_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.888501Z", "completed_at": "2024-04-29T22:43:35.905052Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.909922Z", "completed_at": "2024-04-29T22:43:35.909926Z"}], "thread_id": "Thread-4", "execution_time": 0.037387847900390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entities_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_entities_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__entities_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.891582Z", "completed_at": "2024-04-29T22:43:35.905676Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.910705Z", "completed_at": "2024-04-29T22:43:35.910708Z"}], "thread_id": "Thread-6", "execution_time": 0.036997079849243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entity_address_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_entity_address_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__entity_address_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.894469Z", "completed_at": "2024-04-29T22:43:35.906057Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.910976Z", "completed_at": "2024-04-29T22:43:35.910979Z"}], "thread_id": "Thread-5", "execution_time": 0.03716683387756348, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__items_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_item_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__items_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.898462Z", "completed_at": "2024-04-29T22:43:35.907019Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.912073Z", "completed_at": "2024-04-29T22:43:35.912077Z"}], "thread_id": "Thread-7", "execution_time": 0.03778195381164551, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__jobs_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_job_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__jobs_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.901489Z", "completed_at": "2024-04-29T22:43:35.907276Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.912385Z", "completed_at": "2024-04-29T22:43:35.912388Z"}], "thread_id": "Thread-8", "execution_time": 0.037676095962524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__location_main_address_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_location_main_address_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__location_main_address_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.920360Z", "completed_at": "2024-04-29T22:43:35.960842Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.977561Z", "completed_at": "2024-04-29T22:43:35.977568Z"}], "thread_id": "Thread-1", "execution_time": 0.06504487991333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__locations_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_location_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__locations_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.924483Z", "completed_at": "2024-04-29T22:43:35.975197Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.978873Z", "completed_at": "2024-04-29T22:43:35.978877Z"}], "thread_id": "Thread-2", "execution_time": 0.06494998931884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_subsidiary_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.927768Z", "completed_at": "2024-04-29T22:43:35.975703Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.980201Z", "completed_at": "2024-04-29T22:43:35.980204Z"}], "thread_id": "Thread-3", "execution_time": 0.06531286239624023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_accounting_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_tran_acct_line_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.963987Z", "completed_at": "2024-04-29T22:43:35.976321Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.980958Z", "completed_at": "2024-04-29T22:43:35.980962Z"}], "thread_id": "Thread-6", "execution_time": 0.06453824043273926, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transactions_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_transaction_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transactions_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.966797Z", "completed_at": "2024-04-29T22:43:35.976937Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.981756Z", "completed_at": "2024-04-29T22:43:35.981759Z"}], "thread_id": "Thread-5", "execution_time": 0.0650787353515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendor_categories_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_vendor_category_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendor_categories_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.931711Z", "completed_at": "2024-04-29T22:43:35.977241Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.982035Z", "completed_at": "2024-04-29T22:43:35.982039Z"}], "thread_id": "Thread-4", "execution_time": 0.06661510467529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_transaction_line_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.972590Z", "completed_at": "2024-04-29T22:43:35.978099Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.983177Z", "completed_at": "2024-04-29T22:43:35.983181Z"}], "thread_id": "Thread-8", "execution_time": 0.06264305114746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_books_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_accounting_books_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_books_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.969830Z", "completed_at": "2024-04-29T22:43:35.978354Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:35.983465Z", "completed_at": "2024-04-29T22:43:35.983468Z"}], "thread_id": "Thread-7", "execution_time": 0.06355786323547363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendors_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite2_vendor_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendors_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.991270Z", "completed_at": "2024-04-29T22:43:36.005180Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.019833Z", "completed_at": "2024-04-29T22:43:36.019839Z"}], "thread_id": "Thread-1", "execution_time": 0.03646111488342285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_periods_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_accounting_periods_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_periods_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.996134Z", "completed_at": "2024-04-29T22:43:36.014423Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.020657Z", "completed_at": "2024-04-29T22:43:36.020661Z"}], "thread_id": "Thread-2", "execution_time": 0.03550410270690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:35.999372Z", "completed_at": "2024-04-29T22:43:36.018137Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.022490Z", "completed_at": "2024-04-29T22:43:36.022494Z"}], "thread_id": "Thread-3", "execution_time": 0.03619098663330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__classes_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_classes_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__classes_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.002504Z", "completed_at": "2024-04-29T22:43:36.018923Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.023754Z", "completed_at": "2024-04-29T22:43:36.023758Z"}], "thread_id": "Thread-6", "execution_time": 0.036612749099731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__consolidated_exchange_rates_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_consolidated_exchange_rates_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.008135Z", "completed_at": "2024-04-29T22:43:36.019293Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.024042Z", "completed_at": "2024-04-29T22:43:36.024046Z"}], "thread_id": "Thread-4", "execution_time": 0.03610801696777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__customers_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_customers_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__customers_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.005516Z", "completed_at": "2024-04-29T22:43:36.019564Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.024307Z", "completed_at": "2024-04-29T22:43:36.024310Z"}], "thread_id": "Thread-5", "execution_time": 0.03701186180114746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__currencies_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_currencies_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__currencies_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.011555Z", "completed_at": "2024-04-29T22:43:36.020358Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.025461Z", "completed_at": "2024-04-29T22:43:36.025464Z"}], "thread_id": "Thread-8", "execution_time": 0.033532142639160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__departments_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_departments_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__departments_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.014827Z", "completed_at": "2024-04-29T22:43:36.020934Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.026026Z", "completed_at": "2024-04-29T22:43:36.026029Z"}], "thread_id": "Thread-7", "execution_time": 0.03404688835144043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__expense_accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_expense_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__expense_accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.033487Z", "completed_at": "2024-04-29T22:43:36.045665Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.061862Z", "completed_at": "2024-04-29T22:43:36.061869Z"}], "thread_id": "Thread-1", "execution_time": 0.03650689125061035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__income_accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_income_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__income_accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.037327Z", "completed_at": "2024-04-29T22:43:36.051196Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.062518Z", "completed_at": "2024-04-29T22:43:36.062522Z"}], "thread_id": "Thread-2", "execution_time": 0.036077022552490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__items_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_items_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__items_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.041128Z", "completed_at": "2024-04-29T22:43:36.060663Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.065465Z", "completed_at": "2024-04-29T22:43:36.065469Z"}], "thread_id": "Thread-3", "execution_time": 0.036950111389160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__locations_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_locations_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__locations_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.045988Z", "completed_at": "2024-04-29T22:43:36.061130Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.066211Z", "completed_at": "2024-04-29T22:43:36.066215Z"}], "thread_id": "Thread-6", "execution_time": 0.0368959903717041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_subsidiaries_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.048699Z", "completed_at": "2024-04-29T22:43:36.061460Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.066480Z", "completed_at": "2024-04-29T22:43:36.066483Z"}], "thread_id": "Thread-4", "execution_time": 0.0369877815246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transaction_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_transaction_lines_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transaction_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.051525Z", "completed_at": "2024-04-29T22:43:36.062207Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.067154Z", "completed_at": "2024-04-29T22:43:36.067161Z"}], "thread_id": "Thread-5", "execution_time": 0.037590742111206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transactions_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_transactions_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transactions_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.054539Z", "completed_at": "2024-04-29T22:43:36.063092Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.068456Z", "completed_at": "2024-04-29T22:43:36.068460Z"}], "thread_id": "Thread-8", "execution_time": 0.035117149353027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendor_types_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_vendor_types_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendor_types_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.057293Z", "completed_at": "2024-04-29T22:43:36.063364Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.068733Z", "completed_at": "2024-04-29T22:43:36.068737Z"}], "thread_id": "Thread-7", "execution_time": 0.032636165618896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendors_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_23\".\"netsuite_vendors_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendors_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.076167Z", "completed_at": "2024-04-29T22:43:36.078403Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.087015Z", "completed_at": "2024-04-29T22:43:36.087023Z"}], "thread_id": "Thread-1", "execution_time": 0.023068904876708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.079130Z", "completed_at": "2024-04-29T22:43:36.080198Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.089341Z", "completed_at": "2024-04-29T22:43:36.089345Z"}], "thread_id": "Thread-2", "execution_time": 0.022761106491088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_account_type_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.082575Z", "completed_at": "2024-04-29T22:43:36.083646Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.094180Z", "completed_at": "2024-04-29T22:43:36.094183Z"}], "thread_id": "Thread-3", "execution_time": 0.02197408676147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_book_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.084381Z", "completed_at": "2024-04-29T22:43:36.085446Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.094886Z", "completed_at": "2024-04-29T22:43:36.094889Z"}], "thread_id": "Thread-6", "execution_time": 0.025042057037353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_book_sub_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.085718Z", "completed_at": "2024-04-29T22:43:36.086731Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.095137Z", "completed_at": "2024-04-29T22:43:36.095139Z"}], "thread_id": "Thread-4", "execution_time": 0.025224924087524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_period_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.087299Z", "completed_at": "2024-04-29T22:43:36.089059Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.095650Z", "completed_at": "2024-04-29T22:43:36.095653Z"}], "thread_id": "Thread-5", "execution_time": 0.023344993591308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_period_fiscal_cal_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.089832Z", "completed_at": "2024-04-29T22:43:36.090880Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.096721Z", "completed_at": "2024-04-29T22:43:36.096724Z"}], "thread_id": "Thread-8", "execution_time": 0.02267003059387207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_classification_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.091164Z", "completed_at": "2024-04-29T22:43:36.092188Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.099834Z", "completed_at": "2024-04-29T22:43:36.099839Z"}], "thread_id": "Thread-7", "execution_time": 0.026021957397460938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_consolidated_exchange_rate_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.110747Z", "completed_at": "2024-04-29T22:43:36.112066Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.121745Z", "completed_at": "2024-04-29T22:43:36.121750Z"}], "thread_id": "Thread-1", "execution_time": 0.025688648223876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_currency_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.112781Z", "completed_at": "2024-04-29T22:43:36.113895Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.123343Z", "completed_at": "2024-04-29T22:43:36.123347Z"}], "thread_id": "Thread-2", "execution_time": 0.025419235229492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.116362Z", "completed_at": "2024-04-29T22:43:36.117476Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.128187Z", "completed_at": "2024-04-29T22:43:36.128191Z"}], "thread_id": "Thread-3", "execution_time": 0.021409034729003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_department_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.118238Z", "completed_at": "2024-04-29T22:43:36.120131Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.128912Z", "completed_at": "2024-04-29T22:43:36.128916Z"}], "thread_id": "Thread-6", "execution_time": 0.02148723602294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_entities_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.120414Z", "completed_at": "2024-04-29T22:43:36.121436Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.129175Z", "completed_at": "2024-04-29T22:43:36.129178Z"}], "thread_id": "Thread-4", "execution_time": 0.021589040756225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_entity_address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.122027Z", "completed_at": "2024-04-29T22:43:36.123071Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.129692Z", "completed_at": "2024-04-29T22:43:36.129695Z"}], "thread_id": "Thread-5", "execution_time": 0.020412921905517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.123830Z", "completed_at": "2024-04-29T22:43:36.124877Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.130760Z", "completed_at": "2024-04-29T22:43:36.130765Z"}], "thread_id": "Thread-8", "execution_time": 0.019451141357421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_job_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.125163Z", "completed_at": "2024-04-29T22:43:36.126185Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.131034Z", "completed_at": "2024-04-29T22:43:36.131036Z"}], "thread_id": "Thread-7", "execution_time": 0.019547224044799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_location_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.137523Z", "completed_at": "2024-04-29T22:43:36.139486Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.147920Z", "completed_at": "2024-04-29T22:43:36.147924Z"}], "thread_id": "Thread-1", "execution_time": 0.02174997329711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_location_main_address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.140154Z", "completed_at": "2024-04-29T22:43:36.141204Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.149560Z", "completed_at": "2024-04-29T22:43:36.149564Z"}], "thread_id": "Thread-2", "execution_time": 0.021617889404296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_subsidiary_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.143560Z", "completed_at": "2024-04-29T22:43:36.144632Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.155017Z", "completed_at": "2024-04-29T22:43:36.155021Z"}], "thread_id": "Thread-3", "execution_time": 0.021274089813232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_tran_acct_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.145335Z", "completed_at": "2024-04-29T22:43:36.146356Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.155725Z", "completed_at": "2024-04-29T22:43:36.155728Z"}], "thread_id": "Thread-6", "execution_time": 0.02138686180114746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.146622Z", "completed_at": "2024-04-29T22:43:36.147645Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.155984Z", "completed_at": "2024-04-29T22:43:36.155987Z"}], "thread_id": "Thread-4", "execution_time": 0.021483182907104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_transaction_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.148218Z", "completed_at": "2024-04-29T22:43:36.149282Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.156483Z", "completed_at": "2024-04-29T22:43:36.156485Z"}], "thread_id": "Thread-5", "execution_time": 0.019701004028320312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_vendor_category_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.150060Z", "completed_at": "2024-04-29T22:43:36.151831Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.157496Z", "completed_at": "2024-04-29T22:43:36.157500Z"}], "thread_id": "Thread-8", "execution_time": 0.0188448429107666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_vendor_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.152100Z", "completed_at": "2024-04-29T22:43:36.153101Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.157756Z", "completed_at": "2024-04-29T22:43:36.157759Z"}], "thread_id": "Thread-7", "execution_time": 0.018949031829833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounting_books_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.164184Z", "completed_at": "2024-04-29T22:43:36.165396Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.174548Z", "completed_at": "2024-04-29T22:43:36.174552Z"}], "thread_id": "Thread-1", "execution_time": 0.020829200744628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounting_periods_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.166066Z", "completed_at": "2024-04-29T22:43:36.167120Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.176086Z", "completed_at": "2024-04-29T22:43:36.176089Z"}], "thread_id": "Thread-2", "execution_time": 0.02071666717529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.169452Z", "completed_at": "2024-04-29T22:43:36.170512Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.180803Z", "completed_at": "2024-04-29T22:43:36.180806Z"}], "thread_id": "Thread-3", "execution_time": 0.020379066467285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_classes_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.171216Z", "completed_at": "2024-04-29T22:43:36.172972Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.181500Z", "completed_at": "2024-04-29T22:43:36.181503Z"}], "thread_id": "Thread-6", "execution_time": 0.020502805709838867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_consolidated_exchange_rates_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.173256Z", "completed_at": "2024-04-29T22:43:36.174281Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.181759Z", "completed_at": "2024-04-29T22:43:36.181762Z"}], "thread_id": "Thread-4", "execution_time": 0.020612001419067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_currencies_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.174810Z", "completed_at": "2024-04-29T22:43:36.175817Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.182267Z", "completed_at": "2024-04-29T22:43:36.182270Z"}], "thread_id": "Thread-5", "execution_time": 0.019589900970458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_customers_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.176557Z", "completed_at": "2024-04-29T22:43:36.177564Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.183280Z", "completed_at": "2024-04-29T22:43:36.183283Z"}], "thread_id": "Thread-8", "execution_time": 0.018723011016845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_departments_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.177844Z", "completed_at": "2024-04-29T22:43:36.178878Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.183539Z", "completed_at": "2024-04-29T22:43:36.183542Z"}], "thread_id": "Thread-7", "execution_time": 0.018832921981811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_expense_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.189997Z", "completed_at": "2024-04-29T22:43:36.191194Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.200587Z", "completed_at": "2024-04-29T22:43:36.200592Z"}], "thread_id": "Thread-1", "execution_time": 0.02192401885986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_income_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.191848Z", "completed_at": "2024-04-29T22:43:36.193664Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.202156Z", "completed_at": "2024-04-29T22:43:36.202160Z"}], "thread_id": "Thread-2", "execution_time": 0.02180027961730957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_items_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.196037Z", "completed_at": "2024-04-29T22:43:36.197101Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.207692Z", "completed_at": "2024-04-29T22:43:36.207695Z"}], "thread_id": "Thread-3", "execution_time": 0.02158212661743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_locations_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.197846Z", "completed_at": "2024-04-29T22:43:36.198935Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.208381Z", "completed_at": "2024-04-29T22:43:36.208384Z"}], "thread_id": "Thread-6", "execution_time": 0.02170276641845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_subsidiaries_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.199232Z", "completed_at": "2024-04-29T22:43:36.200299Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.208658Z", "completed_at": "2024-04-29T22:43:36.208662Z"}], "thread_id": "Thread-4", "execution_time": 0.0218050479888916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_transaction_lines_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.200848Z", "completed_at": "2024-04-29T22:43:36.201886Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.209209Z", "completed_at": "2024-04-29T22:43:36.209212Z"}], "thread_id": "Thread-5", "execution_time": 0.020949840545654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_transactions_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.202632Z", "completed_at": "2024-04-29T22:43:36.203656Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.210281Z", "completed_at": "2024-04-29T22:43:36.210284Z"}], "thread_id": "Thread-8", "execution_time": 0.019340991973876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_vendor_types_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.203925Z", "completed_at": "2024-04-29T22:43:36.205740Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:36.210542Z", "completed_at": "2024-04-29T22:43:36.210545Z"}], "thread_id": "Thread-7", "execution_time": 0.019455909729003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_vendors_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.241144Z", "completed_at": "2024-04-29T22:43:37.152531Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.156642Z", "completed_at": "2024-04-29T22:43:37.156646Z"}], "thread_id": "Thread-4", "execution_time": 1.0036749839782715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounts_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    acctnumber\n    \n as \n    \n    acctnumber\n    \n, \n    \n    \n    accttype\n    \n as \n    \n    accttype\n    \n, \n    \n    \n    sspecacct\n    \n as \n    \n    sspecacct\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    deferralacct\n    \n as \n    \n    deferralacct\n    \n, \n    \n    \n    cashflowrate\n    \n as \n    \n    cashflowrate\n    \n, \n    \n    \n    generalrate\n    \n as \n    \n    generalrate\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    includechildren\n    \n as \n    \n    includechildren\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    issummary\n    \n as \n    \n    issummary\n    \n, \n    \n    \n    eliminate\n    \n as \n    \n    eliminate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as account_id, \n        externalid as account_external_id,\n        parent as parent_id,\n        acctnumber as account_number,\n        accttype as account_type_id,\n        sspecacct as special_account_type_id,\n        fullname as name,\n        description as account_description,\n        deferralacct as deferral_account_id,\n        cashflowrate as cash_flow_rate_type,\n        generalrate as general_rate_type,\n        currency as currency_id,\n        class as class_id,\n        department as department_id,\n        location as location_id,\n        includechildren = 'T' as is_including_child_subs,\n        isinactive = 'T' as is_inactive,\n        issummary = 'T' as is_summary,\n        eliminate = 'T' as is_eliminate,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your accounts_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.217097Z", "completed_at": "2024-04-29T22:43:37.152210Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.155938Z", "completed_at": "2024-04-29T22:43:37.155945Z"}], "thread_id": "Thread-1", "execution_time": 1.010443925857544, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__account_types", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__account_types_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    balancesheet\n    \n as \n    \n    balancesheet\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    defaultcashflowratetype\n    \n as \n    \n    defaultcashflowratetype\n    \n, \n    \n    \n    defaultgeneralratetype\n    \n as \n    \n    defaultgeneralratetype\n    \n, \n    \n    \n    eliminationalgo\n    \n as \n    \n    eliminationalgo\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includeinrevaldefault\n    \n as \n    \n    includeinrevaldefault\n    \n, \n    \n    \n    internalid\n    \n as \n    \n    internalid\n    \n, \n    \n    \n        \n            \n            \"left\"\n            \n        \n    \n as \n    \n        \n            \n            \"left\"\n            \n        \n    \n, \n    \n    \n    longname\n    \n as \n    \n    longname\n    \n, \n    \n    \n    seqnum\n    \n as \n    \n    seqnum\n    \n, \n    \n    \n    usercanchangerevaloption\n    \n as \n    \n    usercanchangerevaloption\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        id as account_type_id,\n        balancesheet = 'T' as is_balancesheet,\"left\"= 'T' as is_leftside,\n        longname as type_name\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__account_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.236881Z", "completed_at": "2024-04-29T22:43:37.152892Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.157121Z", "completed_at": "2024-04-29T22:43:37.157124Z"}], "thread_id": "Thread-6", "execution_time": 1.0134639739990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_period_fiscal_cal", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountingperiod\n    \n as \n    \n    accountingperiod\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    fiscalcalendar\n    \n as \n    \n    fiscalcalendar\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        accountingperiod as accounting_period_id,\n        fiscalcalendar as fiscal_calendar_id,\n        parent as parent_id\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.224957Z", "completed_at": "2024-04-29T22:43:37.153384Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.157382Z", "completed_at": "2024-04-29T22:43:37.157385Z"}], "thread_id": "Thread-2", "execution_time": 1.0263350009918213, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_book_subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        accountingbook as accounting_book_id,\n        status,\n        subsidiary as subsidiary_id\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.231453Z", "completed_at": "2024-04-29T22:43:37.154524Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.158380Z", "completed_at": "2024-04-29T22:43:37.158383Z"}], "thread_id": "Thread-3", "execution_time": 1.0241420269012451, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_books", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_books_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    basebook\n    \n as \n    \n    basebook\n    \n, \n    cast(null as TEXT) as \n    \n    contingentrevenuehandling\n    \n , \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    effectiveperiod\n    \n as \n    \n    effectiveperiod\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isadjustmentonly\n    \n as \n    \n    isadjustmentonly\n    \n, \n    \n    \n    isconsolidated\n    \n as \n    \n    isconsolidated\n    \n, \n    \n    \n    isprimary\n    \n as \n    \n    isprimary\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subsidiariesstring\n    \n as \n    \n    subsidiariesstring\n    \n, \n    cast(null as TEXT) as \n    \n    twosteprevenueallocation\n    \n , \n    cast(null as TEXT) as \n    \n    unbilledreceivablegrouping\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as accounting_book_id,\n        name as accounting_book_name,\n        basebook as base_book_id,\n        effectiveperiod as effective_period_id,\n        isadjustmentonly = 'T' as is_adjustment_only,\n        isconsolidated = 'T' as is_consolidated,\n        contingentrevenuehandling as is_contingent_revenue_handling,\n        isprimary = 'T' as is_primary,\n        twosteprevenueallocation as is_two_step_revenue_allocation\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_books\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.250688Z", "completed_at": "2024-04-29T22:43:37.153726Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.157638Z", "completed_at": "2024-04-29T22:43:37.157641Z"}], "thread_id": "Thread-8", "execution_time": 1.0107722282409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__classes", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__classes_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as class_id,\n        externalid as class_external_id,\n        name,\n        fullname as full_name,\n        isinactive = 'T' as is_inactive,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your classes_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__classes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.245837Z", "completed_at": "2024-04-29T22:43:37.154990Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.158856Z", "completed_at": "2024-04-29T22:43:37.158859Z"}], "thread_id": "Thread-5", "execution_time": 1.0180330276489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_periods", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_periods_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    alllocked\n    \n as \n    \n    alllocked\n    \n, \n    \n    \n    allownonglchanges\n    \n as \n    \n    allownonglchanges\n    \n, \n    \n    \n    aplocked\n    \n as \n    \n    aplocked\n    \n, \n    \n    \n    arlocked\n    \n as \n    \n    arlocked\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    \n    \n    closedondate\n    \n as \n    \n    closedondate\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    enddate\n    \n as \n    \n    enddate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isadjust\n    \n as \n    \n    isadjust\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isposting\n    \n as \n    \n    isposting\n    \n, \n    \n    \n    isquarter\n    \n as \n    \n    isquarter\n    \n, \n    \n    \n    isyear\n    \n as \n    \n    isyear\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    periodname\n    \n as \n    \n    periodname\n    \n, \n    \n    \n    startdate\n    \n as \n    \n    startdate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as accounting_period_id,\n        parent as parent_id, \n        periodname as name,\n        startdate as starting_at,\n        enddate as ending_at,\n        closedondate as closed_at,\n        isquarter = 'T' as is_quarter,\n        isyear = 'T' as is_year,\n        isadjust = 'T' as is_adjustment,\n        isposting = 'T' as is_posting,\n        closed = 'T' as is_closed,\n        alllocked = 'T' as is_all_locked,\n        arlocked = 'T' as is_ar_locked,\n        aplocked = 'T' as is_ap_locked\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_periods\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:36.255281Z", "completed_at": "2024-04-29T22:43:37.154243Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.158125Z", "completed_at": "2024-04-29T22:43:37.158127Z"}], "thread_id": "Thread-7", "execution_time": 1.012350082397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__consolidated_exchange_rates", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    averagerate\n    \n as \n    \n    averagerate\n    \n, \n    \n    \n    currentrate\n    \n as \n    \n    currentrate\n    \n, \n    \n    \n    fromcurrency\n    \n as \n    \n    fromcurrency\n    \n, \n    \n    \n    fromsubsidiary\n    \n as \n    \n    fromsubsidiary\n    \n, \n    \n    \n    historicalrate\n    \n as \n    \n    historicalrate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    postingperiod\n    \n as \n    \n    postingperiod\n    \n, \n    \n    \n    tocurrency\n    \n as \n    \n    tocurrency\n    \n, \n    \n    \n    tosubsidiary\n    \n as \n    \n    tosubsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as consolidated_exchange_rate_id,\n        postingperiod as accounting_period_id,\n        fromcurrency as from_currency_id,\n        fromsubsidiary as from_subsidiary_id,\n        tocurrency as to_currency_id,\n        tosubsidiary as to_subsidiary_id,\n        accountingbook as accounting_book_id,\n        currentrate as current_rate, \n        averagerate as average_rate,\n        historicalrate as historical_rate\n\n        --The below macro adds the fields defined within your consolidated_exchange_rates_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:37.223561Z", "completed_at": "2024-04-29T22:43:37.951029Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.952454Z", "completed_at": "2024-04-29T22:43:37.952461Z"}], "thread_id": "Thread-4", "execution_time": 0.8638379573822021, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__currencies", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__currencies_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    currencyprecision\n    \n as \n    \n    currencyprecision\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    displaysymbol\n    \n as \n    \n    displaysymbol\n    \n, \n    \n    \n    exchangerate\n    \n as \n    \n    exchangerate\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fxrateupdatetimezone\n    \n as \n    \n    fxrateupdatetimezone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includeinfxrateupdates\n    \n as \n    \n    includeinfxrateupdates\n    \n, \n    \n    \n    isbasecurrency\n    \n as \n    \n    isbasecurrency\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    overridecurrencyformat\n    \n as \n    \n    overridecurrencyformat\n    \n, \n    \n    \n    symbol\n    \n as \n    \n    symbol\n    \n, \n    \n    \n    symbolplacement\n    \n as \n    \n    symbolplacement\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as currency_id,\n        name,\n        symbol\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__currencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:37.252912Z", "completed_at": "2024-04-29T22:43:37.951363Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.952734Z", "completed_at": "2024-04-29T22:43:37.952737Z"}], "thread_id": "Thread-2", "execution_time": 0.8367559909820557, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entities", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__entities_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    altemail\n    \n as \n    \n    altemail\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    altphone\n    \n as \n    \n    altphone\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    employee\n    \n as \n    \n    employee\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fax\n    \n as \n    \n    fax\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    genericresource\n    \n as \n    \n    genericresource\n    \n, \n    \n    \n    homephone\n    \n as \n    \n    homephone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    laborcost\n    \n as \n    \n    laborcost\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    middlename\n    \n as \n    \n    middlename\n    \n, \n    \n    \n    mobilephone\n    \n as \n    \n    mobilephone\n    \n, \n    \n    \n    othername\n    \n as \n    \n    othername\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    partner\n    \n as \n    \n    partner\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    project\n    \n as \n    \n    project\n    \n, \n    \n    \n    projecttemplate\n    \n as \n    \n    projecttemplate\n    \n, \n    \n    \n    salutation\n    \n as \n    \n    salutation\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    toplevelparent\n    \n as \n    \n    toplevelparent\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as entity_id,\n        parent as parent_id,\n        entitytitle as entity_name,\n        type as entity_type,\n        isperson = 'T' as is_person,\n        contact as contact_id,\n        customer as customer_id,\n        employee as employee_id,\n        project as job_id,\n        vendor as vendor_id\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__entities\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:37.231357Z", "completed_at": "2024-04-29T22:43:37.952182Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.953728Z", "completed_at": "2024-04-29T22:43:37.953733Z"}], "thread_id": "Thread-1", "execution_time": 0.8574328422546387, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__customers", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__customers_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    receivablesaccount\n    \n as \n    \n    receivablesaccount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    firstorderdate\n    \n as \n    \n    firstorderdate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as customer_id,\n        entityid as entity_id,\n        externalid as customer_external_id,\n        parent as parent_id,\n        isperson = 'T' as is_person,\n        companyname as company_name,\n        firstname as first_name,\n        lastname as last_name,\n        email as email_address,\n        phone as phone_number,\n        defaultbillingaddress as default_billing_address_id,\n        defaultshippingaddress as default_shipping_address_id,\n        receivablesaccount as receivables_account_id,\n        currency as currency_id,\n        firstorderdate as date_first_order_at\n\n        --The below macro adds the fields defined within your customers_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:37.257796Z", "completed_at": "2024-04-29T22:43:37.975886Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:37.989468Z", "completed_at": "2024-04-29T22:43:37.989474Z"}], "thread_id": "Thread-3", "execution_time": 0.894524097442627, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entity_address", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__entity_address_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    addr1\n    \n as \n    \n    addr1\n    \n, \n    \n    \n    addr2\n    \n as \n    \n    addr2\n    \n, \n    \n    \n    addr3\n    \n as \n    \n    addr3\n    \n, \n    \n    \n    addressee\n    \n as \n    \n    addressee\n    \n, \n    \n    \n    addrphone\n    \n as \n    \n    addrphone\n    \n, \n    \n    \n    addrtext\n    \n as \n    \n    addrtext\n    \n, \n    \n    \n    attention\n    \n as \n    \n    attention\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    dropdownstate\n    \n as \n    \n    dropdownstate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    nkey\n    \n as \n    \n    nkey\n    \n, \n    \n    \n    override\n    \n as \n    \n    override\n    \n, \n    \n    \n    recordowner\n    \n as \n    \n    recordowner\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        addr1,\n        addr2,\n        addr3,\n        addressee,\n        addrtext as full_address,\n        city,\n        country,\n        coalesce(state, dropdownstate) as state,\n        nkey,\n        zip as zipcode\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__entity_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:37.270900Z", "completed_at": "2024-04-29T22:43:37.988705Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.084481Z", "completed_at": "2024-04-29T22:43:38.084495Z"}], "thread_id": "Thread-7", "execution_time": 0.8947951793670654, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__location_main_address", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__location_main_address_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    addr1\n    \n as \n    \n    addr1\n    \n, \n    \n    \n    addr2\n    \n as \n    \n    addr2\n    \n, \n    \n    \n    addr3\n    \n as \n    \n    addr3\n    \n, \n    \n    \n    addressee\n    \n as \n    \n    addressee\n    \n, \n    \n    \n    addrphone\n    \n as \n    \n    addrphone\n    \n, \n    \n    \n    addrtext\n    \n as \n    \n    addrtext\n    \n, \n    \n    \n    attention\n    \n as \n    \n    attention\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    dropdownstate\n    \n as \n    \n    dropdownstate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    nkey\n    \n as \n    \n    nkey\n    \n, \n    \n    \n    override\n    \n as \n    \n    override\n    \n, \n    \n    \n    recordowner\n    \n as \n    \n    recordowner\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        addr1,\n        addr2,\n        addr3,\n        addressee,\n        addrtext as full_address,\n        city,\n        country,\n        coalesce(state, dropdownstate) as state,\n        nkey,\n        zip as zipcode\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__location_main_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:37.261927Z", "completed_at": "2024-04-29T22:43:38.087274Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.091880Z", "completed_at": "2024-04-29T22:43:38.091885Z"}], "thread_id": "Thread-8", "execution_time": 0.9257378578186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__items", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__items_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as integer) as \n    \n    alternatedemandsourceitem\n    \n , \n    cast(null as integer) as \n    \n    amortizationperiod\n    \n , \n    cast(null as integer) as \n    \n    amortizationtemplate\n    \n , \n    \n    \n    assetaccount\n    \n as \n    \n    assetaccount\n    \n, \n    cast(null as TEXT) as \n    \n    atpmethod\n    \n , \n    cast(null as TEXT) as \n    \n    autoexpandkitforrevenuemgmt\n    \n , \n    cast(null as float) as \n    \n    averagecost\n    \n , \n    cast(null as integer) as \n    \n    backwardconsumptiondays\n    \n , \n    cast(null as integer) as \n    \n    billexchratevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    billingschedule\n    \n , \n    cast(null as integer) as \n    \n    billpricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    billqtyvarianceacct\n    \n , \n    cast(null as TEXT) as \n    \n    buildentireassembly\n    \n , \n    cast(null as float) as \n    \n    buildtime\n    \n , \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    cast(null as integer) as \n    \n    consumptionunit\n    \n , \n    cast(null as TEXT) as \n    \n    copydescription\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as float) as \n    \n    costestimate\n    \n , \n    cast(null as TEXT) as \n    \n    costestimatetype\n    \n , \n    cast(null as TEXT) as \n    \n    costingmethod\n    \n , \n    cast(null as TEXT) as \n    \n    costingmethoddisplay\n    \n , \n    cast(null as TEXT) as \n    \n    countryofmanufacture\n    \n , \n    cast(null as timestamp) as \n    \n    createddate\n    \n , \n    cast(null as integer) as \n    \n    createexpenseplanson\n    \n , \n    cast(null as TEXT) as \n    \n    createjob\n    \n , \n    cast(null as integer) as \n    \n    createrevenueplanson\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    \n    \n    deferralaccount\n    \n as \n    \n    deferralaccount\n    \n, \n    cast(null as integer) as \n    \n    deferredrevenueaccount\n    \n , \n    cast(null as TEXT) as \n    \n    deferrevrec\n    \n , \n    cast(null as float) as \n    \n    demandmodifier\n    \n , \n    cast(null as TEXT) as \n    \n    demandsource\n    \n , \n    cast(null as integer) as \n    \n    demandtimefence\n    \n , \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    cast(null as TEXT) as \n    \n    directrevenueposting\n    \n , \n    cast(null as TEXT) as \n    \n    displayname\n    \n , \n    cast(null as integer) as \n    \n    dropshipexpenseaccount\n    \n , \n    cast(null as TEXT) as \n    \n    enforceminqtyinternally\n    \n , \n    cast(null as TEXT) as \n    \n    excludefromsitemap\n    \n , \n    \n    \n    expenseaccount\n    \n as \n    \n    expenseaccount\n    \n, \n    cast(null as integer) as \n    \n    expenseamortizationrule\n    \n , \n    cast(null as TEXT) as \n    \n    externalid\n    \n , \n    cast(null as float) as \n    \n    fixedlotsize\n    \n , \n    cast(null as integer) as \n    \n    forwardconsumptiondays\n    \n , \n    cast(null as TEXT) as \n    \n    froogleproductfeed\n    \n , \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    cast(null as float) as \n    \n    fxcost\n    \n , \n    \n    \n    gainlossaccount\n    \n as \n    \n    gainlossaccount\n    \n, \n    cast(null as TEXT) as \n    \n    generateaccruals\n    \n , \n    cast(null as float) as \n    \n    handlingcost\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as TEXT) as \n    \n    includechildren\n    \n , \n    \n    \n    incomeaccount\n    \n as \n    \n    incomeaccount\n    \n, \n    cast(null as integer) as \n    \n    intercodefrevaccount\n    \n , \n    cast(null as integer) as \n    \n    intercoexpenseaccount\n    \n , \n    cast(null as integer) as \n    \n    intercoincomeaccount\n    \n , \n    cast(null as TEXT) as \n    \n    isdropshipitem\n    \n , \n    cast(null as TEXT) as \n    \n    isfulfillable\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    islotitem\n    \n , \n    cast(null as TEXT) as \n    \n    isonline\n    \n , \n    cast(null as TEXT) as \n    \n    isphantom\n    \n , \n    cast(null as TEXT) as \n    \n    isserialitem\n    \n , \n    cast(null as TEXT) as \n    \n    isspecialorderitem\n    \n , \n    cast(null as TEXT) as \n    \n    isspecialworkorderitem\n    \n , \n    cast(null as TEXT) as \n    \n    itemid\n    \n , \n    cast(null as integer) as \n    \n    itemrevenuecategory\n    \n , \n    \n    \n    itemtype\n    \n as \n    \n    itemtype\n    \n, \n    cast(null as timestamp) as \n    \n    lastmodifieddate\n    \n , \n    cast(null as float) as \n    \n    lastpurchaseprice\n    \n , \n    cast(null as integer) as \n    \n    leadtime\n    \n , \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    cast(null as TEXT) as \n    \n    manufacturer\n    \n , \n    cast(null as TEXT) as \n    \n    matchbilltoreceipt\n    \n , \n    cast(null as TEXT) as \n    \n    matrixitemnametemplate\n    \n , \n    cast(null as TEXT) as \n    \n    matrixtype\n    \n , \n    cast(null as integer) as \n    \n    maximumquantity\n    \n , \n    cast(null as integer) as \n    \n    minimumquantity\n    \n , \n    cast(null as TEXT) as \n    \n    mpn\n    \n , \n    cast(null as TEXT) as \n    \n    nextagcategory\n    \n , \n    cast(null as TEXT) as \n    \n    nextagproductfeed\n    \n , \n    cast(null as TEXT) as \n    \n    overallquantitypricingtype\n    \n , \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    cast(null as integer) as \n    \n    periodiclotsizedays\n    \n , \n    cast(null as TEXT) as \n    \n    periodiclotsizetype\n    \n , \n    cast(null as integer) as \n    \n    preferredlocation\n    \n , \n    cast(null as integer) as \n    \n    pricinggroup\n    \n , \n    cast(null as TEXT) as \n    \n    printitems\n    \n , \n    cast(null as integer) as \n    \n    prodpricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    prodqtyvarianceacct\n    \n , \n    cast(null as integer) as \n    \n    projectexpensetype\n    \n , \n    cast(null as integer) as \n    \n    projecttemplate\n    \n , \n    cast(null as TEXT) as \n    \n    purchasedescription\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as integer) as \n    \n    purchasepricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    purchaseunit\n    \n , \n    cast(null as integer) as \n    \n    quantitypricingschedule\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    relateditemsdescription\n    \n , \n    cast(null as integer) as \n    \n    rescheduleindays\n    \n , \n    cast(null as integer) as \n    \n    rescheduleoutdays\n    \n , \n    cast(null as float) as \n    \n    residual\n    \n , \n    cast(null as integer) as \n    \n    revenueallocationgroup\n    \n , \n    cast(null as integer) as \n    \n    revenuerecognitionrule\n    \n , \n    cast(null as integer) as \n    \n    revrecforecastrule\n    \n , \n    cast(null as integer) as \n    \n    revreclassfxaccount\n    \n , \n    cast(null as TEXT) as \n    \n    roundupascomponent\n    \n , \n    cast(null as float) as \n    \n    safetystocklevel\n    \n , \n    cast(null as integer) as \n    \n    saleunit\n    \n , \n    cast(null as integer) as \n    \n    scrapacct\n    \n , \n    cast(null as TEXT) as \n    \n    searchkeywords\n    \n , \n    cast(null as TEXT) as \n    \n    seasonaldemand\n    \n , \n    cast(null as TEXT) as \n    \n    shipindividually\n    \n , \n    cast(null as integer) as \n    \n    shippackage\n    \n , \n    cast(null as float) as \n    \n    shippingcost\n    \n , \n    cast(null as TEXT) as \n    \n    shoppingdotcomcategory\n    \n , \n    cast(null as TEXT) as \n    \n    shoppingproductfeed\n    \n , \n    cast(null as integer) as \n    \n    shopzillacategoryid\n    \n , \n    cast(null as TEXT) as \n    \n    shopzillaproductfeed\n    \n , \n    cast(null as TEXT) as \n    \n    sitemappriority\n    \n , \n    cast(null as TEXT) as \n    \n    stockdescription\n    \n , \n    cast(null as integer) as \n    \n    stockunit\n    \n , \n    cast(null as TEXT) as \n    \n    storedescription\n    \n , \n    cast(null as integer) as \n    \n    storedisplayimage\n    \n , \n    cast(null as TEXT) as \n    \n    storedisplayname\n    \n , \n    cast(null as integer) as \n    \n    storedisplaythumbnail\n    \n , \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    cast(null as TEXT) as \n    \n    subtype\n    \n , \n    cast(null as TEXT) as \n    \n    supplylotsizingmethod\n    \n , \n    cast(null as TEXT) as \n    \n    supplyreplenishmentmethod\n    \n , \n    cast(null as integer) as \n    \n    supplytimefence\n    \n , \n    cast(null as TEXT) as \n    \n    supplytype\n    \n , \n    cast(null as float) as \n    \n    totalquantityonhand\n    \n , \n    cast(null as float) as \n    \n    totalvalue\n    \n , \n    cast(null as float) as \n    \n    transferprice\n    \n , \n    cast(null as integer) as \n    \n    unbuildvarianceaccount\n    \n , \n    cast(null as integer) as \n    \n    unitstype\n    \n , \n    cast(null as TEXT) as \n    \n    upccode\n    \n , \n    cast(null as TEXT) as \n    \n    usebins\n    \n , \n    cast(null as TEXT) as \n    \n    usemarginalrates\n    \n , \n    cast(null as TEXT) as \n    \n    vendorname\n    \n , \n    cast(null as integer) as \n    \n    vendreturnvarianceaccount\n    \n , \n    cast(null as TEXT) as \n    \n    vsoedelivered\n    \n , \n    cast(null as TEXT) as \n    \n    vsoepermitdiscount\n    \n , \n    cast(null as TEXT) as \n    \n    vsoesopgroup\n    \n , \n    cast(null as float) as \n    \n    weight\n    \n , \n    cast(null as integer) as \n    \n    weightunit\n    \n , \n    cast(null as TEXT) as \n    \n    weightunits\n    \n , \n    cast(null as integer) as \n    \n    wipacct\n    \n , \n    cast(null as integer) as \n    \n    wipvarianceacct\n    \n , \n    cast(null as TEXT) as \n    \n    yahooproductfeed\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as item_id,\n        fullname as name,\n        itemtype as type_name,\n        description as sales_description,\n        department as department_id,\n        class as class_id,\n        location as location_id,\n        subsidiary as subsidiary_id,\n        assetaccount as asset_account_id,\n        expenseaccount as expense_account_id,\n        gainlossaccount as gain_loss_account_id,\n        incomeaccount as income_account_id,\n        intercoexpenseaccount as interco_expense_account_id,\n        intercoincomeaccount as interco_income_account_id,\n        deferralaccount as deferred_expense_account_id,\n        deferredrevenueaccount as deferred_revenue_account_id,\n        parent as parent_item_id\n\n        --The below macro adds the fields defined within your items_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:37.266579Z", "completed_at": "2024-04-29T22:43:38.088635Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.092691Z", "completed_at": "2024-04-29T22:43:38.092695Z"}], "thread_id": "Thread-5", "execution_time": 0.9257011413574219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__jobs", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__jobs_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountnumber\n    \n as \n    \n    accountnumber\n    \n, \n    \n    \n    actualtime\n    \n as \n    \n    actualtime\n    \n, \n    \n    \n    allowallresourcesfortasks\n    \n as \n    \n    allowallresourcesfortasks\n    \n, \n    \n    \n    allowexpenses\n    \n as \n    \n    allowexpenses\n    \n, \n    \n    \n    allowtime\n    \n as \n    \n    allowtime\n    \n, \n    \n    \n    alternatecontact\n    \n as \n    \n    alternatecontact\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    billingschedule\n    \n as \n    \n    billingschedule\n    \n, \n    \n    \n    calculatedenddate\n    \n as \n    \n    calculatedenddate\n    \n, \n    \n    \n    calculatedenddatebaseline\n    \n as \n    \n    calculatedenddatebaseline\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    contactlist\n    \n as \n    \n    contactlist\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    currencyprecision\n    \n as \n    \n    currencyprecision\n    \n, \n    \n    \n    custentity1\n    \n as \n    \n    custentity1\n    \n, \n    \n    \n    custentity4\n    \n as \n    \n    custentity4\n    \n, \n    \n    \n    custentity5\n    \n as \n    \n    custentity5\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    enddate\n    \n as \n    \n    enddate\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitystatus\n    \n as \n    \n    entitystatus\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    estimatedcost\n    \n as \n    \n    estimatedcost\n    \n, \n    \n    \n    estimatedgrossprofit\n    \n as \n    \n    estimatedgrossprofit\n    \n, \n    \n    \n    estimatedgrossprofitpercent\n    \n as \n    \n    estimatedgrossprofitpercent\n    \n, \n    \n    \n    estimatedlaborcost\n    \n as \n    \n    estimatedlaborcost\n    \n, \n    \n    \n    estimatedlaborcostbaseline\n    \n as \n    \n    estimatedlaborcostbaseline\n    \n, \n    \n    \n    estimatedlaborrevenue\n    \n as \n    \n    estimatedlaborrevenue\n    \n, \n    \n    \n    estimatedrevenue\n    \n as \n    \n    estimatedrevenue\n    \n, \n    \n    \n    estimatedtime\n    \n as \n    \n    estimatedtime\n    \n, \n    \n    \n    estimatedtimeoverride\n    \n as \n    \n    estimatedtimeoverride\n    \n, \n    \n    \n    estimatedtimeoverridebaseline\n    \n as \n    \n    estimatedtimeoverridebaseline\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    files\n    \n as \n    \n    files\n    \n, \n    \n    \n    forecastchargerunondemand\n    \n as \n    \n    forecastchargerunondemand\n    \n, \n    \n    \n    fxrate\n    \n as \n    \n    fxrate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includecrmtasksintotals\n    \n as \n    \n    includecrmtasksintotals\n    \n, \n    \n    \n    isexempttime\n    \n as \n    \n    isexempttime\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isproductivetime\n    \n as \n    \n    isproductivetime\n    \n, \n    \n    \n    isutilizedtime\n    \n as \n    \n    isutilizedtime\n    \n, \n    \n    \n    jobbillingtype\n    \n as \n    \n    jobbillingtype\n    \n, \n    \n    \n    jobitem\n    \n as \n    \n    jobitem\n    \n, \n    \n    \n    jobprice\n    \n as \n    \n    jobprice\n    \n, \n    \n    \n    jobtype\n    \n as \n    \n    jobtype\n    \n, \n    \n    \n    lastbaselinedate\n    \n as \n    \n    lastbaselinedate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    limittimetoassignees\n    \n as \n    \n    limittimetoassignees\n    \n, \n    \n    \n    materializetime\n    \n as \n    \n    materializetime\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    percentcomplete\n    \n as \n    \n    percentcomplete\n    \n, \n    \n    \n    percenttimecomplete\n    \n as \n    \n    percenttimecomplete\n    \n, \n    \n    \n    primarycontact\n    \n as \n    \n    primarycontact\n    \n, \n    \n    \n    projectedenddate\n    \n as \n    \n    projectedenddate\n    \n, \n    \n    \n    projectedenddatebaseline\n    \n as \n    \n    projectedenddatebaseline\n    \n, \n    \n    \n    projectmanager\n    \n as \n    \n    projectmanager\n    \n, \n    \n    \n    startdate\n    \n as \n    \n    startdate\n    \n, \n    \n    \n    startdatebaseline\n    \n as \n    \n    startdatebaseline\n    \n, \n    \n    \n    timeapproval\n    \n as \n    \n    timeapproval\n    \n, \n    \n    \n    timeremaining\n    \n as \n    \n    timeremaining\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        id as job_id,\n        externalid as job_external_id,\n        customer as customer_id,\n        entityid as entity_id,\n        defaultbillingaddress as billing_address_id,\n        defaultshippingaddress as shipping_address_id,\n        parent as parent_id\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__jobs\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:37.243678Z", "completed_at": "2024-04-29T22:43:38.087877Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.092170Z", "completed_at": "2024-04-29T22:43:38.092173Z"}], "thread_id": "Thread-6", "execution_time": 0.9416120052337646, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__departments", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__departments_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as department_id,\n        parent as parent_id,\n        name,\n        fullname as full_name,\n        subsidiary as subsidiary_id,\n        isinactive = 'T' as is_inactive,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your departments_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__departments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:38.153727Z", "completed_at": "2024-04-29T22:43:38.905616Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.908491Z", "completed_at": "2024-04-29T22:43:38.908495Z"}], "thread_id": "Thread-7", "execution_time": 0.8436510562896729, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendor_categories", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendor_categories_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    istaxagency\n    \n as \n    \n    istaxagency\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as vendor_category_id,\n        name,\n        _fivetran_synced\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendor_categories\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:38.103477Z", "completed_at": "2024-04-29T22:43:38.904199Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.906611Z", "completed_at": "2024-04-29T22:43:38.906619Z"}], "thread_id": "Thread-1", "execution_time": 0.9050521850585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_accounting_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account\n    \n as \n    \n    account\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amountlinked\n    \n as \n    \n    amountlinked\n    \n, \n    \n    \n    amountpaid\n    \n as \n    \n    amountpaid\n    \n, \n    \n    \n    amountunpaid\n    \n as \n    \n    amountunpaid\n    \n, \n    \n    \n    credit\n    \n as \n    \n    credit\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    debit\n    \n as \n    \n    debit\n    \n, \n    \n    \n    exchangerate\n    \n as \n    \n    exchangerate\n    \n, \n    \n    \n    netamount\n    \n as \n    \n    netamount\n    \n, \n    \n    \n    overheadparentitem\n    \n as \n    \n    overheadparentitem\n    \n, \n    \n    \n    paymentamountunused\n    \n as \n    \n    paymentamountunused\n    \n, \n    \n    \n    paymentamountused\n    \n as \n    \n    paymentamountused\n    \n, \n    \n    \n    posting\n    \n as \n    \n    posting\n    \n, \n    \n    \n    transaction\n    \n as \n    \n    transaction\n    \n, \n    \n    \n    transactionline\n    \n as \n    \n    transactionline\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        transaction as transaction_id,\n        transactionline as transaction_line_id,\n        accountingbook as accounting_book_id,\n        account as account_id,\n        posting = 'T' as is_posting,\n        amount,\n        credit as credit_amount,\n        debit as debit_amount,\n        netamount as net_amount,\n        amountpaid as paid_amount,\n        amountunpaid as unpaid_amount\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:38.093889Z", "completed_at": "2024-04-29T22:43:38.904914Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.907692Z", "completed_at": "2024-04-29T22:43:38.907695Z"}], "thread_id": "Thread-4", "execution_time": 0.9072320461273193, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__locations", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__locations_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    mainaddress\n    \n as \n    \n    mainaddress\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as location_id,\n        name,\n        fullname as full_name,\n        mainaddress as main_address_id,\n        parent as parent_id,\n        subsidiary as subsidiary_id\n\n        --The below macro adds the fields defined within your locations_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:38.098949Z", "completed_at": "2024-04-29T22:43:38.905943Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.908789Z", "completed_at": "2024-04-29T22:43:38.908792Z"}], "thread_id": "Thread-2", "execution_time": 0.9443051815032959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__subsidiaries_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    mainaddress\n    \n as \n    \n    mainaddress\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    fiscalcalendar\n    \n as \n    \n    fiscalcalendar\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as subsidiary_id,\n        name,\n        fullname as full_name,\n        email as email_address,\n        mainaddress as main_address_id,\n        country,\n        state,\n        fiscalcalendar as fiscal_calendar_id,\n        parent as parent_id,\n        currency as currency_id\n\n        --The below macro adds the fields defined within your subsidiaries_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:38.146952Z", "completed_at": "2024-04-29T22:43:38.906915Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:38.909333Z", "completed_at": "2024-04-29T22:43:38.909336Z"}], "thread_id": "Thread-3", "execution_time": 0.890510082244873, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transactions", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transactions_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    transactionnumber\n    \n as \n    \n    transactionnumber\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    trandate\n    \n as \n    \n    trandate\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    createddate\n    \n as \n    \n    createddate\n    \n, \n    \n    \n    duedate\n    \n as \n    \n    duedate\n    \n, \n    \n    \n    closedate\n    \n as \n    \n    closedate\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    entity\n    \n as \n    \n    entity\n    \n, \n    \n    \n    postingperiod\n    \n as \n    \n    postingperiod\n    \n, \n    \n    \n    posting\n    \n as \n    \n    posting\n    \n, \n    cast(null as TEXT) as \n    \n    intercoadj\n    \n , \n    \n    \n    isreversal\n    \n as \n    \n    isreversal\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        cast(_fivetran_synced as date) as _fivetran_synced_date,\n        id as transaction_id,\n        transactionnumber as transaction_number,\n        type as transaction_type,\n        memo,\n        trandate as transaction_date,\n        status,\n        createddate as created_at,\n        duedate as due_date_at,\n        closedate as closed_at,\n        currency as currency_id,\n        entity as entity_id,\n        postingperiod as accounting_period_id,\n        posting = 'T' as is_posting,\n        intercoadj = 'T' as is_intercompany_adjustment,\n        isreversal = 'T' as is_reversal\n\n        --The below macro adds the fields defined within your transactions_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:38.228158Z", "completed_at": "2024-04-29T22:43:39.079936Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.083026Z", "completed_at": "2024-04-29T22:43:39.083029Z"}], "thread_id": "Thread-6", "execution_time": 0.9251749515533447, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendors", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendors_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountnumber\n    \n as \n    \n    accountnumber\n    \n, \n    \n    \n    altemail\n    \n as \n    \n    altemail\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    altphone\n    \n as \n    \n    altphone\n    \n, \n    \n    \n    balance\n    \n as \n    \n    balance\n    \n, \n    \n    \n    balanceprimary\n    \n as \n    \n    balanceprimary\n    \n, \n    cast(null as integer) as \n    \n    billingclass\n    \n , \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    contactlist\n    \n as \n    \n    contactlist\n    \n, \n    \n    \n    creditlimit\n    \n as \n    \n    creditlimit\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    defaultbankaccount\n    \n as \n    \n    defaultbankaccount\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    defaultvendorpaymentaccount\n    \n as \n    \n    defaultvendorpaymentaccount\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    emailpreference\n    \n as \n    \n    emailpreference\n    \n, \n    \n    \n    emailtransactions\n    \n as \n    \n    emailtransactions\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    expenseaccount\n    \n as \n    \n    expenseaccount\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fax\n    \n as \n    \n    fax\n    \n, \n    \n    \n    faxtransactions\n    \n as \n    \n    faxtransactions\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    giveaccess\n    \n as \n    \n    giveaccess\n    \n, \n    \n    \n    homephone\n    \n as \n    \n    homephone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    incoterm\n    \n as \n    \n    incoterm\n    \n, \n    cast(null as TEXT) as \n    \n    isautogeneratedrepresentingentity\n    \n , \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isjobresourcevend\n    \n as \n    \n    isjobresourcevend\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    laborcost\n    \n as \n    \n    laborcost\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    legalname\n    \n as \n    \n    legalname\n    \n, \n    \n    \n    middlename\n    \n as \n    \n    middlename\n    \n, \n    \n    \n    mobilephone\n    \n as \n    \n    mobilephone\n    \n, \n    \n    \n    payablesaccount\n    \n as \n    \n    payablesaccount\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    printoncheckas\n    \n as \n    \n    printoncheckas\n    \n, \n    \n    \n    printtransactions\n    \n as \n    \n    printtransactions\n    \n, \n    \n    \n    purchaseorderamount\n    \n as \n    \n    purchaseorderamount\n    \n, \n    \n    \n    purchaseorderquantity\n    \n as \n    \n    purchaseorderquantity\n    \n, \n    \n    \n    purchaseorderquantitydiff\n    \n as \n    \n    purchaseorderquantitydiff\n    \n, \n    \n    \n    receiptamount\n    \n as \n    \n    receiptamount\n    \n, \n    \n    \n    receiptquantity\n    \n as \n    \n    receiptquantity\n    \n, \n    \n    \n    receiptquantitydiff\n    \n as \n    \n    receiptquantitydiff\n    \n, \n    cast(null as integer) as \n    \n    representingsubsidiary\n    \n , \n    \n    \n    rolesforsearch\n    \n as \n    \n    rolesforsearch\n    \n, \n    \n    \n    salutation\n    \n as \n    \n    salutation\n    \n, \n    \n    \n    subsidiaryedition\n    \n as \n    \n    subsidiaryedition\n    \n, \n    \n    \n    terms\n    \n as \n    \n    terms\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    unbilledorders\n    \n as \n    \n    unbilledorders\n    \n, \n    \n    \n    unbilledordersprimary\n    \n as \n    \n    unbilledordersprimary\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    workcalendar\n    \n as \n    \n    workcalendar\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as vendor_id,\n        companyname as company_name,\n        datecreated as create_date_at,\n        category as vendor_category_id\n\n        --The below macro adds the fields defined within your vendors_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendors\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:38.179940Z", "completed_at": "2024-04-29T22:43:39.077332Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.081223Z", "completed_at": "2024-04-29T22:43:39.081229Z"}], "thread_id": "Thread-8", "execution_time": 0.9747819900512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_lines_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    transaction\n    \n as \n    \n    transaction\n    \n, \n    \n    \n    linesequencenumber\n    \n as \n    \n    linesequencenumber\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    entity\n    \n as \n    \n    entity\n    \n, \n    \n    \n    item\n    \n as \n    \n    item\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    isclosed\n    \n as \n    \n    isclosed\n    \n, \n    \n    \n    isbillable\n    \n as \n    \n    isbillable\n    \n, \n    \n    \n    iscogs\n    \n as \n    \n    iscogs\n    \n, \n    \n    \n    cleared\n    \n as \n    \n    cleared\n    \n, \n    \n    \n    commitmentfirm\n    \n as \n    \n    commitmentfirm\n    \n, \n    \n    \n    mainline\n    \n as \n    \n    mainline\n    \n, \n    \n    \n    taxline\n    \n as \n    \n    taxline\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as transaction_line_id,\n        transaction as transaction_id,\n        linesequencenumber as transaction_line_number,\n        memo,\n        entity as entity_id,\n        item as item_id,\n        class as class_id,\n        location as location_id,\n        subsidiary as subsidiary_id,\n        department as department_id,\n        isclosed = 'T' as is_closed,\n        isbillable = 'T' as is_billable,\n        iscogs = 'T' as is_cogs,\n        cleared = 'T' as is_cleared,\n        commitmentfirm = 'T' as is_commitment_firm,\n        mainline = 'T' as is_main_line,\n        taxline = 'T' as is_tax_line\n\n        --The below macro adds the fields defined within your transaction_lines_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:38.185006Z", "completed_at": "2024-04-29T22:43:39.079696Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.082772Z", "completed_at": "2024-04-29T22:43:39.082776Z"}], "thread_id": "Thread-5", "execution_time": 0.9757089614868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_books", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_books_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    accounting_book_extid\n    \n , \n    \n    \n    accounting_book_id\n    \n as \n    \n    accounting_book_id\n    \n, \n    cast(null as TEXT) as \n    \n    accounting_book_name\n    \n , \n    cast(null as float) as \n    \n    base_book_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_created\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as float) as \n    \n    effective_period_id\n    \n , \n    cast(null as TEXT) as \n    \n    form_template_component_id\n    \n , \n    cast(null as float) as \n    \n    form_template_id\n    \n , \n    cast(null as TEXT) as \n    \n    is_adjustment_only\n    \n , \n    cast(null as TEXT) as \n    \n    is_arrangement_level_reclass\n    \n , \n    cast(null as TEXT) as \n    \n    is_consolidated\n    \n , \n    cast(null as TEXT) as \n    \n    is_contingent_revenue_handling\n    \n , \n    cast(null as TEXT) as \n    \n    is_include_child_subsidiaries\n    \n , \n    \n    \n    is_primary\n    \n as \n    \n    is_primary\n    \n, \n    cast(null as TEXT) as \n    \n    is_two_step_revenue_allocation\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    unbilled_receivable_grouping\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        accounting_book_id,\n        is_primary,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_books\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.024069Z", "completed_at": "2024-04-29T22:43:39.876836Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.879877Z", "completed_at": "2024-04-29T22:43:39.879881Z"}], "thread_id": "Thread-1", "execution_time": 0.9434659481048584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    \n    \n    general_rate_type\n    \n as \n    \n    general_rate_type\n    \n, \n    \n    \n    is_balancesheet\n    \n as \n    \n    is_balancesheet\n    \n, \n    \n    \n    is_leftside\n    \n as \n    \n    is_leftside\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    type_name\n    \n as \n    \n    type_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        account_id,\n        parent_id,\n        name,\n        type_name,\n        accountnumber as account_number,\n        general_rate_type,\n        is_leftside,\n        is_balancesheet,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your accounts_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.087556Z", "completed_at": "2024-04-29T22:43:39.876438Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.879584Z", "completed_at": "2024-04-29T22:43:39.879592Z"}], "thread_id": "Thread-3", "execution_time": 0.8630578517913818, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__customers", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__customers_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    cast(null as TEXT) as \n    \n    companyname\n    \n , \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    cast(null as TEXT) as \n    \n    customer_extid\n    \n , \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date_first_order\n    \n as \n    \n    date_first_order\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zipcode\n    \n as \n    \n    zipcode\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id,\n        companyname as company_name,\n        customer_extid as customer_external_id,\n        city,\n        state,\n        zipcode,\n        country,\n        date_first_order as date_first_order_at,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your customers_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.083286Z", "completed_at": "2024-04-29T22:43:39.877443Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.880156Z", "completed_at": "2024-04-29T22:43:39.880159Z"}], "thread_id": "Thread-2", "execution_time": 0.866204023361206, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__consolidated_exchange_rates", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accounting_book_id\n    \n as \n    \n    accounting_book_id\n    \n, \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    cast(null as float) as \n    \n    average_budget_rate\n    \n , \n    \n    \n    average_rate\n    \n as \n    \n    average_rate\n    \n, \n    \n    \n    consolidated_exchange_rate_id\n    \n as \n    \n    consolidated_exchange_rate_id\n    \n, \n    cast(null as float) as \n    \n    current_budget_rate\n    \n , \n    \n    \n    current_rate\n    \n as \n    \n    current_rate\n    \n, \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    \n    \n    from_subsidiary_id\n    \n as \n    \n    from_subsidiary_id\n    \n, \n    cast(null as float) as \n    \n    historical_budget_rate\n    \n , \n    \n    \n    historical_rate\n    \n as \n    \n    historical_rate\n    \n, \n    \n    \n    to_subsidiary_id\n    \n as \n    \n    to_subsidiary_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        consolidated_exchange_rate_id,\n        accounting_book_id,\n        accounting_period_id,\n        average_rate,\n        current_rate,\n        historical_rate,\n        from_subsidiary_id,\n        to_subsidiary_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your consolidated_exchange_rates_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.073103Z", "completed_at": "2024-04-29T22:43:39.877730Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.880710Z", "completed_at": "2024-04-29T22:43:39.880714Z"}], "thread_id": "Thread-4", "execution_time": 0.9656882286071777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__classes", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__classes_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    class_id\n    \n as \n    \n    class_id\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        class_id,\n        full_name,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your classes_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__classes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.014773Z", "completed_at": "2024-04-29T22:43:39.879025Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.882188Z", "completed_at": "2024-04-29T22:43:39.882191Z"}], "thread_id": "Thread-7", "execution_time": 0.9684598445892334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_periods", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_periods_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    cast(null as TEXT) as \n    \n    closed_accounts_payable\n    \n , \n    cast(null as TEXT) as \n    \n    closed_accounts_receivable\n    \n , \n    cast(null as TEXT) as \n    \n    closed_all\n    \n , \n    cast(null as timestamp) as \n    \n    closed_on\n    \n , \n    cast(null as TEXT) as \n    \n    closed_payroll\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    \n    \n    ending\n    \n as \n    \n    ending\n    \n, \n    \n    \n    fiscal_calendar_id\n    \n as \n    \n    fiscal_calendar_id\n    \n, \n    cast(null as TEXT) as \n    \n    fivetran_index\n    \n , \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    is_adjustment\n    \n as \n    \n    is_adjustment\n    \n, \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    locked_accounts_payable\n    \n , \n    cast(null as TEXT) as \n    \n    locked_accounts_receivable\n    \n , \n    cast(null as TEXT) as \n    \n    locked_all\n    \n , \n    cast(null as TEXT) as \n    \n    locked_payroll\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    \n    \n    quarter\n    \n as \n    \n    quarter\n    \n, \n    \n    \n    starting\n    \n as \n    \n    starting\n    \n, \n    \n    \n    year_0\n    \n as \n    \n    year_0\n    \n, \n    \n    \n    year_id\n    \n as \n    \n    year_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        accounting_period_id,\n        name,\n        full_name,\n        fiscal_calendar_id,\n        year_id,\n        starting as starting_at,\n        ending as ending_at,\n        quarter,\n        year_0,\n        is_adjustment,\n        closed as is_closed,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_periods\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.168237Z", "completed_at": "2024-04-29T22:43:39.896343Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.897300Z", "completed_at": "2024-04-29T22:43:39.897302Z"}], "thread_id": "Thread-5", "execution_time": 0.8189098834991455, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__expense_accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__expense_accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as float) as \n    \n    current_balance\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    desription\n    \n , \n    cast(null as TEXT) as \n    \n    expense_account_extid\n    \n , \n    \n    \n    expense_account_id\n    \n as \n    \n    expense_account_id\n    \n, \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    is_including_child_subs\n    \n , \n    cast(null as TEXT) as \n    \n    is_summary\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        expense_account_id,\n        name,\n        parent_id,\n        account_number,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__expense_accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.162039Z", "completed_at": "2024-04-29T22:43:39.896062Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.897045Z", "completed_at": "2024-04-29T22:43:39.897049Z"}], "thread_id": "Thread-8", "execution_time": 0.8447592258453369, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__departments", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__departments_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    department_id\n    \n as \n    \n    department_id\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        department_id,\n        name,\n        full_name,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your departments_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__departments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.157105Z", "completed_at": "2024-04-29T22:43:39.974835Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:39.986215Z", "completed_at": "2024-04-29T22:43:39.986220Z"}], "thread_id": "Thread-6", "execution_time": 0.8823280334472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__currencies", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__currencies_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    currency_extid\n    \n , \n    \n    \n    currency_id\n    \n as \n    \n    currency_id\n    \n, \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    is_inactive\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    precision_0\n    \n , \n    \n    \n    symbol\n    \n as \n    \n    symbol\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        currency_id,\n        name,\n        symbol,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__currencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.981604Z", "completed_at": "2024-04-29T22:43:40.662847Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.663368Z", "completed_at": "2024-04-29T22:43:40.663375Z"}], "thread_id": "Thread-7", "execution_time": 0.8553488254547119, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transaction_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transaction_lines_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    class_id\n    \n as \n    \n    class_id\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n, \n    \n    \n    department_id\n    \n as \n    \n    department_id\n    \n, \n    \n    \n    item_id\n    \n as \n    \n    item_id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    non_posting_line\n    \n as \n    \n    non_posting_line\n    \n, \n    \n    \n    subsidiary_id\n    \n as \n    \n    subsidiary_id\n    \n, \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    transaction_line_id\n    \n as \n    \n    transaction_line_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        transaction_id,\n        transaction_line_id,\n        subsidiary_id,\n        account_id,\n        company_id,\n        item_id,\n        amount,\n        non_posting_line,\n        class_id,\n        location_id,\n        department_id,\n        memo\n\n        --The below macro adds the fields defined within your transaction_lines_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transaction_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.947742Z", "completed_at": "2024-04-29T22:43:40.681435Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.681933Z", "completed_at": "2024-04-29T22:43:40.681937Z"}], "thread_id": "Thread-1", "execution_time": 0.9130818843841553, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__income_accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__income_accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as float) as \n    \n    current_balance\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    desription\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    income_account_extid\n    \n , \n    \n    \n    income_account_id\n    \n as \n    \n    income_account_id\n    \n, \n    cast(null as TEXT) as \n    \n    is_including_child_subs\n    \n , \n    cast(null as TEXT) as \n    \n    is_summary\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        income_account_id,\n        name, \n        parent_id,\n        account_number,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__income_accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.917909Z", "completed_at": "2024-04-29T22:43:40.922953Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.923471Z", "completed_at": "2024-04-29T22:43:40.923476Z"}], "thread_id": "Thread-1", "execution_time": 0.017121076583862305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounts_account_id.23a63b3e17", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounts\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.909448Z", "completed_at": "2024-04-29T22:43:40.927976Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.928545Z", "completed_at": "2024-04-29T22:43:40.928549Z"}], "thread_id": "Thread-7", "execution_time": 0.023140907287597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounts_account_id.5a542e47a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounts\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.925090Z", "completed_at": "2024-04-29T22:43:40.929588Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.930688Z", "completed_at": "2024-04-29T22:43:40.930691Z"}], "thread_id": "Thread-1", "execution_time": 0.009495258331298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__account_types_account_type_id.20889967ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_type_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__account_types\"\nwhere account_type_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.930950Z", "completed_at": "2024-04-29T22:43:40.935287Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.939638Z", "completed_at": "2024-04-29T22:43:40.939642Z"}], "thread_id": "Thread-7", "execution_time": 0.014634132385253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__account_types_account_type_id.aaea9bec0f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_type_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__account_types\"\nwhere account_type_id is not null\ngroup by account_type_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.935579Z", "completed_at": "2024-04-29T22:43:40.945088Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.946214Z", "completed_at": "2024-04-29T22:43:40.946218Z"}], "thread_id": "Thread-1", "execution_time": 0.014842987060546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_period_fiscal_cal__fivetran_id.ec8750b679", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.946501Z", "completed_at": "2024-04-29T22:43:40.950811Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.954854Z", "completed_at": "2024-04-29T22:43:40.954859Z"}], "thread_id": "Thread-7", "execution_time": 0.01004171371459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_period_fiscal_cal__fivetran_id.d2038de348", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.951081Z", "completed_at": "2024-04-29T22:43:40.956034Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.957174Z", "completed_at": "2024-04-29T22:43:40.957178Z"}], "thread_id": "Thread-1", "execution_time": 0.010510921478271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_book_subsidiaries__fivetran_id.76e6e71411", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.957440Z", "completed_at": "2024-04-29T22:43:40.964845Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.965346Z", "completed_at": "2024-04-29T22:43:40.965350Z"}], "thread_id": "Thread-7", "execution_time": 0.009467840194702148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_book_subsidiaries__fivetran_id.27ddb08396", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.961943Z", "completed_at": "2024-04-29T22:43:40.966962Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.971522Z", "completed_at": "2024-04-29T22:43:40.971528Z"}], "thread_id": "Thread-1", "execution_time": 0.0107269287109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_books_accounting_book_id.1b7504d30e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_book_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_books\"\nwhere accounting_book_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.967217Z", "completed_at": "2024-04-29T22:43:40.976683Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.977199Z", "completed_at": "2024-04-29T22:43:40.977204Z"}], "thread_id": "Thread-7", "execution_time": 0.011304140090942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__classes_class_id.799b01ffba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect class_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__classes\"\nwhere class_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.973460Z", "completed_at": "2024-04-29T22:43:40.978841Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.982431Z", "completed_at": "2024-04-29T22:43:40.982436Z"}], "thread_id": "Thread-1", "execution_time": 0.010648727416992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_books_accounting_book_id.70d96d1230", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_book_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_books\"\nwhere accounting_book_id is not null\ngroup by accounting_book_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.988405Z", "completed_at": "2024-04-29T22:43:40.858671Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.907184Z", "completed_at": "2024-04-29T22:43:40.907189Z"}], "thread_id": "Thread-5", "execution_time": 0.9983890056610107, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transactions", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transactions_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    \n    \n    currency_id\n    \n as \n    \n    currency_id\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    is_advanced_intercompany\n    \n as \n    \n    is_advanced_intercompany\n    \n, \n    \n    \n    is_intercompany\n    \n as \n    \n    is_intercompany\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    cast(null as timestamp) as \n    \n    trandate\n    \n , \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    transaction_type\n    \n as \n    \n    transaction_type\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        transaction_id,\n        status,\n        trandate as transaction_date,\n        currency_id,\n        accounting_period_id,\n        due_date as due_date_at,\n        transaction_type,\n        is_intercompany,\n        is_advanced_intercompany,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your transactions_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.969072Z", "completed_at": "2024-04-29T22:43:40.772409Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.905578Z", "completed_at": "2024-04-29T22:43:40.905582Z"}], "thread_id": "Thread-2", "execution_time": 1.0267000198364258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__locations", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__locations_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        location_id,\n        name,\n        full_name,\n        city,\n        country,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your locations_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.977125Z", "completed_at": "2024-04-29T22:43:40.903857Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.908412Z", "completed_at": "2024-04-29T22:43:40.908416Z"}], "thread_id": "Thread-4", "execution_time": 1.0123820304870605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__subsidiaries_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    address\n    \n , \n    cast(null as TEXT) as \n    \n    address1\n    \n , \n    cast(null as TEXT) as \n    \n    address2\n    \n , \n    cast(null as float) as \n    \n    base_currency_id\n    \n , \n    cast(null as TEXT) as \n    \n    branch_id\n    \n , \n    cast(null as TEXT) as \n    \n    brn\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    edition\n    \n , \n    cast(null as TEXT) as \n    \n    federal_number\n    \n , \n    \n    \n    fiscal_calendar_id\n    \n as \n    \n    fiscal_calendar_id\n    \n, \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    is_elimination\n    \n , \n    cast(null as TEXT) as \n    \n    is_moss\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive_bool\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    cast(null as float) as \n    \n    moss_nexus_id\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    return_address\n    \n , \n    cast(null as TEXT) as \n    \n    return_address1\n    \n , \n    cast(null as TEXT) as \n    \n    return_address2\n    \n , \n    cast(null as TEXT) as \n    \n    return_city\n    \n , \n    cast(null as TEXT) as \n    \n    return_country\n    \n , \n    cast(null as TEXT) as \n    \n    return_state\n    \n , \n    cast(null as TEXT) as \n    \n    return_zipcode\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address1\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address2\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_city\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_country\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_state\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_zipcode\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    state_tax_number\n    \n , \n    cast(null as float) as \n    \n    subnav__searchable_subsidiary\n    \n , \n    cast(null as TEXT) as \n    \n    subsidiary_extid\n    \n , \n    \n    \n    subsidiary_id\n    \n as \n    \n    subsidiary_id\n    \n, \n    cast(null as float) as \n    \n    taxonomy_reference_id\n    \n , \n    cast(null as TEXT) as \n    \n    tran_num_prefix\n    \n , \n    cast(null as TEXT) as \n    \n    uen\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n , \n    cast(null as TEXT) as \n    \n    zipcode\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        subsidiary_id,\n        fiscal_calendar_id,\n        full_name,\n        name,\n        parent_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your subsidiaries_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.001225Z", "completed_at": "2024-04-29T22:43:40.742742Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.902957Z", "completed_at": "2024-04-29T22:43:40.902967Z"}], "thread_id": "Thread-8", "execution_time": 0.9864110946655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendor_types", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendor_types_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_type_extid\n    \n , \n    \n    \n    vendor_type_id\n    \n as \n    \n    vendor_type_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        vendor_type_id,\n        name,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendor_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.038703Z", "completed_at": "2024-04-29T22:43:40.906309Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.917326Z", "completed_at": "2024-04-29T22:43:40.917333Z"}], "thread_id": "Thread-6", "execution_time": 0.950019121170044, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendors", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendors_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_owner\n    \n , \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    cast(null as TEXT) as \n    \n    accounts_email\n    \n , \n    cast(null as float) as \n    \n    annual_revenue\n    \n , \n    cast(null as TEXT) as \n    \n    auto_renewals\n    \n , \n    cast(null as TEXT) as \n    \n    auto_send_statements\n    \n , \n    cast(null as TEXT) as \n    \n    billaddress\n    \n , \n    cast(null as float) as \n    \n    billing_class_id\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as TEXT) as \n    \n    companyname\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    \n    \n    create_date\n    \n as \n    \n    create_date\n    \n, \n    cast(null as float) as \n    \n    creditlimit\n    \n , \n    cast(null as float) as \n    \n    currency_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    dic\n    \n , \n    cast(null as TEXT) as \n    \n    email\n    \n , \n    cast(null as TEXT) as \n    \n    email_bill_payment_vouchers\n    \n , \n    cast(null as TEXT) as \n    \n    email_cash_sales\n    \n , \n    cast(null as TEXT) as \n    \n    email_credit_notes\n    \n , \n    cast(null as TEXT) as \n    \n    email_invoices\n    \n , \n    cast(null as TEXT) as \n    \n    email_item_fulfilments\n    \n , \n    cast(null as TEXT) as \n    \n    email_purchase_orders\n    \n , \n    cast(null as TEXT) as \n    \n    email_quotes\n    \n , \n    cast(null as TEXT) as \n    \n    email_sales_orders\n    \n , \n    cast(null as TEXT) as \n    \n    email_statements\n    \n , \n    cast(null as TEXT) as \n    \n    employee_number\n    \n , \n    cast(null as TEXT) as \n    \n    exemption_certificate_no\n    \n , \n    cast(null as float) as \n    \n    expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    fax\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    home_phone\n    \n , \n    cast(null as TEXT) as \n    \n    hris_id\n    \n , \n    cast(null as TEXT) as \n    \n    ico\n    \n , \n    cast(null as TEXT) as \n    \n    id_number_in_the_country_of_r\n    \n , \n    cast(null as float) as \n    \n    id_type_in_the_country_of_r_id\n    \n , \n    cast(null as float) as \n    \n    in_transit_balance\n    \n , \n    cast(null as TEXT) as \n    \n    incoterm\n    \n , \n    cast(null as float) as \n    \n    industry_id\n    \n , \n    cast(null as TEXT) as \n    \n    invoice_via_procurement_syste\n    \n , \n    cast(null as TEXT) as \n    \n    invoicing_details\n    \n , \n    cast(null as TEXT) as \n    \n    is1099eligible\n    \n , \n    cast(null as TEXT) as \n    \n    is_partner\n    \n , \n    cast(null as TEXT) as \n    \n    is_person\n    \n , \n    cast(null as TEXT) as \n    \n    isemailhtml\n    \n , \n    cast(null as TEXT) as \n    \n    isemailpdf\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as float) as \n    \n    labor_cost\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_date\n    \n , \n    cast(null as timestamp) as \n    \n    last_sales_activity\n    \n , \n    cast(null as TEXT) as \n    \n    line1\n    \n , \n    cast(null as TEXT) as \n    \n    line2\n    \n , \n    cast(null as TEXT) as \n    \n    line3\n    \n , \n    cast(null as TEXT) as \n    \n    loginaccess\n    \n , \n    cast(null as TEXT) as \n    \n    lsa_link\n    \n , \n    cast(null as TEXT) as \n    \n    lsa_link_name\n    \n , \n    cast(null as TEXT) as \n    \n    mobile_phone\n    \n , \n    cast(null as timestamp) as \n    \n    msa_effective_date\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as float) as \n    \n    no__of_employees\n    \n , \n    cast(null as float) as \n    \n    openbalance\n    \n , \n    cast(null as float) as \n    \n    openbalance_foreign\n    \n , \n    cast(null as float) as \n    \n    payables_account_id\n    \n , \n    cast(null as float) as \n    \n    payment_terms_id\n    \n , \n    cast(null as TEXT) as \n    \n    phone\n    \n , \n    cast(null as float) as \n    \n    prepayment_balance\n    \n , \n    cast(null as TEXT) as \n    \n    printoncheckas\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    purchases_email\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as float) as \n    \n    represents_subsidiary_id\n    \n , \n    cast(null as TEXT) as \n    \n    restrict_access_to_expensify\n    \n , \n    cast(null as TEXT) as \n    \n    salesforce_id\n    \n , \n    cast(null as TEXT) as \n    \n    shipaddress\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_email\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as float) as \n    \n    subsidiary\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_first_name\n    \n , \n    cast(null as float) as \n    \n    tax_contact_id\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_last_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_middle_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number\n    \n , \n    cast(null as TEXT) as \n    \n    taxidnum\n    \n , \n    cast(null as float) as \n    \n    time_approver_id\n    \n , \n    cast(null as TEXT) as \n    \n    transactions_need_approval\n    \n , \n    cast(null as TEXT) as \n    \n    uen\n    \n , \n    cast(null as float) as \n    \n    unbilled_orders\n    \n , \n    cast(null as float) as \n    \n    unbilled_orders_foreign\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n , \n    cast(null as TEXT) as \n    \n    vat_registration_no\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_extid\n    \n , \n    \n    \n    vendor_id\n    \n as \n    \n    vendor_id\n    \n, \n    \n    \n    vendor_type_id\n    \n as \n    \n    vendor_type_id\n    \n, \n    cast(null as TEXT) as \n    \n    zipcode\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        vendor_id,\n        companyname as company_name,\n        create_date as create_date_at,\n        vendor_type_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your vendors_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendors\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:39.953281Z", "completed_at": "2024-04-29T22:43:40.905300Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.909149Z", "completed_at": "2024-04-29T22:43:40.909152Z"}], "thread_id": "Thread-3", "execution_time": 1.0426740646362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__items", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__items_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    allow_drop_ship\n    \n , \n    cast(null as float) as \n    \n    alt_demand_source_item_id\n    \n , \n    cast(null as float) as \n    \n    asset_account_id\n    \n , \n    cast(null as float) as \n    \n    atp_lead_time\n    \n , \n    cast(null as TEXT) as \n    \n    atp_method\n    \n , \n    cast(null as TEXT) as \n    \n    available_to_partners\n    \n , \n    cast(null as TEXT) as \n    \n    avatax_taxcode\n    \n , \n    cast(null as float) as \n    \n    averagecost\n    \n , \n    cast(null as float) as \n    \n    backward_consumption_days\n    \n , \n    cast(null as TEXT) as \n    \n    build_sub_assemblies\n    \n , \n    cast(null as float) as \n    \n    class_id\n    \n , \n    cast(null as float) as \n    \n    code_of_supply_id\n    \n , \n    cast(null as TEXT) as \n    \n    commodity_code\n    \n , \n    cast(null as float) as \n    \n    consumption_unit_id\n    \n , \n    cast(null as float) as \n    \n    cost_0\n    \n , \n    cast(null as TEXT) as \n    \n    cost_category\n    \n , \n    cast(null as TEXT) as \n    \n    cost_estimate_type\n    \n , \n    cast(null as TEXT) as \n    \n    costing_method\n    \n , \n    cast(null as TEXT) as \n    \n    country_of_manufacture\n    \n , \n    cast(null as TEXT) as \n    \n    create_plan_on_event_type\n    \n , \n    cast(null as timestamp) as \n    \n    created\n    \n , \n    cast(null as float) as \n    \n    current_on_order_count\n    \n , \n    cast(null as float) as \n    \n    custreturn_variance_account_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as timestamp) as \n    \n    date_of_last_transaction\n    \n , \n    cast(null as float) as \n    \n    default_return_cost\n    \n , \n    cast(null as float) as \n    \n    deferred_expense_account_id\n    \n , \n    cast(null as float) as \n    \n    deferred_revenue_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    demand_source\n    \n , \n    cast(null as float) as \n    \n    demand_time_fence\n    \n , \n    cast(null as float) as \n    \n    department_id\n    \n , \n    cast(null as TEXT) as \n    \n    deposit\n    \n , \n    cast(null as TEXT) as \n    \n    displayname\n    \n , \n    cast(null as TEXT) as \n    \n    distribution_category\n    \n , \n    cast(null as TEXT) as \n    \n    distribution_network\n    \n , \n    cast(null as float) as \n    \n    dropship_expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    effective_bom_control_type\n    \n , \n    cast(null as float) as \n    \n    expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    featureddescription\n    \n , \n    cast(null as TEXT) as \n    \n    featureditem\n    \n , \n    cast(null as float) as \n    \n    fixed_lot_size\n    \n , \n    cast(null as float) as \n    \n    forward_consumption_days\n    \n , \n    cast(null as TEXT) as \n    \n    fraud_risk\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as float) as \n    \n    fx_adjustment_account_id\n    \n , \n    cast(null as float) as \n    \n    gain_loss_account_id\n    \n , \n    cast(null as float) as \n    \n    handling_cost\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_hazard_class\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_id\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_item_units\n    \n , \n    cast(null as float) as \n    \n    hazmat_item_units_qty\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_packing_group\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_shipping_name\n    \n , \n    cast(null as TEXT) as \n    \n    include_child_subsidiaries\n    \n , \n    cast(null as float) as \n    \n    income_account_id\n    \n , \n    cast(null as float) as \n    \n    interco_expense_account_id\n    \n , \n    cast(null as float) as \n    \n    interco_income_account_id\n    \n , \n    cast(null as float) as \n    \n    invt_count_classification\n    \n , \n    cast(null as float) as \n    \n    invt_count_interval\n    \n , \n    cast(null as TEXT) as \n    \n    is_cont_rev_handling\n    \n , \n    cast(null as TEXT) as \n    \n    is_enforce_min_qty_internally\n    \n , \n    cast(null as TEXT) as \n    \n    is_hold_rev_rec\n    \n , \n    cast(null as TEXT) as \n    \n    is_moss\n    \n , \n    cast(null as TEXT) as \n    \n    is_phantom\n    \n , \n    cast(null as TEXT) as \n    \n    is_special_order_item\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    isonline\n    \n , \n    cast(null as TEXT) as \n    \n    istaxable\n    \n , \n    cast(null as float) as \n    \n    item_defined_cost\n    \n , \n    cast(null as TEXT) as \n    \n    item_extid\n    \n , \n    \n    \n    item_id\n    \n as \n    \n    item_id\n    \n, \n    cast(null as float) as \n    \n    item_image\n    \n , \n    cast(null as TEXT) as \n    \n    item_revenue_category\n    \n , \n    cast(null as float) as \n    \n    item_term_id\n    \n , \n    cast(null as timestamp) as \n    \n    last_cogs_correction\n    \n , \n    cast(null as timestamp) as \n    \n    last_invt_count_date\n    \n , \n    cast(null as float) as \n    \n    last_purchase_price\n    \n , \n    cast(null as float) as \n    \n    location_id\n    \n , \n    cast(null as TEXT) as \n    \n    lot_numbered_item\n    \n , \n    cast(null as TEXT) as \n    \n    lot_sizing_method\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturer\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturing_charge_item\n    \n , \n    cast(null as TEXT) as \n    \n    match_bill_to_receipt\n    \n , \n    cast(null as TEXT) as \n    \n    matrix_type\n    \n , \n    cast(null as float) as \n    \n    maximum_quantity\n    \n , \n    cast(null as float) as \n    \n    minimum_quantity\n    \n , \n    cast(null as timestamp) as \n    \n    modified\n    \n , \n    cast(null as TEXT) as \n    \n    mpn\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    nature_of_transaction_codes_id\n    \n , \n    cast(null as timestamp) as \n    \n    next_invt_count_date\n    \n , \n    cast(null as float) as \n    \n    ng_asset_type_id\n    \n , \n    cast(null as float) as \n    \n    ns_lead_time\n    \n , \n    cast(null as TEXT) as \n    \n    offersupport\n    \n , \n    cast(null as TEXT) as \n    \n    onspecial\n    \n , \n    cast(null as TEXT) as \n    \n    overhead_type\n    \n , \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    cast(null as float) as \n    \n    payment_method_id\n    \n , \n    cast(null as float) as \n    \n    periodic_lot_size_days\n    \n , \n    cast(null as TEXT) as \n    \n    periodic_lot_size_type\n    \n , \n    cast(null as float) as \n    \n    pref_purchase_tax_id\n    \n , \n    cast(null as float) as \n    \n    pref_sale_tax_id\n    \n , \n    cast(null as float) as \n    \n    pref_stock_level\n    \n , \n    cast(null as TEXT) as \n    \n    prices_include_tax\n    \n , \n    cast(null as float) as \n    \n    pricing_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    print_sub_items\n    \n , \n    cast(null as float) as \n    \n    prod_price_var_account_id\n    \n , \n    cast(null as float) as \n    \n    prod_qty_var_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    prompt_payment_discount_item\n    \n , \n    cast(null as float) as \n    \n    purchase_price_var_account_id\n    \n , \n    cast(null as float) as \n    \n    purchase_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    purchasedescription\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as float) as \n    \n    quantityavailable\n    \n , \n    cast(null as float) as \n    \n    quantitybackordered\n    \n , \n    cast(null as float) as \n    \n    quantityonhand\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as float) as \n    \n    reorder_multiple\n    \n , \n    cast(null as float) as \n    \n    reorderpoint\n    \n , \n    cast(null as TEXT) as \n    \n    replenishment_method\n    \n , \n    cast(null as TEXT) as \n    \n    resalable\n    \n , \n    cast(null as float) as \n    \n    reschedule_in_days\n    \n , \n    cast(null as float) as \n    \n    reschedule_out_days\n    \n , \n    cast(null as float) as \n    \n    rev_rec_forecast_rule_id\n    \n , \n    cast(null as float) as \n    \n    rev_rec_rule_id\n    \n , \n    cast(null as TEXT) as \n    \n    revenue_allocation_group\n    \n , \n    cast(null as TEXT) as \n    \n    round_up_as_component\n    \n , \n    cast(null as float) as \n    \n    safety_stock_days\n    \n , \n    cast(null as float) as \n    \n    safety_stock_level\n    \n , \n    cast(null as float) as \n    \n    sale_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    salesdescription\n    \n , \n    cast(null as TEXT) as \n    \n    salesforce_id\n    \n , \n    cast(null as TEXT) as \n    \n    salesprice\n    \n , \n    cast(null as float) as \n    \n    scrap_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    serialized_item\n    \n , \n    cast(null as float) as \n    \n    shippingcost\n    \n , \n    cast(null as TEXT) as \n    \n    special_work_order_item\n    \n , \n    cast(null as TEXT) as \n    \n    specialsdescription\n    \n , \n    cast(null as float) as \n    \n    stock_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    storedescription\n    \n , \n    cast(null as TEXT) as \n    \n    storedetaileddescription\n    \n , \n    cast(null as TEXT) as \n    \n    storedisplayname\n    \n , \n    cast(null as TEXT) as \n    \n    subtype\n    \n , \n    cast(null as TEXT) as \n    \n    supplementary_unit__abberviat\n    \n , \n    cast(null as float) as \n    \n    supplementary_unit_id\n    \n , \n    cast(null as float) as \n    \n    supply_time_fence\n    \n , \n    cast(null as TEXT) as \n    \n    supply_type\n    \n , \n    cast(null as float) as \n    \n    tax_item_id\n    \n , \n    cast(null as float) as \n    \n    totalvalue\n    \n , \n    cast(null as float) as \n    \n    transferprice\n    \n , \n    \n    \n    type_name\n    \n as \n    \n    type_name\n    \n, \n    cast(null as float) as \n    \n    type_of_goods_id\n    \n , \n    cast(null as TEXT) as \n    \n    udf1\n    \n , \n    cast(null as TEXT) as \n    \n    udf2\n    \n , \n    cast(null as TEXT) as \n    \n    un_number\n    \n , \n    cast(null as float) as \n    \n    unbuild_variance_account_id\n    \n , \n    cast(null as float) as \n    \n    units_type_id\n    \n , \n    cast(null as TEXT) as \n    \n    upc_code\n    \n , \n    cast(null as TEXT) as \n    \n    use_component_yield\n    \n , \n    cast(null as float) as \n    \n    vendor_id\n    \n , \n    cast(null as TEXT) as \n    \n    vendorname\n    \n , \n    cast(null as float) as \n    \n    vendreturn_variance_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_deferral\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_delivered\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_discount\n    \n , \n    cast(null as float) as \n    \n    vsoe_price\n    \n , \n    cast(null as float) as \n    \n    weight\n    \n , \n    cast(null as float) as \n    \n    weight_in_user_defined_unit\n    \n , \n    cast(null as float) as \n    \n    weight_unit_index\n    \n , \n    cast(null as float) as \n    \n    wip_account_id\n    \n , \n    cast(null as float) as \n    \n    wip_cost_variance_account_id\n    \n , \n    cast(null as float) as \n    \n    work_order_lead_time\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        item_id,\n        name,\n        type_name,\n        salesdescription as sales_description,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your items_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.979137Z", "completed_at": "2024-04-29T22:43:40.984354Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:40.990285Z", "completed_at": "2024-04-29T22:43:40.990289Z"}], "thread_id": "Thread-7", "execution_time": 0.01487588882446289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__classes_class_id.d069e30c98", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    class_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__classes\"\nwhere class_id is not null\ngroup by class_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.994410Z", "completed_at": "2024-04-29T22:43:41.012597Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.024996Z", "completed_at": "2024-04-29T22:43:41.025003Z"}], "thread_id": "Thread-1", "execution_time": 0.038197994232177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_periods_accounting_period_id.f2db2c547c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_period_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_periods\"\nwhere accounting_period_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:40.998870Z", "completed_at": "2024-04-29T22:43:41.018737Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.025730Z", "completed_at": "2024-04-29T22:43:41.025733Z"}], "thread_id": "Thread-5", "execution_time": 0.03737521171569824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_periods_accounting_period_id.a9d8f4c6e1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_period_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__accounting_periods\"\nwhere accounting_period_id is not null\ngroup by accounting_period_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.002223Z", "completed_at": "2024-04-29T22:43:41.019071Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.025987Z", "completed_at": "2024-04-29T22:43:41.025990Z"}], "thread_id": "Thread-2", "execution_time": 0.036879777908325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__consolidated_exchange_rates_consolidated_exchange_rate_id.09703507c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect consolidated_exchange_rate_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.006420Z", "completed_at": "2024-04-29T22:43:41.019870Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.027311Z", "completed_at": "2024-04-29T22:43:41.027314Z"}], "thread_id": "Thread-4", "execution_time": 0.03783607482910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__consolidated_exchange_rates_consolidated_exchange_rate_id.2d4725bb7a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    consolidated_exchange_rate_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is not null\ngroup by consolidated_exchange_rate_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.009430Z", "completed_at": "2024-04-29T22:43:41.020122Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.027585Z", "completed_at": "2024-04-29T22:43:41.027588Z"}], "thread_id": "Thread-8", "execution_time": 0.03796100616455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__currencies_currency_id.7eff9f9c1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect currency_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__currencies\"\nwhere currency_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.012870Z", "completed_at": "2024-04-29T22:43:41.024466Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.029074Z", "completed_at": "2024-04-29T22:43:41.029077Z"}], "thread_id": "Thread-6", "execution_time": 0.038342952728271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__currencies_currency_id.50d9c37c78", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    currency_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__currencies\"\nwhere currency_id is not null\ngroup by currency_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.015709Z", "completed_at": "2024-04-29T22:43:41.024733Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.029344Z", "completed_at": "2024-04-29T22:43:41.029348Z"}], "thread_id": "Thread-3", "execution_time": 0.03824281692504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__entities_entity_id.f22c18cfa2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect entity_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__entities\"\nwhere entity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.020988Z", "completed_at": "2024-04-29T22:43:41.027838Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.033505Z", "completed_at": "2024-04-29T22:43:41.033508Z"}], "thread_id": "Thread-7", "execution_time": 0.02390909194946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__entities_entity_id.f9acd04f50", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    entity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__entities\"\nwhere entity_id is not null\ngroup by entity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.037796Z", "completed_at": "2024-04-29T22:43:41.057773Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.067314Z", "completed_at": "2024-04-29T22:43:41.067321Z"}], "thread_id": "Thread-1", "execution_time": 0.036753177642822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__customers_customer_id.65a5ae302a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.041314Z", "completed_at": "2024-04-29T22:43:41.061274Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.068040Z", "completed_at": "2024-04-29T22:43:41.068044Z"}], "thread_id": "Thread-5", "execution_time": 0.03695392608642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__customers_customer_id.05ca0360f2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.044185Z", "completed_at": "2024-04-29T22:43:41.061561Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.068319Z", "completed_at": "2024-04-29T22:43:41.068322Z"}], "thread_id": "Thread-2", "execution_time": 0.03716301918029785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__items_item_id.e216b5b06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__items\"\nwhere item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.050238Z", "completed_at": "2024-04-29T22:43:41.062184Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.068859Z", "completed_at": "2024-04-29T22:43:41.068863Z"}], "thread_id": "Thread-8", "execution_time": 0.03650307655334473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__jobs_job_id.d7b5b06b33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect job_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__jobs\"\nwhere job_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.047513Z", "completed_at": "2024-04-29T22:43:41.062661Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.069704Z", "completed_at": "2024-04-29T22:43:41.069707Z"}], "thread_id": "Thread-4", "execution_time": 0.03766989707946777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__items_item_id.3fcafd9eee", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__items\"\nwhere item_id is not null\ngroup by item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.054920Z", "completed_at": "2024-04-29T22:43:41.062981Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.070238Z", "completed_at": "2024-04-29T22:43:41.070242Z"}], "thread_id": "Thread-6", "execution_time": 0.036759138107299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__jobs_job_id.c294ea849c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    job_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__jobs\"\nwhere job_id is not null\ngroup by job_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.058088Z", "completed_at": "2024-04-29T22:43:41.066797Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.071632Z", "completed_at": "2024-04-29T22:43:41.071637Z"}], "thread_id": "Thread-3", "execution_time": 0.03721117973327637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__departments_department_id.7395bbfe71", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect department_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__departments\"\nwhere department_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.063762Z", "completed_at": "2024-04-29T22:43:41.069980Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.075920Z", "completed_at": "2024-04-29T22:43:41.075925Z"}], "thread_id": "Thread-7", "execution_time": 0.02421712875366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__departments_department_id.13e4897f0b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    department_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__departments\"\nwhere department_id is not null\ngroup by department_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.080258Z", "completed_at": "2024-04-29T22:43:41.105913Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.117619Z", "completed_at": "2024-04-29T22:43:41.117629Z"}], "thread_id": "Thread-1", "execution_time": 0.04468202590942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__vendor_categories_vendor_category_id.60acd9acb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_category_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendor_categories\"\nwhere vendor_category_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.084325Z", "completed_at": "2024-04-29T22:43:41.110968Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.118461Z", "completed_at": "2024-04-29T22:43:41.118466Z"}], "thread_id": "Thread-5", "execution_time": 0.04525113105773926, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__vendor_categories_vendor_category_id.874da088c6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_category_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendor_categories\"\nwhere vendor_category_id is not null\ngroup by vendor_category_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.088263Z", "completed_at": "2024-04-29T22:43:41.111560Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.119056Z", "completed_at": "2024-04-29T22:43:41.119060Z"}], "thread_id": "Thread-2", "execution_time": 0.04596686363220215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite2__transaction_accounting_lines_transaction_id__transaction_line_id__accounting_book_id.ac47a8ecc1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id, accounting_book_id\n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\n    group by transaction_id, transaction_line_id, accounting_book_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.098569Z", "completed_at": "2024-04-29T22:43:41.112210Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.120334Z", "completed_at": "2024-04-29T22:43:41.120339Z"}], "thread_id": "Thread-4", "execution_time": 0.04609203338623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_accounting_lines_transaction_line_id.0f72869807", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.095361Z", "completed_at": "2024-04-29T22:43:41.112546Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.120790Z", "completed_at": "2024-04-29T22:43:41.120796Z"}], "thread_id": "Thread-8", "execution_time": 0.047277212142944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_accounting_lines_transaction_id.f28afbfa25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.102438Z", "completed_at": "2024-04-29T22:43:41.113172Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.122126Z", "completed_at": "2024-04-29T22:43:41.122136Z"}], "thread_id": "Thread-6", "execution_time": 0.046952247619628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__locations_location_id.c335a5985e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__locations\"\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.106381Z", "completed_at": "2024-04-29T22:43:41.117322Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.123182Z", "completed_at": "2024-04-29T22:43:41.123190Z"}], "thread_id": "Thread-3", "execution_time": 0.04707813262939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__locations_location_id.f1469a5149", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.113545Z", "completed_at": "2024-04-29T22:43:41.121105Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.128295Z", "completed_at": "2024-04-29T22:43:41.128300Z"}], "thread_id": "Thread-7", "execution_time": 0.02937006950378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__subsidiaries_subsidiary_id.0ab6516626", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subsidiary_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__subsidiaries\"\nwhere subsidiary_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.133318Z", "completed_at": "2024-04-29T22:43:41.156570Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.166857Z", "completed_at": "2024-04-29T22:43:41.166867Z"}], "thread_id": "Thread-1", "execution_time": 0.041819095611572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__subsidiaries_subsidiary_id.8edc974229", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    subsidiary_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__subsidiaries\"\nwhere subsidiary_id is not null\ngroup by subsidiary_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.137422Z", "completed_at": "2024-04-29T22:43:41.159919Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.167411Z", "completed_at": "2024-04-29T22:43:41.167414Z"}], "thread_id": "Thread-5", "execution_time": 0.041628122329711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transactions_transaction_id.b4f6c6a72b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transactions\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.141150Z", "completed_at": "2024-04-29T22:43:41.160373Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.167920Z", "completed_at": "2024-04-29T22:43:41.167923Z"}], "thread_id": "Thread-2", "execution_time": 0.04180407524108887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__transactions_transaction_id.af3d15dce4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transactions\"\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.149234Z", "completed_at": "2024-04-29T22:43:41.161128Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.168480Z", "completed_at": "2024-04-29T22:43:41.168484Z"}], "thread_id": "Thread-8", "execution_time": 0.041296958923339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__vendors_vendor_id.415829ac1d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendors\"\nwhere vendor_id is not null\ngroup by vendor_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.144496Z", "completed_at": "2024-04-29T22:43:41.161680Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.169429Z", "completed_at": "2024-04-29T22:43:41.169435Z"}], "thread_id": "Thread-4", "execution_time": 0.04260087013244629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__vendors_vendor_id.777b758daf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__vendors\"\nwhere vendor_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.153281Z", "completed_at": "2024-04-29T22:43:41.162247Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.170624Z", "completed_at": "2024-04-29T22:43:41.170629Z"}], "thread_id": "Thread-6", "execution_time": 0.042279720306396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite2__transaction_lines_transaction_id__transaction_line_id.07b823514f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id\n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_lines\"\n    group by transaction_id, transaction_line_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.156971Z", "completed_at": "2024-04-29T22:43:41.166266Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.171536Z", "completed_at": "2024-04-29T22:43:41.171541Z"}], "thread_id": "Thread-3", "execution_time": 0.04233598709106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_lines_transaction_id.267b150890", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.162814Z", "completed_at": "2024-04-29T22:43:41.169725Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.176809Z", "completed_at": "2024-04-29T22:43:41.176814Z"}], "thread_id": "Thread-7", "execution_time": 0.027013778686523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_lines_transaction_line_id.a82e70adc1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite2__transaction_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.186954Z", "completed_at": "2024-04-29T22:43:41.207269Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.214658Z", "completed_at": "2024-04-29T22:43:41.214666Z"}], "thread_id": "Thread-5", "execution_time": 0.039938926696777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__accounting_books_accounting_book_id.22e0106417", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_book_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_books\"\nwhere accounting_book_id is not null\ngroup by accounting_book_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.181588Z", "completed_at": "2024-04-29T22:43:41.207680Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.215212Z", "completed_at": "2024-04-29T22:43:41.215217Z"}], "thread_id": "Thread-1", "execution_time": 0.04190206527709961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_books_accounting_book_id.12972ee6fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_book_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_books\"\nwhere accounting_book_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.190328Z", "completed_at": "2024-04-29T22:43:41.208155Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.215573Z", "completed_at": "2024-04-29T22:43:41.215578Z"}], "thread_id": "Thread-2", "execution_time": 0.04083824157714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounts_account_id.f03cddbace", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounts\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.193301Z", "completed_at": "2024-04-29T22:43:41.208814Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.216229Z", "completed_at": "2024-04-29T22:43:41.216233Z"}], "thread_id": "Thread-8", "execution_time": 0.040923118591308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__accounts_account_id.e94563d281", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounts\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.196154Z", "completed_at": "2024-04-29T22:43:41.209133Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.216539Z", "completed_at": "2024-04-29T22:43:41.216542Z"}], "thread_id": "Thread-4", "execution_time": 0.04081583023071289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__customers_customer_id.bbb9eed2dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.200161Z", "completed_at": "2024-04-29T22:43:41.209699Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.217438Z", "completed_at": "2024-04-29T22:43:41.217442Z"}], "thread_id": "Thread-6", "execution_time": 0.040518999099731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__customers_customer_id.7c9debe8d9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.203287Z", "completed_at": "2024-04-29T22:43:41.210433Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.219049Z", "completed_at": "2024-04-29T22:43:41.219053Z"}], "thread_id": "Thread-3", "execution_time": 0.04127907752990723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__consolidated_exchange_rates_consolidated_exchange_rate_id.83de8c8e97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect consolidated_exchange_rate_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.210697Z", "completed_at": "2024-04-29T22:43:41.218230Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.224297Z", "completed_at": "2024-04-29T22:43:41.224302Z"}], "thread_id": "Thread-7", "execution_time": 0.02738189697265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__consolidated_exchange_rates_consolidated_exchange_rate_id.2ca94ecb54", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    consolidated_exchange_rate_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is not null\ngroup by consolidated_exchange_rate_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.228358Z", "completed_at": "2024-04-29T22:43:41.253783Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.261472Z", "completed_at": "2024-04-29T22:43:41.261480Z"}], "thread_id": "Thread-5", "execution_time": 0.040673017501831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__classes_class_id.462bfda765", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect class_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__classes\"\nwhere class_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.232343Z", "completed_at": "2024-04-29T22:43:41.254247Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.261788Z", "completed_at": "2024-04-29T22:43:41.261792Z"}], "thread_id": "Thread-1", "execution_time": 0.040535926818847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__classes_class_id.c63c54840b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    class_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__classes\"\nwhere class_id is not null\ngroup by class_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.235740Z", "completed_at": "2024-04-29T22:43:41.254696Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.262080Z", "completed_at": "2024-04-29T22:43:41.262085Z"}], "thread_id": "Thread-2", "execution_time": 0.040352821350097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite__accounting_periods_accounting_period_id__fiscal_calendar_id.43005ecb69", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        accounting_period_id, fiscal_calendar_id\n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_periods\"\n    group by accounting_period_id, fiscal_calendar_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.240126Z", "completed_at": "2024-04-29T22:43:41.255065Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.262694Z", "completed_at": "2024-04-29T22:43:41.262698Z"}], "thread_id": "Thread-8", "execution_time": 0.04075217247009277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_periods_accounting_period_id.5c1c46821c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_period_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_periods\"\nwhere accounting_period_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.247180Z", "completed_at": "2024-04-29T22:43:41.255755Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.263016Z", "completed_at": "2024-04-29T22:43:41.263019Z"}], "thread_id": "Thread-6", "execution_time": 0.04025888442993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__expense_accounts_expense_account_id.4de138ed23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect expense_account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__expense_accounts\"\nwhere expense_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.244377Z", "completed_at": "2024-04-29T22:43:41.256064Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.263299Z", "completed_at": "2024-04-29T22:43:41.263303Z"}], "thread_id": "Thread-4", "execution_time": 0.04136180877685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_periods_fiscal_calendar_id.8d75190563", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fiscal_calendar_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__accounting_periods\"\nwhere fiscal_calendar_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.250802Z", "completed_at": "2024-04-29T22:43:41.257126Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.265532Z", "completed_at": "2024-04-29T22:43:41.265536Z"}], "thread_id": "Thread-3", "execution_time": 0.04117703437805176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__expense_accounts_expense_account_id.5e813830ff", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    expense_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__expense_accounts\"\nwhere expense_account_id is not null\ngroup by expense_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.257630Z", "completed_at": "2024-04-29T22:43:41.265253Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.271526Z", "completed_at": "2024-04-29T22:43:41.271537Z"}], "thread_id": "Thread-7", "execution_time": 0.02437114715576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__departments_department_id.6d96b00002", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect department_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__departments\"\nwhere department_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.280955Z", "completed_at": "2024-04-29T22:43:41.301026Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.307952Z", "completed_at": "2024-04-29T22:43:41.307960Z"}], "thread_id": "Thread-1", "execution_time": 0.0396883487701416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__currencies_currency_id.e8b331ffb3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect currency_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__currencies\"\nwhere currency_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.283903Z", "completed_at": "2024-04-29T22:43:41.301338Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.308250Z", "completed_at": "2024-04-29T22:43:41.308254Z"}], "thread_id": "Thread-2", "execution_time": 0.03973674774169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__currencies_currency_id.09ab867f2c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    currency_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__currencies\"\nwhere currency_id is not null\ngroup by currency_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.276193Z", "completed_at": "2024-04-29T22:43:41.301633Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.308832Z", "completed_at": "2024-04-29T22:43:41.308836Z"}], "thread_id": "Thread-5", "execution_time": 0.04197287559509277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__departments_department_id.2df16a9aa1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    department_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__departments\"\nwhere department_id is not null\ngroup by department_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.287336Z", "completed_at": "2024-04-29T22:43:41.302007Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.309117Z", "completed_at": "2024-04-29T22:43:41.309121Z"}], "thread_id": "Thread-8", "execution_time": 0.04027104377746582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite__transaction_lines_transaction_id__transaction_line_id.651bc3120d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id\n    from \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transaction_lines\"\n    group by transaction_id, transaction_line_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.290847Z", "completed_at": "2024-04-29T22:43:41.302317Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.309408Z", "completed_at": "2024-04-29T22:43:41.309412Z"}], "thread_id": "Thread-6", "execution_time": 0.0402989387512207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transaction_lines_transaction_id.e8055d67bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transaction_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.293647Z", "completed_at": "2024-04-29T22:43:41.302788Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.309734Z", "completed_at": "2024-04-29T22:43:41.309737Z"}], "thread_id": "Thread-4", "execution_time": 0.04038715362548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transaction_lines_transaction_line_id.420bd8637c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transaction_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.297968Z", "completed_at": "2024-04-29T22:43:41.303589Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.311184Z", "completed_at": "2024-04-29T22:43:41.311190Z"}], "thread_id": "Thread-3", "execution_time": 0.039544105529785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__income_accounts_income_account_id.a38311d5f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect income_account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__income_accounts\"\nwhere income_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.304588Z", "completed_at": "2024-04-29T22:43:41.311499Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.317412Z", "completed_at": "2024-04-29T22:43:41.317417Z"}], "thread_id": "Thread-7", "execution_time": 0.022845983505249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__income_accounts_income_account_id.28b4166a07", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    income_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__income_accounts\"\nwhere income_account_id is not null\ngroup by income_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.321744Z", "completed_at": "2024-04-29T22:43:41.345190Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.353740Z", "completed_at": "2024-04-29T22:43:41.353754Z"}], "thread_id": "Thread-1", "execution_time": 0.03979015350341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transactions_transaction_id.9439fe1532", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transactions\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.325394Z", "completed_at": "2024-04-29T22:43:41.345596Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.354311Z", "completed_at": "2024-04-29T22:43:41.354316Z"}], "thread_id": "Thread-2", "execution_time": 0.04022789001464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__transactions_transaction_id.fd6bd3af79", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__transactions\"\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.328970Z", "completed_at": "2024-04-29T22:43:41.346098Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.354623Z", "completed_at": "2024-04-29T22:43:41.354627Z"}], "thread_id": "Thread-5", "execution_time": 0.039765119552612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__locations_location_id.9f68ecaa6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__locations\"\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.335620Z", "completed_at": "2024-04-29T22:43:41.346671Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.354918Z", "completed_at": "2024-04-29T22:43:41.354921Z"}], "thread_id": "Thread-6", "execution_time": 0.03951215744018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__locations_location_id.3857e2cac2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.332758Z", "completed_at": "2024-04-29T22:43:41.346955Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.355195Z", "completed_at": "2024-04-29T22:43:41.355198Z"}], "thread_id": "Thread-8", "execution_time": 0.04040384292602539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__subsidiaries_subsidiary_id.9aa9c2d015", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subsidiary_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__subsidiaries\"\nwhere subsidiary_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.338649Z", "completed_at": "2024-04-29T22:43:41.347498Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.355518Z", "completed_at": "2024-04-29T22:43:41.355521Z"}], "thread_id": "Thread-4", "execution_time": 0.040411949157714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__subsidiaries_subsidiary_id.7d0dfe64f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    subsidiary_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__subsidiaries\"\nwhere subsidiary_id is not null\ngroup by subsidiary_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.341672Z", "completed_at": "2024-04-29T22:43:41.348042Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.356439Z", "completed_at": "2024-04-29T22:43:41.356443Z"}], "thread_id": "Thread-3", "execution_time": 0.04050707817077637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__vendor_types_vendor_type_id.faed6fe0e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_type_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendor_types\"\nwhere vendor_type_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.349229Z", "completed_at": "2024-04-29T22:43:41.358788Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.363638Z", "completed_at": "2024-04-29T22:43:41.363643Z"}], "thread_id": "Thread-7", "execution_time": 0.02037978172302246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__vendor_types_vendor_type_id.6ba4f59b69", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_type_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendor_types\"\nwhere vendor_type_id is not null\ngroup by vendor_type_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.365354Z", "completed_at": "2024-04-29T22:43:41.378346Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.378876Z", "completed_at": "2024-04-29T22:43:41.378882Z"}], "thread_id": "Thread-1", "execution_time": 0.017338991165161133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__vendors_vendor_id.15978cc531", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendors\"\nwhere vendor_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.372393Z", "completed_at": "2024-04-29T22:43:41.379695Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.380562Z", "completed_at": "2024-04-29T22:43:41.380566Z"}], "thread_id": "Thread-5", "execution_time": 0.01866006851196289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__items_item_id.ba322d7da3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_id\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__items\"\nwhere item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.368861Z", "completed_at": "2024-04-29T22:43:41.380239Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.381896Z", "completed_at": "2024-04-29T22:43:41.381900Z"}], "thread_id": "Thread-2", "execution_time": 0.020099163055419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__vendors_vendor_id.a981580d39", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__vendors\"\nwhere vendor_id is not null\ngroup by vendor_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T22:43:41.375293Z", "completed_at": "2024-04-29T22:43:41.381070Z"}, {"name": "execute", "started_at": "2024-04-29T22:43:41.382945Z", "completed_at": "2024-04-29T22:43:41.382948Z"}], "thread_id": "Thread-6", "execution_time": 0.020182132720947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__items_item_id.760a674654", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_23_netsuite_source\".\"stg_netsuite__items\"\nwhere item_id is not null\ngroup by item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 7.882206201553345, "args": {"use_colors_file": true, "print": true, "write_json": true, "log_format": "default", "exclude": [], "defer": false, "warn_error_options": {"include": [], "exclude": []}, "log_level": "info", "partial_parse": true, "show_resource_report": false, "static_parser": true, "vars": {}, "enable_legacy_logger": false, "strict_mode": false, "select": [], "log_level_file": "debug", "project_dir": "/Users/catherinefritz/Documents/dbt_packages/netsuite/dbt_netsuite_source/integration_tests", "indirect_selection": "eager", "quiet": false, "which": "generate", "log_format_file": "debug", "log_path": "/Users/catherinefritz/Documents/dbt_packages/netsuite/dbt_netsuite_source/integration_tests/logs", "invocation_command": "dbt docs generate", "static": false, "introspect": true, "use_colors": true, "macro_debugging": false, "log_file_max_bytes": 10485760, "cache_selected_only": false, "printer_width": 80, "send_anonymous_usage_stats": true, "empty_catalog": false, "favor_state": false, "partial_parse_file_diff": true, "populate_cache": true, "profiles_dir": "/Users/catherinefritz/.dbt", "compile": true, "version_check": true}}