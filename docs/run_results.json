{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.17", "generated_at": "2024-07-16T23:19:42.309619Z", "invocation_id": "9ad70d96-2856-404e-8561-91169ce90e41", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.249409Z", "completed_at": "2024-07-16T23:19:28.252586Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.254293Z", "completed_at": "2024-07-16T23:19:28.254307Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019092082977294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_period_fiscal_cal_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_accounting_period_fiscal_cal_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.246959Z", "completed_at": "2024-07-16T23:19:28.252929Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.255010Z", "completed_at": "2024-07-16T23:19:28.255014Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02060675621032715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_books_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_accounting_book_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.243940Z", "completed_at": "2024-07-16T23:19:28.253539Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.255872Z", "completed_at": "2024-07-16T23:19:28.255877Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021808862686157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_book_subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_accounting_book_sub_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.237990Z", "completed_at": "2024-07-16T23:19:28.253761Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.256164Z", "completed_at": "2024-07-16T23:19:28.256167Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022836923599243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__account_types_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_account_type_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.260927Z", "completed_at": "2024-07-16T23:19:28.273574Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.275408Z", "completed_at": "2024-07-16T23:19:28.275415Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018065929412841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_periods_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_accounting_period_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.264746Z", "completed_at": "2024-07-16T23:19:28.273923Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.275656Z", "completed_at": "2024-07-16T23:19:28.275659Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017637252807617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounts_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_account_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.267360Z", "completed_at": "2024-07-16T23:19:28.274188Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.276102Z", "completed_at": "2024-07-16T23:19:28.276105Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017791032791137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__classes_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_classification_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.270682Z", "completed_at": "2024-07-16T23:19:28.274915Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.277334Z", "completed_at": "2024-07-16T23:19:28.277338Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01852107048034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__consolidated_exchange_rates_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_consolidated_exchange_rate_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.284401Z", "completed_at": "2024-07-16T23:19:28.294144Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.295400Z", "completed_at": "2024-07-16T23:19:28.295406Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01701211929321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__customers_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_customer_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.290076Z", "completed_at": "2024-07-16T23:19:28.294734Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.297374Z", "completed_at": "2024-07-16T23:19:28.297382Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017496109008789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entities_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_entities_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.281763Z", "completed_at": "2024-07-16T23:19:28.295115Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.297652Z", "completed_at": "2024-07-16T23:19:28.297657Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019816875457763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__currencies_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_currency_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.287232Z", "completed_at": "2024-07-16T23:19:28.295646Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.298266Z", "completed_at": "2024-07-16T23:19:28.298268Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019610881805419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__departments_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_department_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.302211Z", "completed_at": "2024-07-16T23:19:28.314187Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.315164Z", "completed_at": "2024-07-16T23:19:28.315169Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016788005828857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entity_address_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_entity_address_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entity_address_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.308873Z", "completed_at": "2024-07-16T23:19:28.314887Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.317051Z", "completed_at": "2024-07-16T23:19:28.317054Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016443967819213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__jobs_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_job_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.306219Z", "completed_at": "2024-07-16T23:19:28.315408Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.317606Z", "completed_at": "2024-07-16T23:19:28.317610Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01761031150817871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__items_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_item_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.311743Z", "completed_at": "2024-07-16T23:19:28.315675Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.317859Z", "completed_at": "2024-07-16T23:19:28.317862Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014364004135131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__location_main_address_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_location_main_address_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__location_main_address_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.321224Z", "completed_at": "2024-07-16T23:19:28.328563Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.334737Z", "completed_at": "2024-07-16T23:19:28.334743Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01691293716430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__locations_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_location_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.325297Z", "completed_at": "2024-07-16T23:19:28.334988Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.337426Z", "completed_at": "2024-07-16T23:19:28.337431Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018082141876220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_subsidiary_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.328793Z", "completed_at": "2024-07-16T23:19:28.335828Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.338122Z", "completed_at": "2024-07-16T23:19:28.338128Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015777111053466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_accounting_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_tran_acct_line_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.331490Z", "completed_at": "2024-07-16T23:19:28.336056Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.338450Z", "completed_at": "2024-07-16T23:19:28.338454Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01589822769165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_transaction_line_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.340752Z", "completed_at": "2024-07-16T23:19:28.345606Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.354854Z", "completed_at": "2024-07-16T23:19:28.354860Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018065929412841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transactions_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_transaction_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.346235Z", "completed_at": "2024-07-16T23:19:28.355259Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.357240Z", "completed_at": "2024-07-16T23:19:28.357243Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014245033264160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendor_categories_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_vendor_category_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.349222Z", "completed_at": "2024-07-16T23:19:28.356057Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.358112Z", "completed_at": "2024-07-16T23:19:28.358115Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014702796936035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendors_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite2_vendor_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.352443Z", "completed_at": "2024-07-16T23:19:28.356500Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.358799Z", "completed_at": "2024-07-16T23:19:28.358802Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015063047409057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_books_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_accounting_books_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.360398Z", "completed_at": "2024-07-16T23:19:28.364923Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.374193Z", "completed_at": "2024-07-16T23:19:28.374200Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017261743545532227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_periods_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_accounting_periods_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.365162Z", "completed_at": "2024-07-16T23:19:28.374440Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.376404Z", "completed_at": "2024-07-16T23:19:28.376407Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014431953430175781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.367788Z", "completed_at": "2024-07-16T23:19:28.375220Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.377185Z", "completed_at": "2024-07-16T23:19:28.377188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014750242233276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__classes_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_classes_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.370610Z", "completed_at": "2024-07-16T23:19:28.375938Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.378115Z", "completed_at": "2024-07-16T23:19:28.378118Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01783609390258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__consolidated_exchange_rates_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_consolidated_exchange_rates_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.379226Z", "completed_at": "2024-07-16T23:19:28.384760Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.393530Z", "completed_at": "2024-07-16T23:19:28.393538Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01811504364013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__currencies_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_currencies_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.384995Z", "completed_at": "2024-07-16T23:19:28.393793Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.396597Z", "completed_at": "2024-07-16T23:19:28.396608Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01507568359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__customers_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_customers_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.387854Z", "completed_at": "2024-07-16T23:19:28.394198Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.396864Z", "completed_at": "2024-07-16T23:19:28.396867Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014939069747924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__departments_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_departments_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.390668Z", "completed_at": "2024-07-16T23:19:28.395233Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.397514Z", "completed_at": "2024-07-16T23:19:28.397518Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015218973159790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__expense_accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_expense_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.400398Z", "completed_at": "2024-07-16T23:19:28.407003Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.416000Z", "completed_at": "2024-07-16T23:19:28.416007Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019367218017578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__income_accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_income_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.412852Z", "completed_at": "2024-07-16T23:19:28.417200Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.419326Z", "completed_at": "2024-07-16T23:19:28.419330Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01677227020263672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_subsidiaries_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.407318Z", "completed_at": "2024-07-16T23:19:28.417524Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.419564Z", "completed_at": "2024-07-16T23:19:28.419567Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0181729793548584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__items_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_items_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.410201Z", "completed_at": "2024-07-16T23:19:28.418225Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.422306Z", "completed_at": "2024-07-16T23:19:28.422312Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018206119537353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__locations_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_locations_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.419792Z", "completed_at": "2024-07-16T23:19:28.424473Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.426737Z", "completed_at": "2024-07-16T23:19:28.426741Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01347208023071289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transaction_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_transaction_lines_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.472988Z", "completed_at": "2024-07-16T23:19:28.474019Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.474512Z", "completed_at": "2024-07-16T23:19:28.474518Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.002610921859741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.469088Z", "completed_at": "2024-07-16T23:19:28.475529Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.477347Z", "completed_at": "2024-07-16T23:19:28.477350Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.053263187408447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendors_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_vendors_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.427385Z", "completed_at": "2024-07-16T23:19:28.475736Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.477572Z", "completed_at": "2024-07-16T23:19:28.477575Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0546412467956543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transactions_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_transactions_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.431765Z", "completed_at": "2024-07-16T23:19:28.475969Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.477802Z", "completed_at": "2024-07-16T23:19:28.477804Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.05449080467224121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendor_types_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_3\".\"netsuite_vendor_types_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.478024Z", "completed_at": "2024-07-16T23:19:28.479024Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.481674Z", "completed_at": "2024-07-16T23:19:28.481678Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006902933120727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_account_type_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.484340Z", "completed_at": "2024-07-16T23:19:28.485501Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.492321Z", "completed_at": "2024-07-16T23:19:28.492328Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012970924377441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_book_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.485809Z", "completed_at": "2024-07-16T23:19:28.488045Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.492614Z", "completed_at": "2024-07-16T23:19:28.492617Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013112068176269531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_book_sub_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.488608Z", "completed_at": "2024-07-16T23:19:28.490327Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.492920Z", "completed_at": "2024-07-16T23:19:28.492927Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013206958770751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_period_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.493230Z", "completed_at": "2024-07-16T23:19:28.494396Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.497241Z", "completed_at": "2024-07-16T23:19:28.497247Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00802302360534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_period_fiscal_cal_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.499831Z", "completed_at": "2024-07-16T23:19:28.500925Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.505358Z", "completed_at": "2024-07-16T23:19:28.505362Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010143041610717773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_classification_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.501210Z", "completed_at": "2024-07-16T23:19:28.502122Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.505582Z", "completed_at": "2024-07-16T23:19:28.505584Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01022481918334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_consolidated_exchange_rate_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.502370Z", "completed_at": "2024-07-16T23:19:28.504029Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.505846Z", "completed_at": "2024-07-16T23:19:28.505854Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010308027267456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_currency_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.506284Z", "completed_at": "2024-07-16T23:19:28.507241Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.509649Z", "completed_at": "2024-07-16T23:19:28.509653Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006663084030151367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.511912Z", "completed_at": "2024-07-16T23:19:28.512900Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.517259Z", "completed_at": "2024-07-16T23:19:28.517266Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009714841842651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_department_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.513198Z", "completed_at": "2024-07-16T23:19:28.514227Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.517496Z", "completed_at": "2024-07-16T23:19:28.517499Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009860992431640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_entities_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.514491Z", "completed_at": "2024-07-16T23:19:28.515412Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.517711Z", "completed_at": "2024-07-16T23:19:28.517713Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009978055953979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_entity_address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.517920Z", "completed_at": "2024-07-16T23:19:28.519115Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.521591Z", "completed_at": "2024-07-16T23:19:28.521595Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007173061370849609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.524031Z", "completed_at": "2024-07-16T23:19:28.526346Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.530671Z", "completed_at": "2024-07-16T23:19:28.530677Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010915756225585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_job_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.526711Z", "completed_at": "2024-07-16T23:19:28.527875Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.530912Z", "completed_at": "2024-07-16T23:19:28.530915Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011026382446289062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_location_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.528240Z", "completed_at": "2024-07-16T23:19:28.529210Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.531135Z", "completed_at": "2024-07-16T23:19:28.531137Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011204957962036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_location_main_address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.531352Z", "completed_at": "2024-07-16T23:19:28.532343Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.534851Z", "completed_at": "2024-07-16T23:19:28.534853Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006760835647583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_subsidiary_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.537289Z", "completed_at": "2024-07-16T23:19:28.538323Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.542719Z", "completed_at": "2024-07-16T23:19:28.542722Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009567975997924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_tran_acct_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.538590Z", "completed_at": "2024-07-16T23:19:28.540245Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.542946Z", "completed_at": "2024-07-16T23:19:28.542948Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009624004364013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.540490Z", "completed_at": "2024-07-16T23:19:28.541389Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.543164Z", "completed_at": "2024-07-16T23:19:28.543166Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009717941284179688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_transaction_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.543375Z", "completed_at": "2024-07-16T23:19:28.544290Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.546621Z", "completed_at": "2024-07-16T23:19:28.546624Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006356000900268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_vendor_category_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.549000Z", "completed_at": "2024-07-16T23:19:28.550015Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.554011Z", "completed_at": "2024-07-16T23:19:28.554015Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010114908218383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_vendor_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.550268Z", "completed_at": "2024-07-16T23:19:28.551265Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.554250Z", "completed_at": "2024-07-16T23:19:28.554253Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010217905044555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounting_books_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.551570Z", "completed_at": "2024-07-16T23:19:28.552505Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.554503Z", "completed_at": "2024-07-16T23:19:28.554505Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010312080383300781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounting_periods_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.554728Z", "completed_at": "2024-07-16T23:19:28.556563Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.559061Z", "completed_at": "2024-07-16T23:19:28.559069Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007929086685180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.562002Z", "completed_at": "2024-07-16T23:19:28.563193Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.567336Z", "completed_at": "2024-07-16T23:19:28.567343Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010282039642333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_classes_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.563473Z", "completed_at": "2024-07-16T23:19:28.564382Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.567588Z", "completed_at": "2024-07-16T23:19:28.567590Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01032710075378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_consolidated_exchange_rates_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.564618Z", "completed_at": "2024-07-16T23:19:28.565532Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.567824Z", "completed_at": "2024-07-16T23:19:28.567827Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010571002960205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_currencies_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.568052Z", "completed_at": "2024-07-16T23:19:28.569214Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.572249Z", "completed_at": "2024-07-16T23:19:28.572254Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007927179336547852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_customers_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.574825Z", "completed_at": "2024-07-16T23:19:28.576811Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.580551Z", "completed_at": "2024-07-16T23:19:28.580555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010170698165893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_departments_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.577121Z", "completed_at": "2024-07-16T23:19:28.578060Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.580768Z", "completed_at": "2024-07-16T23:19:28.580770Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010232210159301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_expense_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.578324Z", "completed_at": "2024-07-16T23:19:28.579237Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.580988Z", "completed_at": "2024-07-16T23:19:28.580990Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010313034057617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_income_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.581208Z", "completed_at": "2024-07-16T23:19:28.582224Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.584621Z", "completed_at": "2024-07-16T23:19:28.584623Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006544828414916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_items_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.587207Z", "completed_at": "2024-07-16T23:19:28.588486Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.593220Z", "completed_at": "2024-07-16T23:19:28.593225Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010322093963623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_locations_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.588804Z", "completed_at": "2024-07-16T23:19:28.589798Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.593441Z", "completed_at": "2024-07-16T23:19:28.593443Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010406970977783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_subsidiaries_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.590059Z", "completed_at": "2024-07-16T23:19:28.591802Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.593654Z", "completed_at": "2024-07-16T23:19:28.593656Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010496854782104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_transaction_lines_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.593865Z", "completed_at": "2024-07-16T23:19:28.594764Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.597171Z", "completed_at": "2024-07-16T23:19:28.597173Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006495952606201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_transactions_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.599599Z", "completed_at": "2024-07-16T23:19:28.600530Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.609834Z", "completed_at": "2024-07-16T23:19:28.609840Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017663240432739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_vendor_types_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.600771Z", "completed_at": "2024-07-16T23:19:28.601625Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:28.610080Z", "completed_at": "2024-07-16T23:19:28.610083Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01798224449157715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_vendors_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.601851Z", "completed_at": "2024-07-16T23:19:29.743218Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:29.744932Z", "completed_at": "2024-07-16T23:19:29.744936Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2630488872528076, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_period_fiscal_cal", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountingperiod\n    \n as \n    \n    accountingperiod\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    fiscalcalendar\n    \n as \n    \n    fiscalcalendar\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        accountingperiod as accounting_period_id,\n        fiscalcalendar as fiscal_calendar_id,\n        parent as parent_id\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.622654Z", "completed_at": "2024-07-16T23:19:29.744213Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:29.746048Z", "completed_at": "2024-07-16T23:19:29.746050Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2587108612060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__account_types", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    balancesheet\n    \n as \n    \n    balancesheet\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    defaultcashflowratetype\n    \n as \n    \n    defaultcashflowratetype\n    \n, \n    \n    \n    defaultgeneralratetype\n    \n as \n    \n    defaultgeneralratetype\n    \n, \n    \n    \n    eliminationalgo\n    \n as \n    \n    eliminationalgo\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includeinrevaldefault\n    \n as \n    \n    includeinrevaldefault\n    \n, \n    \n    \n    internalid\n    \n as \n    \n    internalid\n    \n, \n    \n    \n        \n            \n            \"left\"\n            \n        \n    \n as \n    \n        \n            \n            \"left\"\n            \n        \n    \n, \n    \n    \n    longname\n    \n as \n    \n    longname\n    \n, \n    \n    \n    seqnum\n    \n as \n    \n    seqnum\n    \n, \n    \n    \n    usercanchangerevaloption\n    \n as \n    \n    usercanchangerevaloption\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        id as account_type_id,\n        balancesheet = 'T' as is_balancesheet,\"left\"= 'T' as is_leftside,\n        longname as type_name\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.618337Z", "completed_at": "2024-07-16T23:19:29.742804Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:29.744689Z", "completed_at": "2024-07-16T23:19:29.744696Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2609119415283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_book_subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        accountingbook as accounting_book_id,\n        status,\n        subsidiary as subsidiary_id\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:28.610524Z", "completed_at": "2024-07-16T23:19:29.743496Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:29.745384Z", "completed_at": "2024-07-16T23:19:29.745387Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.271820068359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_books", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    basebook\n    \n as \n    \n    basebook\n    \n, \n    cast(null as TEXT) as \n    \n    contingentrevenuehandling\n    \n , \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    effectiveperiod\n    \n as \n    \n    effectiveperiod\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isadjustmentonly\n    \n as \n    \n    isadjustmentonly\n    \n, \n    \n    \n    isconsolidated\n    \n as \n    \n    isconsolidated\n    \n, \n    \n    \n    isprimary\n    \n as \n    \n    isprimary\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subsidiariesstring\n    \n as \n    \n    subsidiariesstring\n    \n, \n    cast(null as TEXT) as \n    \n    twosteprevenueallocation\n    \n , \n    cast(null as TEXT) as \n    \n    unbilledreceivablegrouping\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as accounting_book_id,\n        name as accounting_book_name,\n        basebook as base_book_id,\n        effectiveperiod as effective_period_id,\n        isadjustmentonly = 'T' as is_adjustment_only,\n        isconsolidated = 'T' as is_consolidated,\n        contingentrevenuehandling as is_contingent_revenue_handling,\n        isprimary = 'T' as is_primary,\n        twosteprevenueallocation as is_two_step_revenue_allocation\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:29.909399Z", "completed_at": "2024-07-16T23:19:31.186659Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:31.202124Z", "completed_at": "2024-07-16T23:19:31.202132Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.3901829719543457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__classes", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as class_id,\n        externalid as class_external_id,\n        name,\n        fullname as full_name,\n        isinactive = 'T' as is_inactive,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your classes_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:29.901856Z", "completed_at": "2024-07-16T23:19:31.203592Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:31.204986Z", "completed_at": "2024-07-16T23:19:31.204988Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.416133165359497, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    acctnumber\n    \n as \n    \n    acctnumber\n    \n, \n    \n    \n    accttype\n    \n as \n    \n    accttype\n    \n, \n    \n    \n    sspecacct\n    \n as \n    \n    sspecacct\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    deferralacct\n    \n as \n    \n    deferralacct\n    \n, \n    \n    \n    cashflowrate\n    \n as \n    \n    cashflowrate\n    \n, \n    \n    \n    generalrate\n    \n as \n    \n    generalrate\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    includechildren\n    \n as \n    \n    includechildren\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    issummary\n    \n as \n    \n    issummary\n    \n, \n    \n    \n    eliminate\n    \n as \n    \n    eliminate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as account_id, \n        externalid as account_external_id,\n        parent as parent_id,\n        acctnumber as account_number,\n        accttype as account_type_id,\n        sspecacct as special_account_type_id,\n        fullname as name,\n        description as account_description,\n        deferralacct as deferral_account_id,\n        cashflowrate as cash_flow_rate_type,\n        generalrate as general_rate_type,\n        currency as currency_id,\n        class as class_id,\n        department as department_id,\n        location as location_id,\n        includechildren = 'T' as is_including_child_subs,\n        isinactive = 'T' as is_inactive,\n        issummary = 'T' as is_summary,\n        eliminate = 'T' as is_eliminate,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your accounts_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:29.889006Z", "completed_at": "2024-07-16T23:19:31.201807Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:31.203843Z", "completed_at": "2024-07-16T23:19:31.203847Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.445570945739746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_periods", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    alllocked\n    \n as \n    \n    alllocked\n    \n, \n    \n    \n    allownonglchanges\n    \n as \n    \n    allownonglchanges\n    \n, \n    \n    \n    aplocked\n    \n as \n    \n    aplocked\n    \n, \n    \n    \n    arlocked\n    \n as \n    \n    arlocked\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    \n    \n    closedondate\n    \n as \n    \n    closedondate\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    enddate\n    \n as \n    \n    enddate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isadjust\n    \n as \n    \n    isadjust\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isposting\n    \n as \n    \n    isposting\n    \n, \n    \n    \n    isquarter\n    \n as \n    \n    isquarter\n    \n, \n    \n    \n    isyear\n    \n as \n    \n    isyear\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    periodname\n    \n as \n    \n    periodname\n    \n, \n    \n    \n    startdate\n    \n as \n    \n    startdate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as accounting_period_id,\n        parent as parent_id, \n        periodname as name,\n        startdate as starting_at,\n        enddate as ending_at,\n        closedondate as closed_at,\n        isquarter = 'T' as is_quarter,\n        isyear = 'T' as is_year,\n        isadjust = 'T' as is_adjustment,\n        isposting = 'T' as is_posting,\n        closed = 'T' as is_closed,\n        alllocked = 'T' as is_all_locked,\n        arlocked = 'T' as is_ar_locked,\n        aplocked = 'T' as is_ap_locked\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:29.914756Z", "completed_at": "2024-07-16T23:19:31.202391Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:31.204117Z", "completed_at": "2024-07-16T23:19:31.204120Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.4160740375518799, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__consolidated_exchange_rates", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    averagerate\n    \n as \n    \n    averagerate\n    \n, \n    \n    \n    currentrate\n    \n as \n    \n    currentrate\n    \n, \n    \n    \n    fromcurrency\n    \n as \n    \n    fromcurrency\n    \n, \n    \n    \n    fromsubsidiary\n    \n as \n    \n    fromsubsidiary\n    \n, \n    \n    \n    historicalrate\n    \n as \n    \n    historicalrate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    postingperiod\n    \n as \n    \n    postingperiod\n    \n, \n    \n    \n    tocurrency\n    \n as \n    \n    tocurrency\n    \n, \n    \n    \n    tosubsidiary\n    \n as \n    \n    tosubsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as consolidated_exchange_rate_id,\n        postingperiod as accounting_period_id,\n        fromcurrency as from_currency_id,\n        fromsubsidiary as from_subsidiary_id,\n        tocurrency as to_currency_id,\n        tosubsidiary as to_subsidiary_id,\n        accountingbook as accounting_book_id,\n        currentrate as current_rate, \n        averagerate as average_rate,\n        historicalrate as historical_rate\n\n        --The below macro adds the fields defined within your consolidated_exchange_rates_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:31.291375Z", "completed_at": "2024-07-16T23:19:32.319039Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:32.319554Z", "completed_at": "2024-07-16T23:19:32.319563Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1459698677062988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__customers", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    receivablesaccount\n    \n as \n    \n    receivablesaccount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    firstorderdate\n    \n as \n    \n    firstorderdate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as customer_id,\n        entityid as entity_id,\n        externalid as customer_external_id,\n        parent as parent_id,\n        isperson = 'T' as is_person,\n        companyname as company_name,\n        firstname as first_name,\n        lastname as last_name,\n        email as email_address,\n        phone as phone_number,\n        defaultbillingaddress as default_billing_address_id,\n        defaultshippingaddress as default_shipping_address_id,\n        receivablesaccount as receivables_account_id,\n        currency as currency_id,\n        firstorderdate as date_first_order_at\n\n        --The below macro adds the fields defined within your customers_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:31.318615Z", "completed_at": "2024-07-16T23:19:32.417900Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:32.419288Z", "completed_at": "2024-07-16T23:19:32.419292Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2084159851074219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entities", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    employee\n    \n as \n    \n    employee\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    project\n    \n as \n    \n    project\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as entity_id,\n        parent as parent_id,\n        entitytitle as entity_name,\n        type as entity_type,\n        isperson = 'T' as is_person,\n        contact as contact_id,\n        customer as customer_id,\n        employee as employee_id,\n        project as job_id,\n        vendor as vendor_id\n\n        --The below macro adds the fields defined within your entities_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:31.361817Z", "completed_at": "2024-07-16T23:19:32.417589Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:32.418845Z", "completed_at": "2024-07-16T23:19:32.418852Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.2095298767089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__departments", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as department_id,\n        parent as parent_id,\n        name,\n        fullname as full_name,\n        subsidiary as subsidiary_id,\n        isinactive = 'T' as is_inactive,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your departments_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:31.322883Z", "completed_at": "2024-07-16T23:19:32.418365Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:32.419719Z", "completed_at": "2024-07-16T23:19:32.419722Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2117218971252441, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__currencies", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    currencyprecision\n    \n as \n    \n    currencyprecision\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    displaysymbol\n    \n as \n    \n    displaysymbol\n    \n, \n    \n    \n    exchangerate\n    \n as \n    \n    exchangerate\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fxrateupdatetimezone\n    \n as \n    \n    fxrateupdatetimezone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includeinfxrateupdates\n    \n as \n    \n    includeinfxrateupdates\n    \n, \n    \n    \n    isbasecurrency\n    \n as \n    \n    isbasecurrency\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    overridecurrencyformat\n    \n as \n    \n    overridecurrencyformat\n    \n, \n    \n    \n    symbol\n    \n as \n    \n    symbol\n    \n, \n    \n    \n    symbolplacement\n    \n as \n    \n    symbolplacement\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as currency_id,\n        name,\n        symbol\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:32.437347Z", "completed_at": "2024-07-16T23:19:33.948869Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:33.949423Z", "completed_at": "2024-07-16T23:19:33.949430Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.7514870166778564, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entity_address", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entity_address_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    addr1\n    \n as \n    \n    addr1\n    \n, \n    \n    \n    addr2\n    \n as \n    \n    addr2\n    \n, \n    \n    \n    addr3\n    \n as \n    \n    addr3\n    \n, \n    \n    \n    addressee\n    \n as \n    \n    addressee\n    \n, \n    \n    \n    addrphone\n    \n as \n    \n    addrphone\n    \n, \n    \n    \n    addrtext\n    \n as \n    \n    addrtext\n    \n, \n    \n    \n    attention\n    \n as \n    \n    attention\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    dropdownstate\n    \n as \n    \n    dropdownstate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    nkey\n    \n as \n    \n    nkey\n    \n, \n    \n    \n    override\n    \n as \n    \n    override\n    \n, \n    \n    \n    recordowner\n    \n as \n    \n    recordowner\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        addr1,\n        addr2,\n        addr3,\n        addressee,\n        addrtext as full_address,\n        city,\n        country,\n        coalesce(state, dropdownstate) as state,\n        nkey,\n        zip as zipcode\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entity_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:32.542184Z", "completed_at": "2024-07-16T23:19:34.242041Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:34.248239Z", "completed_at": "2024-07-16T23:19:34.248243Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.8229432106018066, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__jobs", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountnumber\n    \n as \n    \n    accountnumber\n    \n, \n    \n    \n    actualtime\n    \n as \n    \n    actualtime\n    \n, \n    \n    \n    allowallresourcesfortasks\n    \n as \n    \n    allowallresourcesfortasks\n    \n, \n    \n    \n    allowexpenses\n    \n as \n    \n    allowexpenses\n    \n, \n    \n    \n    allowtime\n    \n as \n    \n    allowtime\n    \n, \n    \n    \n    alternatecontact\n    \n as \n    \n    alternatecontact\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    billingschedule\n    \n as \n    \n    billingschedule\n    \n, \n    \n    \n    calculatedenddate\n    \n as \n    \n    calculatedenddate\n    \n, \n    \n    \n    calculatedenddatebaseline\n    \n as \n    \n    calculatedenddatebaseline\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    contactlist\n    \n as \n    \n    contactlist\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    currencyprecision\n    \n as \n    \n    currencyprecision\n    \n, \n    \n    \n    custentity1\n    \n as \n    \n    custentity1\n    \n, \n    \n    \n    custentity4\n    \n as \n    \n    custentity4\n    \n, \n    \n    \n    custentity5\n    \n as \n    \n    custentity5\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    enddate\n    \n as \n    \n    enddate\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitystatus\n    \n as \n    \n    entitystatus\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    estimatedcost\n    \n as \n    \n    estimatedcost\n    \n, \n    \n    \n    estimatedgrossprofit\n    \n as \n    \n    estimatedgrossprofit\n    \n, \n    \n    \n    estimatedgrossprofitpercent\n    \n as \n    \n    estimatedgrossprofitpercent\n    \n, \n    \n    \n    estimatedlaborcost\n    \n as \n    \n    estimatedlaborcost\n    \n, \n    \n    \n    estimatedlaborcostbaseline\n    \n as \n    \n    estimatedlaborcostbaseline\n    \n, \n    \n    \n    estimatedlaborrevenue\n    \n as \n    \n    estimatedlaborrevenue\n    \n, \n    \n    \n    estimatedrevenue\n    \n as \n    \n    estimatedrevenue\n    \n, \n    \n    \n    estimatedtime\n    \n as \n    \n    estimatedtime\n    \n, \n    \n    \n    estimatedtimeoverride\n    \n as \n    \n    estimatedtimeoverride\n    \n, \n    \n    \n    estimatedtimeoverridebaseline\n    \n as \n    \n    estimatedtimeoverridebaseline\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    files\n    \n as \n    \n    files\n    \n, \n    \n    \n    forecastchargerunondemand\n    \n as \n    \n    forecastchargerunondemand\n    \n, \n    \n    \n    fxrate\n    \n as \n    \n    fxrate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includecrmtasksintotals\n    \n as \n    \n    includecrmtasksintotals\n    \n, \n    \n    \n    isexempttime\n    \n as \n    \n    isexempttime\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isproductivetime\n    \n as \n    \n    isproductivetime\n    \n, \n    \n    \n    isutilizedtime\n    \n as \n    \n    isutilizedtime\n    \n, \n    \n    \n    jobbillingtype\n    \n as \n    \n    jobbillingtype\n    \n, \n    \n    \n    jobitem\n    \n as \n    \n    jobitem\n    \n, \n    \n    \n    jobprice\n    \n as \n    \n    jobprice\n    \n, \n    \n    \n    jobtype\n    \n as \n    \n    jobtype\n    \n, \n    \n    \n    lastbaselinedate\n    \n as \n    \n    lastbaselinedate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    limittimetoassignees\n    \n as \n    \n    limittimetoassignees\n    \n, \n    \n    \n    materializetime\n    \n as \n    \n    materializetime\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    percentcomplete\n    \n as \n    \n    percentcomplete\n    \n, \n    \n    \n    percenttimecomplete\n    \n as \n    \n    percenttimecomplete\n    \n, \n    \n    \n    primarycontact\n    \n as \n    \n    primarycontact\n    \n, \n    \n    \n    projectedenddate\n    \n as \n    \n    projectedenddate\n    \n, \n    \n    \n    projectedenddatebaseline\n    \n as \n    \n    projectedenddatebaseline\n    \n, \n    \n    \n    projectmanager\n    \n as \n    \n    projectmanager\n    \n, \n    \n    \n    startdate\n    \n as \n    \n    startdate\n    \n, \n    \n    \n    startdatebaseline\n    \n as \n    \n    startdatebaseline\n    \n, \n    \n    \n    timeapproval\n    \n as \n    \n    timeapproval\n    \n, \n    \n    \n    timeremaining\n    \n as \n    \n    timeremaining\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        id as job_id,\n        externalid as job_external_id,\n        customer as customer_id,\n        entityid as entity_id,\n        defaultbillingaddress as billing_address_id,\n        defaultshippingaddress as shipping_address_id,\n        parent as parent_id\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:32.552114Z", "completed_at": "2024-07-16T23:19:34.240319Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:34.241829Z", "completed_at": "2024-07-16T23:19:34.241835Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.8199360370635986, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__location_main_address", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__location_main_address_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    addr1\n    \n as \n    \n    addr1\n    \n, \n    \n    \n    addr2\n    \n as \n    \n    addr2\n    \n, \n    \n    \n    addr3\n    \n as \n    \n    addr3\n    \n, \n    \n    \n    addressee\n    \n as \n    \n    addressee\n    \n, \n    \n    \n    addrphone\n    \n as \n    \n    addrphone\n    \n, \n    \n    \n    addrtext\n    \n as \n    \n    addrtext\n    \n, \n    \n    \n    attention\n    \n as \n    \n    attention\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    dropdownstate\n    \n as \n    \n    dropdownstate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    nkey\n    \n as \n    \n    nkey\n    \n, \n    \n    \n    override\n    \n as \n    \n    override\n    \n, \n    \n    \n    recordowner\n    \n as \n    \n    recordowner\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        addr1,\n        addr2,\n        addr3,\n        addressee,\n        addrtext as full_address,\n        city,\n        country,\n        coalesce(state, dropdownstate) as state,\n        nkey,\n        zip as zipcode\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__location_main_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:32.548207Z", "completed_at": "2024-07-16T23:19:34.241600Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:34.247942Z", "completed_at": "2024-07-16T23:19:34.247948Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.8226418495178223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__items", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as integer) as \n    \n    alternatedemandsourceitem\n    \n , \n    cast(null as integer) as \n    \n    amortizationperiod\n    \n , \n    cast(null as integer) as \n    \n    amortizationtemplate\n    \n , \n    \n    \n    assetaccount\n    \n as \n    \n    assetaccount\n    \n, \n    cast(null as TEXT) as \n    \n    atpmethod\n    \n , \n    cast(null as TEXT) as \n    \n    autoexpandkitforrevenuemgmt\n    \n , \n    cast(null as float) as \n    \n    averagecost\n    \n , \n    cast(null as integer) as \n    \n    backwardconsumptiondays\n    \n , \n    cast(null as integer) as \n    \n    billexchratevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    billingschedule\n    \n , \n    cast(null as integer) as \n    \n    billpricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    billqtyvarianceacct\n    \n , \n    cast(null as TEXT) as \n    \n    buildentireassembly\n    \n , \n    cast(null as float) as \n    \n    buildtime\n    \n , \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    cast(null as integer) as \n    \n    consumptionunit\n    \n , \n    cast(null as TEXT) as \n    \n    copydescription\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as float) as \n    \n    costestimate\n    \n , \n    cast(null as TEXT) as \n    \n    costestimatetype\n    \n , \n    cast(null as TEXT) as \n    \n    costingmethod\n    \n , \n    cast(null as TEXT) as \n    \n    costingmethoddisplay\n    \n , \n    cast(null as TEXT) as \n    \n    countryofmanufacture\n    \n , \n    cast(null as timestamp) as \n    \n    createddate\n    \n , \n    cast(null as integer) as \n    \n    createexpenseplanson\n    \n , \n    cast(null as TEXT) as \n    \n    createjob\n    \n , \n    cast(null as integer) as \n    \n    createrevenueplanson\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    \n    \n    deferralaccount\n    \n as \n    \n    deferralaccount\n    \n, \n    cast(null as integer) as \n    \n    deferredrevenueaccount\n    \n , \n    cast(null as TEXT) as \n    \n    deferrevrec\n    \n , \n    cast(null as float) as \n    \n    demandmodifier\n    \n , \n    cast(null as TEXT) as \n    \n    demandsource\n    \n , \n    cast(null as integer) as \n    \n    demandtimefence\n    \n , \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    cast(null as TEXT) as \n    \n    directrevenueposting\n    \n , \n    cast(null as TEXT) as \n    \n    displayname\n    \n , \n    cast(null as integer) as \n    \n    dropshipexpenseaccount\n    \n , \n    cast(null as TEXT) as \n    \n    enforceminqtyinternally\n    \n , \n    cast(null as TEXT) as \n    \n    excludefromsitemap\n    \n , \n    \n    \n    expenseaccount\n    \n as \n    \n    expenseaccount\n    \n, \n    cast(null as integer) as \n    \n    expenseamortizationrule\n    \n , \n    cast(null as TEXT) as \n    \n    externalid\n    \n , \n    cast(null as float) as \n    \n    fixedlotsize\n    \n , \n    cast(null as integer) as \n    \n    forwardconsumptiondays\n    \n , \n    cast(null as TEXT) as \n    \n    froogleproductfeed\n    \n , \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    cast(null as float) as \n    \n    fxcost\n    \n , \n    \n    \n    gainlossaccount\n    \n as \n    \n    gainlossaccount\n    \n, \n    cast(null as TEXT) as \n    \n    generateaccruals\n    \n , \n    cast(null as float) as \n    \n    handlingcost\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as TEXT) as \n    \n    includechildren\n    \n , \n    \n    \n    incomeaccount\n    \n as \n    \n    incomeaccount\n    \n, \n    cast(null as integer) as \n    \n    intercodefrevaccount\n    \n , \n    cast(null as integer) as \n    \n    intercoexpenseaccount\n    \n , \n    cast(null as integer) as \n    \n    intercoincomeaccount\n    \n , \n    cast(null as TEXT) as \n    \n    isdropshipitem\n    \n , \n    cast(null as TEXT) as \n    \n    isfulfillable\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    islotitem\n    \n , \n    cast(null as TEXT) as \n    \n    isonline\n    \n , \n    cast(null as TEXT) as \n    \n    isphantom\n    \n , \n    cast(null as TEXT) as \n    \n    isserialitem\n    \n , \n    cast(null as TEXT) as \n    \n    isspecialorderitem\n    \n , \n    cast(null as TEXT) as \n    \n    isspecialworkorderitem\n    \n , \n    cast(null as TEXT) as \n    \n    itemid\n    \n , \n    cast(null as integer) as \n    \n    itemrevenuecategory\n    \n , \n    \n    \n    itemtype\n    \n as \n    \n    itemtype\n    \n, \n    cast(null as timestamp) as \n    \n    lastmodifieddate\n    \n , \n    cast(null as float) as \n    \n    lastpurchaseprice\n    \n , \n    cast(null as integer) as \n    \n    leadtime\n    \n , \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    cast(null as TEXT) as \n    \n    manufacturer\n    \n , \n    cast(null as TEXT) as \n    \n    matchbilltoreceipt\n    \n , \n    cast(null as TEXT) as \n    \n    matrixitemnametemplate\n    \n , \n    cast(null as TEXT) as \n    \n    matrixtype\n    \n , \n    cast(null as integer) as \n    \n    maximumquantity\n    \n , \n    cast(null as integer) as \n    \n    minimumquantity\n    \n , \n    cast(null as TEXT) as \n    \n    mpn\n    \n , \n    cast(null as TEXT) as \n    \n    nextagcategory\n    \n , \n    cast(null as TEXT) as \n    \n    nextagproductfeed\n    \n , \n    cast(null as TEXT) as \n    \n    overallquantitypricingtype\n    \n , \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    cast(null as integer) as \n    \n    periodiclotsizedays\n    \n , \n    cast(null as TEXT) as \n    \n    periodiclotsizetype\n    \n , \n    cast(null as integer) as \n    \n    preferredlocation\n    \n , \n    cast(null as integer) as \n    \n    pricinggroup\n    \n , \n    cast(null as TEXT) as \n    \n    printitems\n    \n , \n    cast(null as integer) as \n    \n    prodpricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    prodqtyvarianceacct\n    \n , \n    cast(null as integer) as \n    \n    projectexpensetype\n    \n , \n    cast(null as integer) as \n    \n    projecttemplate\n    \n , \n    cast(null as TEXT) as \n    \n    purchasedescription\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as integer) as \n    \n    purchasepricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    purchaseunit\n    \n , \n    cast(null as integer) as \n    \n    quantitypricingschedule\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    relateditemsdescription\n    \n , \n    cast(null as integer) as \n    \n    rescheduleindays\n    \n , \n    cast(null as integer) as \n    \n    rescheduleoutdays\n    \n , \n    cast(null as float) as \n    \n    residual\n    \n , \n    cast(null as integer) as \n    \n    revenueallocationgroup\n    \n , \n    cast(null as integer) as \n    \n    revenuerecognitionrule\n    \n , \n    cast(null as integer) as \n    \n    revrecforecastrule\n    \n , \n    cast(null as integer) as \n    \n    revreclassfxaccount\n    \n , \n    cast(null as TEXT) as \n    \n    roundupascomponent\n    \n , \n    cast(null as float) as \n    \n    safetystocklevel\n    \n , \n    cast(null as integer) as \n    \n    saleunit\n    \n , \n    cast(null as integer) as \n    \n    scrapacct\n    \n , \n    cast(null as TEXT) as \n    \n    searchkeywords\n    \n , \n    cast(null as TEXT) as \n    \n    seasonaldemand\n    \n , \n    cast(null as TEXT) as \n    \n    shipindividually\n    \n , \n    cast(null as integer) as \n    \n    shippackage\n    \n , \n    cast(null as float) as \n    \n    shippingcost\n    \n , \n    cast(null as TEXT) as \n    \n    shoppingdotcomcategory\n    \n , \n    cast(null as TEXT) as \n    \n    shoppingproductfeed\n    \n , \n    cast(null as integer) as \n    \n    shopzillacategoryid\n    \n , \n    cast(null as TEXT) as \n    \n    shopzillaproductfeed\n    \n , \n    cast(null as TEXT) as \n    \n    sitemappriority\n    \n , \n    cast(null as TEXT) as \n    \n    stockdescription\n    \n , \n    cast(null as integer) as \n    \n    stockunit\n    \n , \n    cast(null as TEXT) as \n    \n    storedescription\n    \n , \n    cast(null as integer) as \n    \n    storedisplayimage\n    \n , \n    cast(null as TEXT) as \n    \n    storedisplayname\n    \n , \n    cast(null as integer) as \n    \n    storedisplaythumbnail\n    \n , \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    cast(null as TEXT) as \n    \n    subtype\n    \n , \n    cast(null as TEXT) as \n    \n    supplylotsizingmethod\n    \n , \n    cast(null as TEXT) as \n    \n    supplyreplenishmentmethod\n    \n , \n    cast(null as integer) as \n    \n    supplytimefence\n    \n , \n    cast(null as TEXT) as \n    \n    supplytype\n    \n , \n    cast(null as float) as \n    \n    totalquantityonhand\n    \n , \n    cast(null as float) as \n    \n    totalvalue\n    \n , \n    cast(null as float) as \n    \n    transferprice\n    \n , \n    cast(null as integer) as \n    \n    unbuildvarianceaccount\n    \n , \n    cast(null as integer) as \n    \n    unitstype\n    \n , \n    cast(null as TEXT) as \n    \n    upccode\n    \n , \n    cast(null as TEXT) as \n    \n    usebins\n    \n , \n    cast(null as TEXT) as \n    \n    usemarginalrates\n    \n , \n    cast(null as TEXT) as \n    \n    vendorname\n    \n , \n    cast(null as integer) as \n    \n    vendreturnvarianceaccount\n    \n , \n    cast(null as TEXT) as \n    \n    vsoedelivered\n    \n , \n    cast(null as TEXT) as \n    \n    vsoepermitdiscount\n    \n , \n    cast(null as TEXT) as \n    \n    vsoesopgroup\n    \n , \n    cast(null as float) as \n    \n    weight\n    \n , \n    cast(null as integer) as \n    \n    weightunit\n    \n , \n    cast(null as TEXT) as \n    \n    weightunits\n    \n , \n    cast(null as integer) as \n    \n    wipacct\n    \n , \n    cast(null as integer) as \n    \n    wipvarianceacct\n    \n , \n    cast(null as TEXT) as \n    \n    yahooproductfeed\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as item_id,\n        fullname as name,\n        itemtype as type_name,\n        description as sales_description,\n        department as department_id,\n        class as class_id,\n        location as location_id,\n        subsidiary as subsidiary_id,\n        assetaccount as asset_account_id,\n        expenseaccount as expense_account_id,\n        gainlossaccount as gain_loss_account_id,\n        incomeaccount as income_account_id,\n        intercoexpenseaccount as interco_expense_account_id,\n        intercoincomeaccount as interco_income_account_id,\n        deferralaccount as deferred_expense_account_id,\n        deferredrevenueaccount as deferred_revenue_account_id,\n        parent as parent_item_id\n\n        --The below macro adds the fields defined within your items_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:34.242262Z", "completed_at": "2024-07-16T23:19:35.498139Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:35.498853Z", "completed_at": "2024-07-16T23:19:35.498860Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.3718938827514648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__locations", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    mainaddress\n    \n as \n    \n    mainaddress\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as location_id,\n        name,\n        fullname as full_name,\n        mainaddress as main_address_id,\n        parent as parent_id,\n        subsidiary as subsidiary_id\n\n        --The below macro adds the fields defined within your locations_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:34.362010Z", "completed_at": "2024-07-16T23:19:35.613625Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:35.615849Z", "completed_at": "2024-07-16T23:19:35.615854Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.3924801349639893, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    mainaddress\n    \n as \n    \n    mainaddress\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    fiscalcalendar\n    \n as \n    \n    fiscalcalendar\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as subsidiary_id,\n        name,\n        fullname as full_name,\n        email as email_address,\n        mainaddress as main_address_id,\n        country,\n        state,\n        fiscalcalendar as fiscal_calendar_id,\n        parent as parent_id,\n        currency as currency_id\n\n        --The below macro adds the fields defined within your subsidiaries_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:34.372344Z", "completed_at": "2024-07-16T23:19:35.614689Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:35.620860Z", "completed_at": "2024-07-16T23:19:35.620865Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.3931171894073486, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    transaction\n    \n as \n    \n    transaction\n    \n, \n    \n    \n    linesequencenumber\n    \n as \n    \n    linesequencenumber\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    entity\n    \n as \n    \n    entity\n    \n, \n    \n    \n    item\n    \n as \n    \n    item\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    isclosed\n    \n as \n    \n    isclosed\n    \n, \n    \n    \n    isbillable\n    \n as \n    \n    isbillable\n    \n, \n    \n    \n    iscogs\n    \n as \n    \n    iscogs\n    \n, \n    \n    \n    cleared\n    \n as \n    \n    cleared\n    \n, \n    \n    \n    commitmentfirm\n    \n as \n    \n    commitmentfirm\n    \n, \n    \n    \n    mainline\n    \n as \n    \n    mainline\n    \n, \n    \n    \n    taxline\n    \n as \n    \n    taxline\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as transaction_line_id,\n        transaction as transaction_id,\n        linesequencenumber as transaction_line_number,\n        memo,\n        entity as entity_id,\n        item as item_id,\n        class as class_id,\n        location as location_id,\n        subsidiary as subsidiary_id,\n        department as department_id,\n        isclosed = 'T' as is_closed,\n        isbillable = 'T' as is_billable,\n        iscogs = 'T' as is_cogs,\n        cleared = 'T' as is_cleared,\n        commitmentfirm = 'T' as is_commitment_firm,\n        mainline = 'T' as is_main_line,\n        taxline = 'T' as is_tax_line\n\n        --The below macro adds the fields defined within your transaction_lines_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:34.366853Z", "completed_at": "2024-07-16T23:19:35.613994Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:35.616079Z", "completed_at": "2024-07-16T23:19:35.616081Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.4037821292877197, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_accounting_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account\n    \n as \n    \n    account\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amountlinked\n    \n as \n    \n    amountlinked\n    \n, \n    \n    \n    amountpaid\n    \n as \n    \n    amountpaid\n    \n, \n    \n    \n    amountunpaid\n    \n as \n    \n    amountunpaid\n    \n, \n    \n    \n    credit\n    \n as \n    \n    credit\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    debit\n    \n as \n    \n    debit\n    \n, \n    \n    \n    exchangerate\n    \n as \n    \n    exchangerate\n    \n, \n    \n    \n    netamount\n    \n as \n    \n    netamount\n    \n, \n    \n    \n    overheadparentitem\n    \n as \n    \n    overheadparentitem\n    \n, \n    \n    \n    paymentamountunused\n    \n as \n    \n    paymentamountunused\n    \n, \n    \n    \n    paymentamountused\n    \n as \n    \n    paymentamountused\n    \n, \n    \n    \n    posting\n    \n as \n    \n    posting\n    \n, \n    \n    \n    transaction\n    \n as \n    \n    transaction\n    \n, \n    \n    \n    transactionline\n    \n as \n    \n    transactionline\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        transaction as transaction_id,\n        transactionline as transaction_line_id,\n        accountingbook as accounting_book_id,\n        account as account_id,\n        posting = 'T' as is_posting,\n        amount,\n        credit as credit_amount,\n        debit as debit_amount,\n        netamount as net_amount,\n        amountpaid as paid_amount,\n        amountunpaid as unpaid_amount\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:35.616311Z", "completed_at": "2024-07-16T23:19:36.626221Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:36.626768Z", "completed_at": "2024-07-16T23:19:36.626781Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1196370124816895, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transactions", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    transactionnumber\n    \n as \n    \n    transactionnumber\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    trandate\n    \n as \n    \n    trandate\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    createddate\n    \n as \n    \n    createddate\n    \n, \n    \n    \n    duedate\n    \n as \n    \n    duedate\n    \n, \n    \n    \n    closedate\n    \n as \n    \n    closedate\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    entity\n    \n as \n    \n    entity\n    \n, \n    \n    \n    postingperiod\n    \n as \n    \n    postingperiod\n    \n, \n    \n    \n    posting\n    \n as \n    \n    posting\n    \n, \n    cast(null as TEXT) as \n    \n    intercoadj\n    \n , \n    \n    \n    isreversal\n    \n as \n    \n    isreversal\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        cast(_fivetran_synced as date) as _fivetran_synced_date,\n        id as transaction_id,\n        transactionnumber as transaction_number,\n        type as transaction_type,\n        memo,\n        trandate as transaction_date,\n        status,\n        createddate as created_at,\n        duedate as due_date_at,\n        closedate as closed_at,\n        currency as currency_id,\n        entity as entity_id,\n        postingperiod as accounting_period_id,\n        posting = 'T' as is_posting,\n        intercoadj = 'T' as is_intercompany_adjustment,\n        isreversal = 'T' as is_reversal\n\n        --The below macro adds the fields defined within your transactions_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:35.783337Z", "completed_at": "2024-07-16T23:19:36.730819Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:36.731353Z", "completed_at": "2024-07-16T23:19:36.731359Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.0599329471588135, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_books", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    accounting_book_extid\n    \n , \n    \n    \n    accounting_book_id\n    \n as \n    \n    accounting_book_id\n    \n, \n    cast(null as TEXT) as \n    \n    accounting_book_name\n    \n , \n    cast(null as float) as \n    \n    base_book_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_created\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as float) as \n    \n    effective_period_id\n    \n , \n    cast(null as TEXT) as \n    \n    form_template_component_id\n    \n , \n    cast(null as float) as \n    \n    form_template_id\n    \n , \n    cast(null as TEXT) as \n    \n    is_adjustment_only\n    \n , \n    cast(null as TEXT) as \n    \n    is_arrangement_level_reclass\n    \n , \n    cast(null as TEXT) as \n    \n    is_consolidated\n    \n , \n    cast(null as TEXT) as \n    \n    is_contingent_revenue_handling\n    \n , \n    cast(null as TEXT) as \n    \n    is_include_child_subsidiaries\n    \n , \n    \n    \n    is_primary\n    \n as \n    \n    is_primary\n    \n, \n    cast(null as TEXT) as \n    \n    is_two_step_revenue_allocation\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    unbilled_receivable_grouping\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        accounting_book_id,\n        is_primary,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:35.766354Z", "completed_at": "2024-07-16T23:19:36.731863Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:36.732303Z", "completed_at": "2024-07-16T23:19:36.732307Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.0758028030395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendor_categories", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    istaxagency\n    \n as \n    \n    istaxagency\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as vendor_category_id,\n        name,\n        _fivetran_synced\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:35.774327Z", "completed_at": "2024-07-16T23:19:36.781032Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:36.781508Z", "completed_at": "2024-07-16T23:19:36.781514Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.123831033706665, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendors", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountnumber\n    \n as \n    \n    accountnumber\n    \n, \n    \n    \n    altemail\n    \n as \n    \n    altemail\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    altphone\n    \n as \n    \n    altphone\n    \n, \n    \n    \n    balance\n    \n as \n    \n    balance\n    \n, \n    \n    \n    balanceprimary\n    \n as \n    \n    balanceprimary\n    \n, \n    cast(null as integer) as \n    \n    billingclass\n    \n , \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    contactlist\n    \n as \n    \n    contactlist\n    \n, \n    \n    \n    creditlimit\n    \n as \n    \n    creditlimit\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    defaultbankaccount\n    \n as \n    \n    defaultbankaccount\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    defaultvendorpaymentaccount\n    \n as \n    \n    defaultvendorpaymentaccount\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    emailpreference\n    \n as \n    \n    emailpreference\n    \n, \n    \n    \n    emailtransactions\n    \n as \n    \n    emailtransactions\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    expenseaccount\n    \n as \n    \n    expenseaccount\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fax\n    \n as \n    \n    fax\n    \n, \n    \n    \n    faxtransactions\n    \n as \n    \n    faxtransactions\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    giveaccess\n    \n as \n    \n    giveaccess\n    \n, \n    \n    \n    homephone\n    \n as \n    \n    homephone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    incoterm\n    \n as \n    \n    incoterm\n    \n, \n    cast(null as TEXT) as \n    \n    isautogeneratedrepresentingentity\n    \n , \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isjobresourcevend\n    \n as \n    \n    isjobresourcevend\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    laborcost\n    \n as \n    \n    laborcost\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    legalname\n    \n as \n    \n    legalname\n    \n, \n    \n    \n    middlename\n    \n as \n    \n    middlename\n    \n, \n    \n    \n    mobilephone\n    \n as \n    \n    mobilephone\n    \n, \n    \n    \n    payablesaccount\n    \n as \n    \n    payablesaccount\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    printoncheckas\n    \n as \n    \n    printoncheckas\n    \n, \n    \n    \n    printtransactions\n    \n as \n    \n    printtransactions\n    \n, \n    \n    \n    purchaseorderamount\n    \n as \n    \n    purchaseorderamount\n    \n, \n    \n    \n    purchaseorderquantity\n    \n as \n    \n    purchaseorderquantity\n    \n, \n    \n    \n    purchaseorderquantitydiff\n    \n as \n    \n    purchaseorderquantitydiff\n    \n, \n    \n    \n    receiptamount\n    \n as \n    \n    receiptamount\n    \n, \n    \n    \n    receiptquantity\n    \n as \n    \n    receiptquantity\n    \n, \n    \n    \n    receiptquantitydiff\n    \n as \n    \n    receiptquantitydiff\n    \n, \n    cast(null as integer) as \n    \n    representingsubsidiary\n    \n , \n    \n    \n    rolesforsearch\n    \n as \n    \n    rolesforsearch\n    \n, \n    \n    \n    salutation\n    \n as \n    \n    salutation\n    \n, \n    \n    \n    subsidiaryedition\n    \n as \n    \n    subsidiaryedition\n    \n, \n    \n    \n    terms\n    \n as \n    \n    terms\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    unbilledorders\n    \n as \n    \n    unbilledorders\n    \n, \n    \n    \n    unbilledordersprimary\n    \n as \n    \n    unbilledordersprimary\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    workcalendar\n    \n as \n    \n    workcalendar\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as vendor_id,\n        companyname as company_name,\n        datecreated as create_date_at,\n        category as vendor_category_id\n\n        --The below macro adds the fields defined within your vendors_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:36.735073Z", "completed_at": "2024-07-16T23:19:37.838029Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:37.838499Z", "completed_at": "2024-07-16T23:19:37.838506Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2115271091461182, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_periods", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    cast(null as TEXT) as \n    \n    closed_accounts_payable\n    \n , \n    cast(null as TEXT) as \n    \n    closed_accounts_receivable\n    \n , \n    cast(null as TEXT) as \n    \n    closed_all\n    \n , \n    cast(null as timestamp) as \n    \n    closed_on\n    \n , \n    cast(null as TEXT) as \n    \n    closed_payroll\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    \n    \n    ending\n    \n as \n    \n    ending\n    \n, \n    \n    \n    fiscal_calendar_id\n    \n as \n    \n    fiscal_calendar_id\n    \n, \n    cast(null as TEXT) as \n    \n    fivetran_index\n    \n , \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    is_adjustment\n    \n as \n    \n    is_adjustment\n    \n, \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    locked_accounts_payable\n    \n , \n    cast(null as TEXT) as \n    \n    locked_accounts_receivable\n    \n , \n    cast(null as TEXT) as \n    \n    locked_all\n    \n , \n    cast(null as TEXT) as \n    \n    locked_payroll\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    \n    \n    quarter\n    \n as \n    \n    quarter\n    \n, \n    \n    \n    starting\n    \n as \n    \n    starting\n    \n, \n    \n    \n    year_0\n    \n as \n    \n    year_0\n    \n, \n    \n    \n    year_id\n    \n as \n    \n    year_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        accounting_period_id,\n        name,\n        full_name,\n        fiscal_calendar_id,\n        year_id,\n        starting as starting_at,\n        ending as ending_at,\n        quarter,\n        year_0,\n        is_adjustment,\n        closed as is_closed,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:36.836666Z", "completed_at": "2024-07-16T23:19:37.923262Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:37.925240Z", "completed_at": "2024-07-16T23:19:37.925252Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.1968119144439697, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    \n    \n    general_rate_type\n    \n as \n    \n    general_rate_type\n    \n, \n    \n    \n    is_balancesheet\n    \n as \n    \n    is_balancesheet\n    \n, \n    \n    \n    is_leftside\n    \n as \n    \n    is_leftside\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    type_name\n    \n as \n    \n    type_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        account_id,\n        parent_id,\n        name,\n        type_name,\n        accountnumber as account_number,\n        general_rate_type,\n        is_leftside,\n        is_balancesheet,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your accounts_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:36.890953Z", "completed_at": "2024-07-16T23:19:37.977316Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:37.977843Z", "completed_at": "2024-07-16T23:19:37.977847Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.20540189743042, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__consolidated_exchange_rates", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accounting_book_id\n    \n as \n    \n    accounting_book_id\n    \n, \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    cast(null as float) as \n    \n    average_budget_rate\n    \n , \n    \n    \n    average_rate\n    \n as \n    \n    average_rate\n    \n, \n    \n    \n    consolidated_exchange_rate_id\n    \n as \n    \n    consolidated_exchange_rate_id\n    \n, \n    cast(null as float) as \n    \n    current_budget_rate\n    \n , \n    \n    \n    current_rate\n    \n as \n    \n    current_rate\n    \n, \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    \n    \n    from_subsidiary_id\n    \n as \n    \n    from_subsidiary_id\n    \n, \n    cast(null as float) as \n    \n    historical_budget_rate\n    \n , \n    \n    \n    historical_rate\n    \n as \n    \n    historical_rate\n    \n, \n    \n    \n    to_subsidiary_id\n    \n as \n    \n    to_subsidiary_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        consolidated_exchange_rate_id,\n        accounting_book_id,\n        accounting_period_id,\n        average_rate,\n        current_rate,\n        historical_rate,\n        from_subsidiary_id,\n        to_subsidiary_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your consolidated_exchange_rates_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:36.883733Z", "completed_at": "2024-07-16T23:19:37.976384Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:37.976871Z", "completed_at": "2024-07-16T23:19:37.976877Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2647688388824463, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__classes", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    class_id\n    \n as \n    \n    class_id\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        class_id,\n        full_name,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your classes_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:38.039142Z", "completed_at": "2024-07-16T23:19:39.022894Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:39.023924Z", "completed_at": "2024-07-16T23:19:39.023930Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.107982873916626, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__customers", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    cast(null as TEXT) as \n    \n    companyname\n    \n , \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    cast(null as TEXT) as \n    \n    customer_extid\n    \n , \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date_first_order\n    \n as \n    \n    date_first_order\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zipcode\n    \n as \n    \n    zipcode\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id,\n        companyname as company_name,\n        customer_extid as customer_external_id,\n        city,\n        state,\n        zipcode,\n        country,\n        date_first_order as date_first_order_at,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your customers_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:37.956637Z", "completed_at": "2024-07-16T23:19:39.021835Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:39.022521Z", "completed_at": "2024-07-16T23:19:39.022531Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.190453052520752, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__currencies", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    currency_extid\n    \n , \n    \n    \n    currency_id\n    \n as \n    \n    currency_id\n    \n, \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    is_inactive\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    precision_0\n    \n , \n    \n    \n    symbol\n    \n as \n    \n    symbol\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        currency_id,\n        name,\n        symbol,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:38.114237Z", "completed_at": "2024-07-16T23:19:39.141405Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:39.143374Z", "completed_at": "2024-07-16T23:19:39.143386Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.1728360652923584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__expense_accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as float) as \n    \n    current_balance\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    desription\n    \n , \n    cast(null as TEXT) as \n    \n    expense_account_extid\n    \n , \n    \n    \n    expense_account_id\n    \n as \n    \n    expense_account_id\n    \n, \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    is_including_child_subs\n    \n , \n    cast(null as TEXT) as \n    \n    is_summary\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        expense_account_id,\n        name,\n        parent_id,\n        account_number,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:38.107519Z", "completed_at": "2024-07-16T23:19:39.141835Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:39.144954Z", "completed_at": "2024-07-16T23:19:39.144962Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.1805341243743896, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__departments", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    department_id\n    \n as \n    \n    department_id\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        department_id,\n        name,\n        full_name,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your departments_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:39.153818Z", "completed_at": "2024-07-16T23:19:40.389168Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:40.390614Z", "completed_at": "2024-07-16T23:19:40.390621Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.3444643020629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    address\n    \n , \n    cast(null as TEXT) as \n    \n    address1\n    \n , \n    cast(null as TEXT) as \n    \n    address2\n    \n , \n    cast(null as float) as \n    \n    base_currency_id\n    \n , \n    cast(null as TEXT) as \n    \n    branch_id\n    \n , \n    cast(null as TEXT) as \n    \n    brn\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    edition\n    \n , \n    cast(null as TEXT) as \n    \n    federal_number\n    \n , \n    \n    \n    fiscal_calendar_id\n    \n as \n    \n    fiscal_calendar_id\n    \n, \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    is_elimination\n    \n , \n    cast(null as TEXT) as \n    \n    is_moss\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive_bool\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    cast(null as float) as \n    \n    moss_nexus_id\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    return_address\n    \n , \n    cast(null as TEXT) as \n    \n    return_address1\n    \n , \n    cast(null as TEXT) as \n    \n    return_address2\n    \n , \n    cast(null as TEXT) as \n    \n    return_city\n    \n , \n    cast(null as TEXT) as \n    \n    return_country\n    \n , \n    cast(null as TEXT) as \n    \n    return_state\n    \n , \n    cast(null as TEXT) as \n    \n    return_zipcode\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address1\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address2\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_city\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_country\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_state\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_zipcode\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    state_tax_number\n    \n , \n    cast(null as float) as \n    \n    subnav__searchable_subsidiary\n    \n , \n    cast(null as TEXT) as \n    \n    subsidiary_extid\n    \n , \n    \n    \n    subsidiary_id\n    \n as \n    \n    subsidiary_id\n    \n, \n    cast(null as float) as \n    \n    taxonomy_reference_id\n    \n , \n    cast(null as TEXT) as \n    \n    tran_num_prefix\n    \n , \n    cast(null as TEXT) as \n    \n    uen\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n , \n    cast(null as TEXT) as \n    \n    zipcode\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        subsidiary_id,\n        fiscal_calendar_id,\n        full_name,\n        name,\n        parent_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your subsidiaries_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:39.148818Z", "completed_at": "2024-07-16T23:19:40.387298Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:40.389542Z", "completed_at": "2024-07-16T23:19:40.389549Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.3525750637054443, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__income_accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as float) as \n    \n    current_balance\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    desription\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    income_account_extid\n    \n , \n    \n    \n    income_account_id\n    \n as \n    \n    income_account_id\n    \n, \n    cast(null as TEXT) as \n    \n    is_including_child_subs\n    \n , \n    cast(null as TEXT) as \n    \n    is_summary\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        income_account_id,\n        name, \n        parent_id,\n        account_number,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:39.299829Z", "completed_at": "2024-07-16T23:19:40.582195Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:40.585592Z", "completed_at": "2024-07-16T23:19:40.585622Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.4015071392059326, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__locations", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        location_id,\n        name,\n        full_name,\n        city,\n        country,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your locations_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:39.294124Z", "completed_at": "2024-07-16T23:19:40.587003Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:40.587540Z", "completed_at": "2024-07-16T23:19:40.587544Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.4041359424591064, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__items", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    allow_drop_ship\n    \n , \n    cast(null as float) as \n    \n    alt_demand_source_item_id\n    \n , \n    cast(null as float) as \n    \n    asset_account_id\n    \n , \n    cast(null as float) as \n    \n    atp_lead_time\n    \n , \n    cast(null as TEXT) as \n    \n    atp_method\n    \n , \n    cast(null as TEXT) as \n    \n    available_to_partners\n    \n , \n    cast(null as TEXT) as \n    \n    avatax_taxcode\n    \n , \n    cast(null as float) as \n    \n    averagecost\n    \n , \n    cast(null as float) as \n    \n    backward_consumption_days\n    \n , \n    cast(null as TEXT) as \n    \n    build_sub_assemblies\n    \n , \n    cast(null as float) as \n    \n    class_id\n    \n , \n    cast(null as float) as \n    \n    code_of_supply_id\n    \n , \n    cast(null as TEXT) as \n    \n    commodity_code\n    \n , \n    cast(null as float) as \n    \n    consumption_unit_id\n    \n , \n    cast(null as float) as \n    \n    cost_0\n    \n , \n    cast(null as TEXT) as \n    \n    cost_category\n    \n , \n    cast(null as TEXT) as \n    \n    cost_estimate_type\n    \n , \n    cast(null as TEXT) as \n    \n    costing_method\n    \n , \n    cast(null as TEXT) as \n    \n    country_of_manufacture\n    \n , \n    cast(null as TEXT) as \n    \n    create_plan_on_event_type\n    \n , \n    cast(null as timestamp) as \n    \n    created\n    \n , \n    cast(null as float) as \n    \n    current_on_order_count\n    \n , \n    cast(null as float) as \n    \n    custreturn_variance_account_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as timestamp) as \n    \n    date_of_last_transaction\n    \n , \n    cast(null as float) as \n    \n    default_return_cost\n    \n , \n    cast(null as float) as \n    \n    deferred_expense_account_id\n    \n , \n    cast(null as float) as \n    \n    deferred_revenue_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    demand_source\n    \n , \n    cast(null as float) as \n    \n    demand_time_fence\n    \n , \n    cast(null as float) as \n    \n    department_id\n    \n , \n    cast(null as TEXT) as \n    \n    deposit\n    \n , \n    cast(null as TEXT) as \n    \n    displayname\n    \n , \n    cast(null as TEXT) as \n    \n    distribution_category\n    \n , \n    cast(null as TEXT) as \n    \n    distribution_network\n    \n , \n    cast(null as float) as \n    \n    dropship_expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    effective_bom_control_type\n    \n , \n    cast(null as float) as \n    \n    expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    featureddescription\n    \n , \n    cast(null as TEXT) as \n    \n    featureditem\n    \n , \n    cast(null as float) as \n    \n    fixed_lot_size\n    \n , \n    cast(null as float) as \n    \n    forward_consumption_days\n    \n , \n    cast(null as TEXT) as \n    \n    fraud_risk\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as float) as \n    \n    fx_adjustment_account_id\n    \n , \n    cast(null as float) as \n    \n    gain_loss_account_id\n    \n , \n    cast(null as float) as \n    \n    handling_cost\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_hazard_class\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_id\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_item_units\n    \n , \n    cast(null as float) as \n    \n    hazmat_item_units_qty\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_packing_group\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_shipping_name\n    \n , \n    cast(null as TEXT) as \n    \n    include_child_subsidiaries\n    \n , \n    cast(null as float) as \n    \n    income_account_id\n    \n , \n    cast(null as float) as \n    \n    interco_expense_account_id\n    \n , \n    cast(null as float) as \n    \n    interco_income_account_id\n    \n , \n    cast(null as float) as \n    \n    invt_count_classification\n    \n , \n    cast(null as float) as \n    \n    invt_count_interval\n    \n , \n    cast(null as TEXT) as \n    \n    is_cont_rev_handling\n    \n , \n    cast(null as TEXT) as \n    \n    is_enforce_min_qty_internally\n    \n , \n    cast(null as TEXT) as \n    \n    is_hold_rev_rec\n    \n , \n    cast(null as TEXT) as \n    \n    is_moss\n    \n , \n    cast(null as TEXT) as \n    \n    is_phantom\n    \n , \n    cast(null as TEXT) as \n    \n    is_special_order_item\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    isonline\n    \n , \n    cast(null as TEXT) as \n    \n    istaxable\n    \n , \n    cast(null as float) as \n    \n    item_defined_cost\n    \n , \n    cast(null as TEXT) as \n    \n    item_extid\n    \n , \n    \n    \n    item_id\n    \n as \n    \n    item_id\n    \n, \n    cast(null as float) as \n    \n    item_image\n    \n , \n    cast(null as TEXT) as \n    \n    item_revenue_category\n    \n , \n    cast(null as float) as \n    \n    item_term_id\n    \n , \n    cast(null as timestamp) as \n    \n    last_cogs_correction\n    \n , \n    cast(null as timestamp) as \n    \n    last_invt_count_date\n    \n , \n    cast(null as float) as \n    \n    last_purchase_price\n    \n , \n    cast(null as float) as \n    \n    location_id\n    \n , \n    cast(null as TEXT) as \n    \n    lot_numbered_item\n    \n , \n    cast(null as TEXT) as \n    \n    lot_sizing_method\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturer\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturing_charge_item\n    \n , \n    cast(null as TEXT) as \n    \n    match_bill_to_receipt\n    \n , \n    cast(null as TEXT) as \n    \n    matrix_type\n    \n , \n    cast(null as float) as \n    \n    maximum_quantity\n    \n , \n    cast(null as float) as \n    \n    minimum_quantity\n    \n , \n    cast(null as timestamp) as \n    \n    modified\n    \n , \n    cast(null as TEXT) as \n    \n    mpn\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    nature_of_transaction_codes_id\n    \n , \n    cast(null as timestamp) as \n    \n    next_invt_count_date\n    \n , \n    cast(null as float) as \n    \n    ng_asset_type_id\n    \n , \n    cast(null as float) as \n    \n    ns_lead_time\n    \n , \n    cast(null as TEXT) as \n    \n    offersupport\n    \n , \n    cast(null as TEXT) as \n    \n    onspecial\n    \n , \n    cast(null as TEXT) as \n    \n    overhead_type\n    \n , \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    cast(null as float) as \n    \n    payment_method_id\n    \n , \n    cast(null as float) as \n    \n    periodic_lot_size_days\n    \n , \n    cast(null as TEXT) as \n    \n    periodic_lot_size_type\n    \n , \n    cast(null as float) as \n    \n    pref_purchase_tax_id\n    \n , \n    cast(null as float) as \n    \n    pref_sale_tax_id\n    \n , \n    cast(null as float) as \n    \n    pref_stock_level\n    \n , \n    cast(null as TEXT) as \n    \n    prices_include_tax\n    \n , \n    cast(null as float) as \n    \n    pricing_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    print_sub_items\n    \n , \n    cast(null as float) as \n    \n    prod_price_var_account_id\n    \n , \n    cast(null as float) as \n    \n    prod_qty_var_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    prompt_payment_discount_item\n    \n , \n    cast(null as float) as \n    \n    purchase_price_var_account_id\n    \n , \n    cast(null as float) as \n    \n    purchase_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    purchasedescription\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as float) as \n    \n    quantityavailable\n    \n , \n    cast(null as float) as \n    \n    quantitybackordered\n    \n , \n    cast(null as float) as \n    \n    quantityonhand\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as float) as \n    \n    reorder_multiple\n    \n , \n    cast(null as float) as \n    \n    reorderpoint\n    \n , \n    cast(null as TEXT) as \n    \n    replenishment_method\n    \n , \n    cast(null as TEXT) as \n    \n    resalable\n    \n , \n    cast(null as float) as \n    \n    reschedule_in_days\n    \n , \n    cast(null as float) as \n    \n    reschedule_out_days\n    \n , \n    cast(null as float) as \n    \n    rev_rec_forecast_rule_id\n    \n , \n    cast(null as float) as \n    \n    rev_rec_rule_id\n    \n , \n    cast(null as TEXT) as \n    \n    revenue_allocation_group\n    \n , \n    cast(null as TEXT) as \n    \n    round_up_as_component\n    \n , \n    cast(null as float) as \n    \n    safety_stock_days\n    \n , \n    cast(null as float) as \n    \n    safety_stock_level\n    \n , \n    cast(null as float) as \n    \n    sale_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    salesdescription\n    \n , \n    cast(null as TEXT) as \n    \n    salesforce_id\n    \n , \n    cast(null as TEXT) as \n    \n    salesprice\n    \n , \n    cast(null as float) as \n    \n    scrap_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    serialized_item\n    \n , \n    cast(null as float) as \n    \n    shippingcost\n    \n , \n    cast(null as TEXT) as \n    \n    special_work_order_item\n    \n , \n    cast(null as TEXT) as \n    \n    specialsdescription\n    \n , \n    cast(null as float) as \n    \n    stock_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    storedescription\n    \n , \n    cast(null as TEXT) as \n    \n    storedetaileddescription\n    \n , \n    cast(null as TEXT) as \n    \n    storedisplayname\n    \n , \n    cast(null as TEXT) as \n    \n    subtype\n    \n , \n    cast(null as TEXT) as \n    \n    supplementary_unit__abberviat\n    \n , \n    cast(null as float) as \n    \n    supplementary_unit_id\n    \n , \n    cast(null as float) as \n    \n    supply_time_fence\n    \n , \n    cast(null as TEXT) as \n    \n    supply_type\n    \n , \n    cast(null as float) as \n    \n    tax_item_id\n    \n , \n    cast(null as float) as \n    \n    totalvalue\n    \n , \n    cast(null as float) as \n    \n    transferprice\n    \n , \n    \n    \n    type_name\n    \n as \n    \n    type_name\n    \n, \n    cast(null as float) as \n    \n    type_of_goods_id\n    \n , \n    cast(null as TEXT) as \n    \n    udf1\n    \n , \n    cast(null as TEXT) as \n    \n    udf2\n    \n , \n    cast(null as TEXT) as \n    \n    un_number\n    \n , \n    cast(null as float) as \n    \n    unbuild_variance_account_id\n    \n , \n    cast(null as float) as \n    \n    units_type_id\n    \n , \n    cast(null as TEXT) as \n    \n    upc_code\n    \n , \n    cast(null as TEXT) as \n    \n    use_component_yield\n    \n , \n    cast(null as float) as \n    \n    vendor_id\n    \n , \n    cast(null as TEXT) as \n    \n    vendorname\n    \n , \n    cast(null as float) as \n    \n    vendreturn_variance_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_deferral\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_delivered\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_discount\n    \n , \n    cast(null as float) as \n    \n    vsoe_price\n    \n , \n    cast(null as float) as \n    \n    weight\n    \n , \n    cast(null as float) as \n    \n    weight_in_user_defined_unit\n    \n , \n    cast(null as float) as \n    \n    weight_unit_index\n    \n , \n    cast(null as float) as \n    \n    wip_account_id\n    \n , \n    cast(null as float) as \n    \n    wip_cost_variance_account_id\n    \n , \n    cast(null as float) as \n    \n    work_order_lead_time\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        item_id,\n        name,\n        type_name,\n        salesdescription as sales_description,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your items_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:40.501280Z", "completed_at": "2024-07-16T23:19:41.667998Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.668486Z", "completed_at": "2024-07-16T23:19:41.668489Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.3279829025268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendors", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_owner\n    \n , \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    cast(null as TEXT) as \n    \n    accounts_email\n    \n , \n    cast(null as float) as \n    \n    annual_revenue\n    \n , \n    cast(null as TEXT) as \n    \n    auto_renewals\n    \n , \n    cast(null as TEXT) as \n    \n    auto_send_statements\n    \n , \n    cast(null as TEXT) as \n    \n    billaddress\n    \n , \n    cast(null as float) as \n    \n    billing_class_id\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as TEXT) as \n    \n    companyname\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    \n    \n    create_date\n    \n as \n    \n    create_date\n    \n, \n    cast(null as float) as \n    \n    creditlimit\n    \n , \n    cast(null as float) as \n    \n    currency_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    dic\n    \n , \n    cast(null as TEXT) as \n    \n    email\n    \n , \n    cast(null as TEXT) as \n    \n    email_bill_payment_vouchers\n    \n , \n    cast(null as TEXT) as \n    \n    email_cash_sales\n    \n , \n    cast(null as TEXT) as \n    \n    email_credit_notes\n    \n , \n    cast(null as TEXT) as \n    \n    email_invoices\n    \n , \n    cast(null as TEXT) as \n    \n    email_item_fulfilments\n    \n , \n    cast(null as TEXT) as \n    \n    email_purchase_orders\n    \n , \n    cast(null as TEXT) as \n    \n    email_quotes\n    \n , \n    cast(null as TEXT) as \n    \n    email_sales_orders\n    \n , \n    cast(null as TEXT) as \n    \n    email_statements\n    \n , \n    cast(null as TEXT) as \n    \n    employee_number\n    \n , \n    cast(null as TEXT) as \n    \n    exemption_certificate_no\n    \n , \n    cast(null as float) as \n    \n    expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    fax\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    home_phone\n    \n , \n    cast(null as TEXT) as \n    \n    hris_id\n    \n , \n    cast(null as TEXT) as \n    \n    ico\n    \n , \n    cast(null as TEXT) as \n    \n    id_number_in_the_country_of_r\n    \n , \n    cast(null as float) as \n    \n    id_type_in_the_country_of_r_id\n    \n , \n    cast(null as float) as \n    \n    in_transit_balance\n    \n , \n    cast(null as TEXT) as \n    \n    incoterm\n    \n , \n    cast(null as float) as \n    \n    industry_id\n    \n , \n    cast(null as TEXT) as \n    \n    invoice_via_procurement_syste\n    \n , \n    cast(null as TEXT) as \n    \n    invoicing_details\n    \n , \n    cast(null as TEXT) as \n    \n    is1099eligible\n    \n , \n    cast(null as TEXT) as \n    \n    is_partner\n    \n , \n    cast(null as TEXT) as \n    \n    is_person\n    \n , \n    cast(null as TEXT) as \n    \n    isemailhtml\n    \n , \n    cast(null as TEXT) as \n    \n    isemailpdf\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as float) as \n    \n    labor_cost\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_date\n    \n , \n    cast(null as timestamp) as \n    \n    last_sales_activity\n    \n , \n    cast(null as TEXT) as \n    \n    line1\n    \n , \n    cast(null as TEXT) as \n    \n    line2\n    \n , \n    cast(null as TEXT) as \n    \n    line3\n    \n , \n    cast(null as TEXT) as \n    \n    loginaccess\n    \n , \n    cast(null as TEXT) as \n    \n    lsa_link\n    \n , \n    cast(null as TEXT) as \n    \n    lsa_link_name\n    \n , \n    cast(null as TEXT) as \n    \n    mobile_phone\n    \n , \n    cast(null as timestamp) as \n    \n    msa_effective_date\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as float) as \n    \n    no__of_employees\n    \n , \n    cast(null as float) as \n    \n    openbalance\n    \n , \n    cast(null as float) as \n    \n    openbalance_foreign\n    \n , \n    cast(null as float) as \n    \n    payables_account_id\n    \n , \n    cast(null as float) as \n    \n    payment_terms_id\n    \n , \n    cast(null as TEXT) as \n    \n    phone\n    \n , \n    cast(null as float) as \n    \n    prepayment_balance\n    \n , \n    cast(null as TEXT) as \n    \n    printoncheckas\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    purchases_email\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as float) as \n    \n    represents_subsidiary_id\n    \n , \n    cast(null as TEXT) as \n    \n    restrict_access_to_expensify\n    \n , \n    cast(null as TEXT) as \n    \n    salesforce_id\n    \n , \n    cast(null as TEXT) as \n    \n    shipaddress\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_email\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as float) as \n    \n    subsidiary\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_first_name\n    \n , \n    cast(null as float) as \n    \n    tax_contact_id\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_last_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_middle_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number\n    \n , \n    cast(null as TEXT) as \n    \n    taxidnum\n    \n , \n    cast(null as float) as \n    \n    time_approver_id\n    \n , \n    cast(null as TEXT) as \n    \n    transactions_need_approval\n    \n , \n    cast(null as TEXT) as \n    \n    uen\n    \n , \n    cast(null as float) as \n    \n    unbilled_orders\n    \n , \n    cast(null as float) as \n    \n    unbilled_orders_foreign\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n , \n    cast(null as TEXT) as \n    \n    vat_registration_no\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_extid\n    \n , \n    \n    \n    vendor_id\n    \n as \n    \n    vendor_id\n    \n, \n    \n    \n    vendor_type_id\n    \n as \n    \n    vendor_type_id\n    \n, \n    cast(null as TEXT) as \n    \n    zipcode\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        vendor_id,\n        companyname as company_name,\n        create_date as create_date_at,\n        vendor_type_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your vendors_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:40.493755Z", "completed_at": "2024-07-16T23:19:41.666887Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.667540Z", "completed_at": "2024-07-16T23:19:41.667547Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.3366408348083496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transaction_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    class_id\n    \n as \n    \n    class_id\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n, \n    \n    \n    department_id\n    \n as \n    \n    department_id\n    \n, \n    \n    \n    item_id\n    \n as \n    \n    item_id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    non_posting_line\n    \n as \n    \n    non_posting_line\n    \n, \n    \n    \n    subsidiary_id\n    \n as \n    \n    subsidiary_id\n    \n, \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    transaction_line_id\n    \n as \n    \n    transaction_line_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        transaction_id,\n        transaction_line_id,\n        subsidiary_id,\n        account_id,\n        company_id,\n        item_id,\n        amount,\n        non_posting_line,\n        class_id,\n        location_id,\n        department_id,\n        memo\n\n        --The below macro adds the fields defined within your transaction_lines_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.831640Z", "completed_at": "2024-07-16T23:19:41.843930Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.844658Z", "completed_at": "2024-07-16T23:19:41.844663Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015493154525756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_period_fiscal_cal__fivetran_id.ec8750b679", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.839660Z", "completed_at": "2024-07-16T23:19:41.844394Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.845621Z", "completed_at": "2024-07-16T23:19:41.845624Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015009164810180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_period_fiscal_cal__fivetran_id.d2038de348", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.847689Z", "completed_at": "2024-07-16T23:19:41.895457Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.896197Z", "completed_at": "2024-07-16T23:19:41.896210Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.050887107849121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__account_types_account_type_id.20889967ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_type_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types\"\nwhere account_type_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.850816Z", "completed_at": "2024-07-16T23:19:41.898464Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.899727Z", "completed_at": "2024-07-16T23:19:41.899731Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05613279342651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__account_types_account_type_id.aaea9bec0f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_type_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__account_types\"\nwhere account_type_id is not null\ngroup by account_type_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.899965Z", "completed_at": "2024-07-16T23:19:41.905204Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.908915Z", "completed_at": "2024-07-16T23:19:41.908922Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010609865188598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_book_subsidiaries__fivetran_id.76e6e71411", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.905477Z", "completed_at": "2024-07-16T23:19:41.910482Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.914045Z", "completed_at": "2024-07-16T23:19:41.914051Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010210990905761719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_book_subsidiaries__fivetran_id.27ddb08396", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.911227Z", "completed_at": "2024-07-16T23:19:41.915557Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.919109Z", "completed_at": "2024-07-16T23:19:41.919115Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009595870971679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_books_accounting_book_id.1b7504d30e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_book_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books\"\nwhere accounting_book_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.916279Z", "completed_at": "2024-07-16T23:19:41.920467Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.921593Z", "completed_at": "2024-07-16T23:19:41.921598Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010806083679199219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_books_accounting_book_id.70d96d1230", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_book_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_books\"\nwhere accounting_book_id is not null\ngroup by accounting_book_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.921852Z", "completed_at": "2024-07-16T23:19:41.927374Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.930845Z", "completed_at": "2024-07-16T23:19:41.930855Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010573148727416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__classes_class_id.799b01ffba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect class_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes\"\nwhere class_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.927684Z", "completed_at": "2024-07-16T23:19:41.931849Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.932834Z", "completed_at": "2024-07-16T23:19:41.932838Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009239912033081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__classes_class_id.d069e30c98", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    class_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__classes\"\nwhere class_id is not null\ngroup by class_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.933090Z", "completed_at": "2024-07-16T23:19:41.939892Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.940584Z", "completed_at": "2024-07-16T23:19:41.940590Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009054183959960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounts_account_id.5a542e47a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.937209Z", "completed_at": "2024-07-16T23:19:41.941425Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.942749Z", "completed_at": "2024-07-16T23:19:41.942753Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006737947463989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounts_account_id.23a63b3e17", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounts\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.943696Z", "completed_at": "2024-07-16T23:19:41.951167Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.951710Z", "completed_at": "2024-07-16T23:19:41.951719Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009803056716918945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_periods_accounting_period_id.f2db2c547c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_period_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods\"\nwhere accounting_period_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.947504Z", "completed_at": "2024-07-16T23:19:41.952626Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.953638Z", "completed_at": "2024-07-16T23:19:41.953641Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009890079498291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__consolidated_exchange_rates_consolidated_exchange_rate_id.09703507c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect consolidated_exchange_rate_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:40.695852Z", "completed_at": "2024-07-16T23:19:41.830997Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.839383Z", "completed_at": "2024-07-16T23:19:41.839390Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.2633929252624512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transactions", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    \n    \n    currency_id\n    \n as \n    \n    currency_id\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    is_advanced_intercompany\n    \n as \n    \n    is_advanced_intercompany\n    \n, \n    \n    \n    is_intercompany\n    \n as \n    \n    is_intercompany\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    cast(null as timestamp) as \n    \n    trandate\n    \n , \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    transaction_type\n    \n as \n    \n    transaction_type\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        transaction_id,\n        status,\n        trandate as transaction_date,\n        currency_id,\n        accounting_period_id,\n        due_date as due_date_at,\n        transaction_type,\n        is_intercompany,\n        is_advanced_intercompany,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your transactions_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.953867Z", "completed_at": "2024-07-16T23:19:41.958242Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.962284Z", "completed_at": "2024-07-16T23:19:41.962288Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010052919387817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_periods_accounting_period_id.a9d8f4c6e1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_period_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__accounting_periods\"\nwhere accounting_period_id is not null\ngroup by accounting_period_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.959525Z", "completed_at": "2024-07-16T23:19:41.966496Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.972478Z", "completed_at": "2024-07-16T23:19:41.972482Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018507003784179688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__consolidated_exchange_rates_consolidated_exchange_rate_id.2d4725bb7a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    consolidated_exchange_rate_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is not null\ngroup by consolidated_exchange_rate_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.963464Z", "completed_at": "2024-07-16T23:19:41.971995Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.976769Z", "completed_at": "2024-07-16T23:19:41.976774Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018624067306518555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__customers_customer_id.65a5ae302a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.973135Z", "completed_at": "2024-07-16T23:19:41.978341Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.980127Z", "completed_at": "2024-07-16T23:19:41.980130Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01333308219909668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__customers_customer_id.05ca0360f2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.980353Z", "completed_at": "2024-07-16T23:19:41.988722Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.993278Z", "completed_at": "2024-07-16T23:19:41.993286Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01552891731262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__entities_entity_id.f22c18cfa2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect entity_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities\"\nwhere entity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.985005Z", "completed_at": "2024-07-16T23:19:41.989423Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.993613Z", "completed_at": "2024-07-16T23:19:41.993617Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014853954315185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__entities_entity_id.f9acd04f50", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    entity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__entities\"\nwhere entity_id is not null\ngroup by entity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.990100Z", "completed_at": "2024-07-16T23:19:41.994888Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.996546Z", "completed_at": "2024-07-16T23:19:41.996550Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009217977523803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__departments_department_id.7395bbfe71", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect department_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments\"\nwhere department_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:41.997636Z", "completed_at": "2024-07-16T23:19:42.008613Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.009995Z", "completed_at": "2024-07-16T23:19:42.010003Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0150909423828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__departments_department_id.13e4897f0b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    department_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__departments\"\nwhere department_id is not null\ngroup by department_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.000512Z", "completed_at": "2024-07-16T23:19:42.008869Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.010243Z", "completed_at": "2024-07-16T23:19:42.010247Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015219926834106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__currencies_currency_id.7eff9f9c1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect currency_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies\"\nwhere currency_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.004385Z", "completed_at": "2024-07-16T23:19:42.009737Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.011733Z", "completed_at": "2024-07-16T23:19:42.011736Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009166717529296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__currencies_currency_id.50d9c37c78", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    currency_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__currencies\"\nwhere currency_id is not null\ngroup by currency_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.017406Z", "completed_at": "2024-07-16T23:19:42.023719Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.025044Z", "completed_at": "2024-07-16T23:19:42.025051Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012686014175415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__jobs_job_id.c294ea849c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    job_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs\"\nwhere job_id is not null\ngroup by job_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.014619Z", "completed_at": "2024-07-16T23:19:42.023993Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.025513Z", "completed_at": "2024-07-16T23:19:42.025516Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013770818710327148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__jobs_job_id.d7b5b06b33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect job_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__jobs\"\nwhere job_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.020750Z", "completed_at": "2024-07-16T23:19:42.024529Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.026300Z", "completed_at": "2024-07-16T23:19:42.026304Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013265848159790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__items_item_id.e216b5b06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items\"\nwhere item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.030060Z", "completed_at": "2024-07-16T23:19:42.039325Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.039865Z", "completed_at": "2024-07-16T23:19:42.039871Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012354850769042969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__items_item_id.3fcafd9eee", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__items\"\nwhere item_id is not null\ngroup by item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.033167Z", "completed_at": "2024-07-16T23:19:42.040134Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.041835Z", "completed_at": "2024-07-16T23:19:42.041839Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013962030410766602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__locations_location_id.c335a5985e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations\"\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.036665Z", "completed_at": "2024-07-16T23:19:42.040916Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.042421Z", "completed_at": "2024-07-16T23:19:42.042424Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014043092727661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__locations_location_id.f1469a5149", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.043991Z", "completed_at": "2024-07-16T23:19:42.048293Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.057072Z", "completed_at": "2024-07-16T23:19:42.057083Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01558685302734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__subsidiaries_subsidiary_id.0ab6516626", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subsidiary_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries\"\nwhere subsidiary_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.051350Z", "completed_at": "2024-07-16T23:19:42.062832Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.063299Z", "completed_at": "2024-07-16T23:19:42.063303Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01630687713623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite2__transaction_lines_transaction_id__transaction_line_id.07b823514f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id\n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines\"\n    group by transaction_id, transaction_line_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.048731Z", "completed_at": "2024-07-16T23:19:42.064192Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.065651Z", "completed_at": "2024-07-16T23:19:42.065659Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022131919860839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__subsidiaries_subsidiary_id.8edc974229", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    subsidiary_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__subsidiaries\"\nwhere subsidiary_id is not null\ngroup by subsidiary_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.058742Z", "completed_at": "2024-07-16T23:19:42.065105Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.069436Z", "completed_at": "2024-07-16T23:19:42.069443Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011988162994384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_lines_transaction_id.267b150890", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.066129Z", "completed_at": "2024-07-16T23:19:42.071067Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.075475Z", "completed_at": "2024-07-16T23:19:42.075480Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014057397842407227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_lines_transaction_line_id.a82e70adc1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.072119Z", "completed_at": "2024-07-16T23:19:42.079229Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.080627Z", "completed_at": "2024-07-16T23:19:42.080631Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014065980911254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite2__transaction_accounting_lines_transaction_id__transaction_line_id__accounting_book_id.ac47a8ecc1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id, accounting_book_id\n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\n    group by transaction_id, transaction_line_id, accounting_book_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.075765Z", "completed_at": "2024-07-16T23:19:42.080105Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.084985Z", "completed_at": "2024-07-16T23:19:42.084990Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01423788070678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_accounting_lines_transaction_id.f28afbfa25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.081099Z", "completed_at": "2024-07-16T23:19:42.086516Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.091853Z", "completed_at": "2024-07-16T23:19:42.091859Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013296127319335938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_accounting_lines_transaction_line_id.0f72869807", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:40.700600Z", "completed_at": "2024-07-16T23:19:41.972904Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:41.978114Z", "completed_at": "2024-07-16T23:19:41.978121Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.4019908905029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendor_types", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_type_extid\n    \n , \n    \n    \n    vendor_type_id\n    \n as \n    \n    vendor_type_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        vendor_type_id,\n        name,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.088049Z", "completed_at": "2024-07-16T23:19:42.096454Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.098887Z", "completed_at": "2024-07-16T23:19:42.098892Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016911029815673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transactions_transaction_id.b4f6c6a72b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.093355Z", "completed_at": "2024-07-16T23:19:42.098338Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.103656Z", "completed_at": "2024-07-16T23:19:42.103661Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01971602439880371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__transactions_transaction_id.af3d15dce4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__transactions\"\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.099699Z", "completed_at": "2024-07-16T23:19:42.108443Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.113449Z", "completed_at": "2024-07-16T23:19:42.113456Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02050018310546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_books_accounting_book_id.12972ee6fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_book_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books\"\nwhere accounting_book_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.104350Z", "completed_at": "2024-07-16T23:19:42.109301Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.117352Z", "completed_at": "2024-07-16T23:19:42.117360Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01954197883605957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__accounting_books_accounting_book_id.22e0106417", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_book_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_books\"\nwhere accounting_book_id is not null\ngroup by accounting_book_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.109762Z", "completed_at": "2024-07-16T23:19:42.118246Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.120653Z", "completed_at": "2024-07-16T23:19:42.120660Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014178037643432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__vendor_categories_vendor_category_id.60acd9acb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_category_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories\"\nwhere vendor_category_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.113772Z", "completed_at": "2024-07-16T23:19:42.119313Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.121499Z", "completed_at": "2024-07-16T23:19:42.121503Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0167999267578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__vendor_categories_vendor_category_id.874da088c6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_category_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendor_categories\"\nwhere vendor_category_id is not null\ngroup by vendor_category_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.122516Z", "completed_at": "2024-07-16T23:19:42.130178Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.135397Z", "completed_at": "2024-07-16T23:19:42.135403Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018879175186157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__vendors_vendor_id.777b758daf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors\"\nwhere vendor_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.126316Z", "completed_at": "2024-07-16T23:19:42.131043Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.138458Z", "completed_at": "2024-07-16T23:19:42.138463Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018553972244262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__vendors_vendor_id.415829ac1d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite2__vendors\"\nwhere vendor_id is not null\ngroup by vendor_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.131714Z", "completed_at": "2024-07-16T23:19:42.139715Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.141935Z", "completed_at": "2024-07-16T23:19:42.141939Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013231992721557617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite__accounting_periods_accounting_period_id__fiscal_calendar_id.43005ecb69", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        accounting_period_id, fiscal_calendar_id\n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods\"\n    group by accounting_period_id, fiscal_calendar_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.135643Z", "completed_at": "2024-07-16T23:19:42.140536Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.142540Z", "completed_at": "2024-07-16T23:19:42.142543Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019334793090820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_periods_accounting_period_id.5c1c46821c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_period_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods\"\nwhere accounting_period_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.147017Z", "completed_at": "2024-07-16T23:19:42.151394Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.157773Z", "completed_at": "2024-07-16T23:19:42.157782Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017164945602416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounts_account_id.f03cddbace", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.143254Z", "completed_at": "2024-07-16T23:19:42.151789Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.158077Z", "completed_at": "2024-07-16T23:19:42.158080Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018230676651000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_periods_fiscal_calendar_id.8d75190563", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fiscal_calendar_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounting_periods\"\nwhere fiscal_calendar_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.152423Z", "completed_at": "2024-07-16T23:19:42.158852Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.161006Z", "completed_at": "2024-07-16T23:19:42.161008Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011584997177124023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__accounts_account_id.e94563d281", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__accounts\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.155141Z", "completed_at": "2024-07-16T23:19:42.159538Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.161550Z", "completed_at": "2024-07-16T23:19:42.161553Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01186680793762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__consolidated_exchange_rates_consolidated_exchange_rate_id.83de8c8e97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect consolidated_exchange_rate_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.163195Z", "completed_at": "2024-07-16T23:19:42.170967Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.178144Z", "completed_at": "2024-07-16T23:19:42.178151Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018406152725219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__consolidated_exchange_rates_consolidated_exchange_rate_id.2ca94ecb54", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    consolidated_exchange_rate_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is not null\ngroup by consolidated_exchange_rate_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.166231Z", "completed_at": "2024-07-16T23:19:42.171493Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.178488Z", "completed_at": "2024-07-16T23:19:42.178492Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018707990646362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__classes_class_id.462bfda765", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect class_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes\"\nwhere class_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.172217Z", "completed_at": "2024-07-16T23:19:42.179431Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.181818Z", "completed_at": "2024-07-16T23:19:42.181822Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012897014617919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__classes_class_id.c63c54840b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    class_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__classes\"\nwhere class_id is not null\ngroup by class_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.175504Z", "completed_at": "2024-07-16T23:19:42.180259Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.182396Z", "completed_at": "2024-07-16T23:19:42.182399Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013081789016723633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__customers_customer_id.bbb9eed2dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.183899Z", "completed_at": "2024-07-16T23:19:42.192151Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.200258Z", "completed_at": "2024-07-16T23:19:42.200268Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01972198486328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__customers_customer_id.7c9debe8d9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.187121Z", "completed_at": "2024-07-16T23:19:42.192427Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.200594Z", "completed_at": "2024-07-16T23:19:42.200598Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019902944564819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__currencies_currency_id.e8b331ffb3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect currency_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies\"\nwhere currency_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.192884Z", "completed_at": "2024-07-16T23:19:42.201487Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.203830Z", "completed_at": "2024-07-16T23:19:42.203835Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014024734497070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__currencies_currency_id.09ab867f2c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    currency_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__currencies\"\nwhere currency_id is not null\ngroup by currency_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.197425Z", "completed_at": "2024-07-16T23:19:42.202507Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.204667Z", "completed_at": "2024-07-16T23:19:42.204670Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01725482940673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__departments_department_id.6d96b00002", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect department_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments\"\nwhere department_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.205572Z", "completed_at": "2024-07-16T23:19:42.213313Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.217739Z", "completed_at": "2024-07-16T23:19:42.217745Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01889801025390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__expense_accounts_expense_account_id.4de138ed23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect expense_account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts\"\nwhere expense_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.209528Z", "completed_at": "2024-07-16T23:19:42.214461Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.222538Z", "completed_at": "2024-07-16T23:19:42.222543Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019675016403198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__departments_department_id.2df16a9aa1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    department_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__departments\"\nwhere department_id is not null\ngroup by department_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.214910Z", "completed_at": "2024-07-16T23:19:42.223259Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.225856Z", "completed_at": "2024-07-16T23:19:42.225862Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016961097717285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__expense_accounts_expense_account_id.5e813830ff", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    expense_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__expense_accounts\"\nwhere expense_account_id is not null\ngroup by expense_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.218225Z", "completed_at": "2024-07-16T23:19:42.224415Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.229401Z", "completed_at": "2024-07-16T23:19:42.229407Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0170443058013916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__subsidiaries_subsidiary_id.9aa9c2d015", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subsidiary_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries\"\nwhere subsidiary_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.226574Z", "completed_at": "2024-07-16T23:19:42.233773Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.235984Z", "completed_at": "2024-07-16T23:19:42.235991Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01556086540222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__subsidiaries_subsidiary_id.7d0dfe64f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    subsidiary_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__subsidiaries\"\nwhere subsidiary_id is not null\ngroup by subsidiary_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.231225Z", "completed_at": "2024-07-16T23:19:42.235448Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.242552Z", "completed_at": "2024-07-16T23:19:42.242556Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01721811294555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__income_accounts_income_account_id.a38311d5f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect income_account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts\"\nwhere income_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.236669Z", "completed_at": "2024-07-16T23:19:42.243660Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.245779Z", "completed_at": "2024-07-16T23:19:42.245784Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016459941864013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__income_accounts_income_account_id.28b4166a07", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    income_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__income_accounts\"\nwhere income_account_id is not null\ngroup by income_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.239978Z", "completed_at": "2024-07-16T23:19:42.244520Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.250311Z", "completed_at": "2024-07-16T23:19:42.250317Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019102096557617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__locations_location_id.9f68ecaa6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations\"\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.246093Z", "completed_at": "2024-07-16T23:19:42.254858Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.257073Z", "completed_at": "2024-07-16T23:19:42.257076Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016827106475830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__locations_location_id.3857e2cac2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.251097Z", "completed_at": "2024-07-16T23:19:42.255825Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.260272Z", "completed_at": "2024-07-16T23:19:42.260276Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018754005432128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__items_item_id.ba322d7da3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items\"\nwhere item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.257497Z", "completed_at": "2024-07-16T23:19:42.264697Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.266765Z", "completed_at": "2024-07-16T23:19:42.266768Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015155792236328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__items_item_id.760a674654", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__items\"\nwhere item_id is not null\ngroup by item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.261044Z", "completed_at": "2024-07-16T23:19:42.265548Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.270175Z", "completed_at": "2024-07-16T23:19:42.270180Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01856517791748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__vendors_vendor_id.15978cc531", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors\"\nwhere vendor_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.267194Z", "completed_at": "2024-07-16T23:19:42.275486Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.277462Z", "completed_at": "2024-07-16T23:19:42.277466Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015793323516845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__vendors_vendor_id.a981580d39", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendors\"\nwhere vendor_id is not null\ngroup by vendor_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.270911Z", "completed_at": "2024-07-16T23:19:42.276295Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.280577Z", "completed_at": "2024-07-16T23:19:42.280581Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0180208683013916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite__transaction_lines_transaction_id__transaction_line_id.651bc3120d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id\n    from \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines\"\n    group by transaction_id, transaction_line_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.277870Z", "completed_at": "2024-07-16T23:19:42.284693Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.286836Z", "completed_at": "2024-07-16T23:19:42.286841Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014541149139404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transaction_lines_transaction_id.e8055d67bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.281294Z", "completed_at": "2024-07-16T23:19:42.285959Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.290929Z", "completed_at": "2024-07-16T23:19:42.290934Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017954111099243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transaction_lines_transaction_line_id.420bd8637c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transaction_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.287611Z", "completed_at": "2024-07-16T23:19:42.295492Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.301116Z", "completed_at": "2024-07-16T23:19:42.301121Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016804933547973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transactions_transaction_id.9439fe1532", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.291203Z", "completed_at": "2024-07-16T23:19:42.296351Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.301613Z", "completed_at": "2024-07-16T23:19:42.301616Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019273996353149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__transactions_transaction_id.fd6bd3af79", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__transactions\"\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.297179Z", "completed_at": "2024-07-16T23:19:42.305759Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.306487Z", "completed_at": "2024-07-16T23:19:42.306491Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011819124221801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__vendor_types_vendor_type_id.faed6fe0e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_type_id\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types\"\nwhere vendor_type_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-16T23:19:42.302416Z", "completed_at": "2024-07-16T23:19:42.307237Z"}, {"name": "execute", "started_at": "2024-07-16T23:19:42.307698Z", "completed_at": "2024-07-16T23:19:42.307701Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011275053024291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__vendor_types_vendor_type_id.6ba4f59b69", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_type_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_3_netsuite_source\".\"stg_netsuite__vendor_types\"\nwhere vendor_type_id is not null\ngroup by vendor_type_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 17.7011079788208, "args": {"favor_state": false, "project_dir": "/Users/avinash.kunnath/Documents/dbt_packages/netsuite/dbt_netsuite_source_clone/integration_tests", "profiles_dir": "/Users/avinash.kunnath/.dbt", "use_colors_file": true, "log_level_file": "debug", "warn_error_options": {"include": [], "exclude": []}, "printer_width": 80, "cache_selected_only": false, "macro_debugging": false, "show_resource_report": false, "vars": {}, "send_anonymous_usage_stats": true, "partial_parse": true, "use_colors": true, "compile": true, "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "target": "postgres", "static_parser": true, "indirect_selection": "eager", "exclude": [], "which": "generate", "print": true, "introspect": true, "log_format": "default", "defer": false, "write_json": true, "empty_catalog": false, "log_level": "info", "log_path": "/Users/avinash.kunnath/Documents/dbt_packages/netsuite/dbt_netsuite_source_clone/integration_tests/logs", "version_check": true, "invocation_command": "dbt docs generate -t postgres", "log_format_file": "debug", "populate_cache": true, "require_explicit_package_overrides_for_builtin_materializations": false, "select": [], "static": false, "quiet": false, "strict_mode": false, "enable_legacy_logger": false}}