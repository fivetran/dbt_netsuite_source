{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-09-16T09:21:20.778190Z", "invocation_id": "15539daf-9c4d-463c-b844-73d564769f65", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.117264Z", "completed_at": "2024-09-16T09:21:06.133991Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.136826Z", "completed_at": "2024-09-16T09:21:06.136897Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02338695526123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__account_types_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_account_type_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__account_types_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.122592Z", "completed_at": "2024-09-16T09:21:06.134471Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.137157Z", "completed_at": "2024-09-16T09:21:06.137160Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02316427230834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_books_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_accounting_book_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_books_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.120004Z", "completed_at": "2024-09-16T09:21:06.134885Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.137430Z", "completed_at": "2024-09-16T09:21:06.137433Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024173974990844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_book_subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_accounting_book_sub_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.127393Z", "completed_at": "2024-09-16T09:21:06.135394Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.137699Z", "completed_at": "2024-09-16T09:21:06.137703Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02393317222595215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_period_fiscal_cal_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_accounting_period_fiscal_cal_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.144845Z", "completed_at": "2024-09-16T09:21:06.156989Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.158841Z", "completed_at": "2024-09-16T09:21:06.158850Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0181121826171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_periods_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_accounting_period_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_periods_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.147865Z", "completed_at": "2024-09-16T09:21:06.157348Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.159361Z", "completed_at": "2024-09-16T09:21:06.159365Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01789402961730957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounts_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_account_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.150362Z", "completed_at": "2024-09-16T09:21:06.157954Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.160381Z", "completed_at": "2024-09-16T09:21:06.160385Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018941879272460938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__classes_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_classification_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__classes_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.153275Z", "completed_at": "2024-09-16T09:21:06.158524Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.161320Z", "completed_at": "2024-09-16T09:21:06.161326Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01962900161743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__consolidated_exchange_rates_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_consolidated_exchange_rate_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.166407Z", "completed_at": "2024-09-16T09:21:06.179219Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.181164Z", "completed_at": "2024-09-16T09:21:06.181170Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01858210563659668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__currencies_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_currency_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__currencies_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.169600Z", "completed_at": "2024-09-16T09:21:06.179748Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.181819Z", "completed_at": "2024-09-16T09:21:06.181822Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01872873306274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__customers_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_customer_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__customers_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.176619Z", "completed_at": "2024-09-16T09:21:06.180403Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.182597Z", "completed_at": "2024-09-16T09:21:06.182600Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01805400848388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__employees_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_employee_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__employees_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.173795Z", "completed_at": "2024-09-16T09:21:06.180681Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.182841Z", "completed_at": "2024-09-16T09:21:06.182845Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01910400390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__departments_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_department_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__departments_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.187541Z", "completed_at": "2024-09-16T09:21:06.199327Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.200105Z", "completed_at": "2024-09-16T09:21:06.200125Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016190052032470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entities_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_entities_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__entities_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.193388Z", "completed_at": "2024-09-16T09:21:06.200369Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.202674Z", "completed_at": "2024-09-16T09:21:06.202678Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01723313331604004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__items_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_item_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__items_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.196594Z", "completed_at": "2024-09-16T09:21:06.200632Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.202909Z", "completed_at": "2024-09-16T09:21:06.202912Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01735401153564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__jobs_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_job_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__jobs_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.190887Z", "completed_at": "2024-09-16T09:21:06.200892Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.203141Z", "completed_at": "2024-09-16T09:21:06.203143Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01871013641357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entity_address_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_entity_address_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__entity_address_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.206150Z", "completed_at": "2024-09-16T09:21:06.212995Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.219612Z", "completed_at": "2024-09-16T09:21:06.219618Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017385005950927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__location_main_address_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_location_main_address_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__location_main_address_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.210543Z", "completed_at": "2024-09-16T09:21:06.219345Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.221073Z", "completed_at": "2024-09-16T09:21:06.221076Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0133819580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__locations_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_location_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__locations_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.215772Z", "completed_at": "2024-09-16T09:21:06.220122Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.222501Z", "completed_at": "2024-09-16T09:21:06.222503Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01419687271118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_accounting_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_tran_acct_line_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.213252Z", "completed_at": "2024-09-16T09:21:06.220345Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.222744Z", "completed_at": "2024-09-16T09:21:06.222747Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014967203140258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_subsidiary_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.225507Z", "completed_at": "2024-09-16T09:21:06.231873Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.238166Z", "completed_at": "2024-09-16T09:21:06.238176Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01616978645324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_transaction_line_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.229099Z", "completed_at": "2024-09-16T09:21:06.235278Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.239474Z", "completed_at": "2024-09-16T09:21:06.239478Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016028165817260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transactions_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_transaction_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transactions_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.232377Z", "completed_at": "2024-09-16T09:21:06.238681Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.240987Z", "completed_at": "2024-09-16T09:21:06.240990Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013904094696044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendor_categories_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_vendor_category_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendor_categories_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.235600Z", "completed_at": "2024-09-16T09:21:06.239936Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.242593Z", "completed_at": "2024-09-16T09:21:06.242595Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015065193176269531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendors_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite2_vendor_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendors_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.244085Z", "completed_at": "2024-09-16T09:21:06.251151Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.255327Z", "completed_at": "2024-09-16T09:21:06.255334Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017767906188964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_books_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_accounting_books_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_books_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.248381Z", "completed_at": "2024-09-16T09:21:06.254683Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.259603Z", "completed_at": "2024-09-16T09:21:06.259614Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017959117889404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_periods_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_accounting_periods_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_periods_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.251914Z", "completed_at": "2024-09-16T09:21:06.255916Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.261554Z", "completed_at": "2024-09-16T09:21:06.261560Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015568971633911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.256146Z", "completed_at": "2024-09-16T09:21:06.262610Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.267877Z", "completed_at": "2024-09-16T09:21:06.267884Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019797086715698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__classes_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_classes_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__classes_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.264828Z", "completed_at": "2024-09-16T09:21:06.271760Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.276839Z", "completed_at": "2024-09-16T09:21:06.276844Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016142845153808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__consolidated_exchange_rates_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_consolidated_exchange_rates_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.268562Z", "completed_at": "2024-09-16T09:21:06.275746Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.277611Z", "completed_at": "2024-09-16T09:21:06.277614Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017271041870117188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__currencies_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_currencies_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__currencies_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.272422Z", "completed_at": "2024-09-16T09:21:06.277376Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.281715Z", "completed_at": "2024-09-16T09:21:06.281722Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014827966690063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__customers_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_customers_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__customers_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.278312Z", "completed_at": "2024-09-16T09:21:06.282268Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.284532Z", "completed_at": "2024-09-16T09:21:06.284535Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013833999633789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__departments_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_departments_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__departments_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.284768Z", "completed_at": "2024-09-16T09:21:06.290989Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.295198Z", "completed_at": "2024-09-16T09:21:06.295203Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016919851303100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__expense_accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_expense_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__expense_accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.287597Z", "completed_at": "2024-09-16T09:21:06.294010Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.298731Z", "completed_at": "2024-09-16T09:21:06.298736Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016635894775390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__income_accounts_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_income_accounts_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__income_accounts_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.291252Z", "completed_at": "2024-09-16T09:21:06.294960Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.300212Z", "completed_at": "2024-09-16T09:21:06.300215Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014206886291503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__items_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_items_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__items_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.295448Z", "completed_at": "2024-09-16T09:21:06.300754Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.303347Z", "completed_at": "2024-09-16T09:21:06.303351Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01328587532043457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__locations_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_locations_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__locations_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.304125Z", "completed_at": "2024-09-16T09:21:06.313588Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.315428Z", "completed_at": "2024-09-16T09:21:06.315434Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01689291000366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__subsidiaries_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_subsidiaries_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__subsidiaries_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.307306Z", "completed_at": "2024-09-16T09:21:06.314321Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.318263Z", "completed_at": "2024-09-16T09:21:06.318268Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017042160034179688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transaction_lines_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_transaction_lines_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transaction_lines_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.310866Z", "completed_at": "2024-09-16T09:21:06.314982Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.319095Z", "completed_at": "2024-09-16T09:21:06.319098Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01671314239501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transactions_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_transactions_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transactions_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.315664Z", "completed_at": "2024-09-16T09:21:06.320121Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.322450Z", "completed_at": "2024-09-16T09:21:06.322453Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012880325317382812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendor_types_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_vendor_types_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendor_types_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.327280Z", "completed_at": "2024-09-16T09:21:06.328301Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.331399Z", "completed_at": "2024-09-16T09:21:06.331408Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010552167892456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.329023Z", "completed_at": "2024-09-16T09:21:06.330073Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.331833Z", "completed_at": "2024-09-16T09:21:06.331840Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011629819869995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_account_type_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.323219Z", "completed_at": "2024-09-16T09:21:06.331162Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.334639Z", "completed_at": "2024-09-16T09:21:06.334643Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014705896377563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendors_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"netsuite_source_integration_tests_4\".\"netsuite_vendors_data\"", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendors_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.332791Z", "completed_at": "2024-09-16T09:21:06.333840Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.336447Z", "completed_at": "2024-09-16T09:21:06.336451Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0071790218353271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_book_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.338939Z", "completed_at": "2024-09-16T09:21:06.340085Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.345095Z", "completed_at": "2024-09-16T09:21:06.345100Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01005697250366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_book_sub_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.340697Z", "completed_at": "2024-09-16T09:21:06.341653Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.345546Z", "completed_at": "2024-09-16T09:21:06.345548Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011108160018920898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_period_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.343016Z", "completed_at": "2024-09-16T09:21:06.344818Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.348090Z", "completed_at": "2024-09-16T09:21:06.348093Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010796785354614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_accounting_period_fiscal_cal_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.346484Z", "completed_at": "2024-09-16T09:21:06.347406Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.349971Z", "completed_at": "2024-09-16T09:21:06.349975Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008756875991821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_classification_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.352008Z", "completed_at": "2024-09-16T09:21:06.353033Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.356735Z", "completed_at": "2024-09-16T09:21:06.356739Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008116960525512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_consolidated_exchange_rate_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.353565Z", "completed_at": "2024-09-16T09:21:06.354428Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.357162Z", "completed_at": "2024-09-16T09:21:06.357165Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009883880615234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_currency_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.355625Z", "completed_at": "2024-09-16T09:21:06.356501Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.360372Z", "completed_at": "2024-09-16T09:21:06.360375Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009682893753051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.358027Z", "completed_at": "2024-09-16T09:21:06.359686Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.361965Z", "completed_at": "2024-09-16T09:21:06.361968Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00802302360534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_department_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.363874Z", "completed_at": "2024-09-16T09:21:06.393989Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.397944Z", "completed_at": "2024-09-16T09:21:06.397949Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03762102127075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_employee_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.394650Z", "completed_at": "2024-09-16T09:21:06.395589Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.398586Z", "completed_at": "2024-09-16T09:21:06.398592Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.038752079010009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_entities_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.396835Z", "completed_at": "2024-09-16T09:21:06.397705Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.401250Z", "completed_at": "2024-09-16T09:21:06.401253Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03899383544921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_entity_address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.399559Z", "completed_at": "2024-09-16T09:21:06.400550Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.403239Z", "completed_at": "2024-09-16T09:21:06.403243Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008272886276245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.405568Z", "completed_at": "2024-09-16T09:21:06.406688Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.411347Z", "completed_at": "2024-09-16T09:21:06.411351Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009508132934570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_job_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.407299Z", "completed_at": "2024-09-16T09:21:06.408946Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.411779Z", "completed_at": "2024-09-16T09:21:06.411781Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01054692268371582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_location_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.410254Z", "completed_at": "2024-09-16T09:21:06.411112Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.414345Z", "completed_at": "2024-09-16T09:21:06.414348Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010261058807373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_location_main_address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.412690Z", "completed_at": "2024-09-16T09:21:06.413636Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.415987Z", "completed_at": "2024-09-16T09:21:06.415990Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007456064224243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_subsidiary_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.417867Z", "completed_at": "2024-09-16T09:21:06.418825Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.422451Z", "completed_at": "2024-09-16T09:21:06.422455Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008554935455322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_tran_acct_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.419291Z", "completed_at": "2024-09-16T09:21:06.420146Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.422861Z", "completed_at": "2024-09-16T09:21:06.422864Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009569168090820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.421321Z", "completed_at": "2024-09-16T09:21:06.422210Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.426050Z", "completed_at": "2024-09-16T09:21:06.426053Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009496927261352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_transaction_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.424498Z", "completed_at": "2024-09-16T09:21:06.425390Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.427649Z", "completed_at": "2024-09-16T09:21:06.427651Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007917165756225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_vendor_category_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.429491Z", "completed_at": "2024-09-16T09:21:06.430428Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.433988Z", "completed_at": "2024-09-16T09:21:06.433992Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007611751556396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite2_vendor_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.430870Z", "completed_at": "2024-09-16T09:21:06.431741Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.434384Z", "completed_at": "2024-09-16T09:21:06.434387Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008599042892456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounting_books_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.432887Z", "completed_at": "2024-09-16T09:21:06.433750Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.436734Z", "completed_at": "2024-09-16T09:21:06.436737Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008601903915405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounting_periods_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.435217Z", "completed_at": "2024-09-16T09:21:06.436087Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.438351Z", "completed_at": "2024-09-16T09:21:06.438354Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007178306579589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.440336Z", "completed_at": "2024-09-16T09:21:06.442032Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.445565Z", "completed_at": "2024-09-16T09:21:06.445569Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008505105972290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_classes_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.442481Z", "completed_at": "2024-09-16T09:21:06.443327Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.445990Z", "completed_at": "2024-09-16T09:21:06.445992Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00952601432800293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_consolidated_exchange_rates_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.444462Z", "completed_at": "2024-09-16T09:21:06.445324Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.448379Z", "completed_at": "2024-09-16T09:21:06.448382Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00934910774230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_currencies_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.446841Z", "completed_at": "2024-09-16T09:21:06.447724Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.449993Z", "completed_at": "2024-09-16T09:21:06.449996Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007132053375244141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_customers_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.451851Z", "completed_at": "2024-09-16T09:21:06.452781Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.457153Z", "completed_at": "2024-09-16T09:21:06.457156Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008455038070678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_departments_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.453265Z", "completed_at": "2024-09-16T09:21:06.454104Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.457552Z", "completed_at": "2024-09-16T09:21:06.457555Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00947117805480957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_expense_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.456068Z", "completed_at": "2024-09-16T09:21:06.456918Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.459960Z", "completed_at": "2024-09-16T09:21:06.459962Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009437084197998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_income_accounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.458390Z", "completed_at": "2024-09-16T09:21:06.459290Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.461562Z", "completed_at": "2024-09-16T09:21:06.461564Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0078887939453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_items_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.463363Z", "completed_at": "2024-09-16T09:21:06.464289Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.467788Z", "completed_at": "2024-09-16T09:21:06.467791Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0074880123138427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_locations_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.464741Z", "completed_at": "2024-09-16T09:21:06.465576Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.468186Z", "completed_at": "2024-09-16T09:21:06.468189Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009279966354370117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_subsidiaries_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.466700Z", "completed_at": "2024-09-16T09:21:06.467556Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.471326Z", "completed_at": "2024-09-16T09:21:06.471329Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00927877426147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_transaction_lines_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.469008Z", "completed_at": "2024-09-16T09:21:06.470663Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.473013Z", "completed_at": "2024-09-16T09:21:06.473016Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007883071899414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_transactions_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.474819Z", "completed_at": "2024-09-16T09:21:06.475715Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.484419Z", "completed_at": "2024-09-16T09:21:06.484424Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012793779373168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_vendor_types_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.476161Z", "completed_at": "2024-09-16T09:21:06.476994Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:06.484848Z", "completed_at": "2024-09-16T09:21:06.484851Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017451047897338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.netsuite_source_integration_tests.netsuite_vendors_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.485809Z", "completed_at": "2024-09-16T09:21:07.627907Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:07.628987Z", "completed_at": "2024-09-16T09:21:07.628997Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2582318782806396, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_books", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_books_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    basebook\n    \n as \n    \n    basebook\n    \n, \n    cast(null as TEXT) as \n    \n    contingentrevenuehandling\n    \n , \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    effectiveperiod\n    \n as \n    \n    effectiveperiod\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isadjustmentonly\n    \n as \n    \n    isadjustmentonly\n    \n, \n    \n    \n    isconsolidated\n    \n as \n    \n    isconsolidated\n    \n, \n    \n    \n    isprimary\n    \n as \n    \n    isprimary\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subsidiariesstring\n    \n as \n    \n    subsidiariesstring\n    \n, \n    cast(null as TEXT) as \n    \n    twosteprevenueallocation\n    \n , \n    cast(null as TEXT) as \n    \n    unbilledreceivablegrouping\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as accounting_book_id,\n        name as accounting_book_name,\n        basebook as base_book_id,\n        effectiveperiod as effective_period_id,\n        isadjustmentonly = 'T' as is_adjustment_only,\n        isconsolidated = 'T' as is_consolidated,\n        contingentrevenuehandling as is_contingent_revenue_handling,\n        isprimary = 'T' as is_primary,\n        twosteprevenueallocation as is_two_step_revenue_allocation\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_books\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.478118Z", "completed_at": "2024-09-16T09:21:07.630594Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:07.632005Z", "completed_at": "2024-09-16T09:21:07.632008Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2742362022399902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__account_types", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__account_types_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    balancesheet\n    \n as \n    \n    balancesheet\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    defaultcashflowratetype\n    \n as \n    \n    defaultcashflowratetype\n    \n, \n    \n    \n    defaultgeneralratetype\n    \n as \n    \n    defaultgeneralratetype\n    \n, \n    \n    \n    eliminationalgo\n    \n as \n    \n    eliminationalgo\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includeinrevaldefault\n    \n as \n    \n    includeinrevaldefault\n    \n, \n    \n    \n    internalid\n    \n as \n    \n    internalid\n    \n, \n    \n    \n        \n            \n            \"left\"\n            \n        \n    \n as \n    \n        \n            \n            \"left\"\n            \n        \n    \n, \n    \n    \n    longname\n    \n as \n    \n    longname\n    \n, \n    \n    \n    seqnum\n    \n as \n    \n    seqnum\n    \n, \n    \n    \n    usercanchangerevaloption\n    \n as \n    \n    usercanchangerevaloption\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        id as account_type_id,\n        balancesheet = 'T' as is_balancesheet,\"left\"= 'T' as is_leftside,\n        longname as type_name\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__account_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.493548Z", "completed_at": "2024-09-16T09:21:07.630084Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:07.631544Z", "completed_at": "2024-09-16T09:21:07.631547Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2574641704559326, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_book_subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        accountingbook as accounting_book_id,\n        status,\n        subsidiary as subsidiary_id\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:06.497594Z", "completed_at": "2024-09-16T09:21:07.629558Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:07.631090Z", "completed_at": "2024-09-16T09:21:07.631093Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.259202241897583, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_period_fiscal_cal", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountingperiod\n    \n as \n    \n    accountingperiod\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    fiscalcalendar\n    \n as \n    \n    fiscalcalendar\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        accountingperiod as accounting_period_id,\n        fiscalcalendar as fiscal_calendar_id,\n        parent as parent_id\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:07.762481Z", "completed_at": "2024-09-16T09:21:08.756462Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:08.756956Z", "completed_at": "2024-09-16T09:21:08.756962Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.111936092376709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__consolidated_exchange_rates", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    averagerate\n    \n as \n    \n    averagerate\n    \n, \n    \n    \n    currentrate\n    \n as \n    \n    currentrate\n    \n, \n    \n    \n    fromcurrency\n    \n as \n    \n    fromcurrency\n    \n, \n    \n    \n    fromsubsidiary\n    \n as \n    \n    fromsubsidiary\n    \n, \n    \n    \n    historicalrate\n    \n as \n    \n    historicalrate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    postingperiod\n    \n as \n    \n    postingperiod\n    \n, \n    \n    \n    tocurrency\n    \n as \n    \n    tocurrency\n    \n, \n    \n    \n    tosubsidiary\n    \n as \n    \n    tosubsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as consolidated_exchange_rate_id,\n        postingperiod as accounting_period_id,\n        fromcurrency as from_currency_id,\n        fromsubsidiary as from_subsidiary_id,\n        tocurrency as to_currency_id,\n        tosubsidiary as to_subsidiary_id,\n        accountingbook as accounting_book_id,\n        currentrate as current_rate, \n        averagerate as average_rate,\n        historicalrate as historical_rate\n\n        --The below macro adds the fields defined within your consolidated_exchange_rates_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:07.742457Z", "completed_at": "2024-09-16T09:21:08.780421Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:08.780883Z", "completed_at": "2024-09-16T09:21:08.780888Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.1555371284484863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounting_periods", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_periods_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    alllocked\n    \n as \n    \n    alllocked\n    \n, \n    \n    \n    allownonglchanges\n    \n as \n    \n    allownonglchanges\n    \n, \n    \n    \n    aplocked\n    \n as \n    \n    aplocked\n    \n, \n    \n    \n    arlocked\n    \n as \n    \n    arlocked\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    \n    \n    closedondate\n    \n as \n    \n    closedondate\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    enddate\n    \n as \n    \n    enddate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isadjust\n    \n as \n    \n    isadjust\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isposting\n    \n as \n    \n    isposting\n    \n, \n    \n    \n    isquarter\n    \n as \n    \n    isquarter\n    \n, \n    \n    \n    isyear\n    \n as \n    \n    isyear\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    periodname\n    \n as \n    \n    periodname\n    \n, \n    \n    \n    startdate\n    \n as \n    \n    startdate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as accounting_period_id,\n        parent as parent_id, \n        periodname as name,\n        cast(startdate as date) as starting_at,\n        cast(enddate as date) as ending_at,\n        closedondate as closed_at,\n        isquarter = 'T' as is_quarter,\n        isyear = 'T' as is_year,\n        isadjust = 'T' as is_adjustment,\n        isposting = 'T' as is_posting,\n        closed = 'T' as is_closed,\n        alllocked = 'T' as is_all_locked,\n        arlocked = 'T' as is_ar_locked,\n        aplocked = 'T' as is_ap_locked\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_periods\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:07.752227Z", "completed_at": "2024-09-16T09:21:08.822625Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:08.823066Z", "completed_at": "2024-09-16T09:21:08.823070Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1862289905548096, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounts_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    acctnumber\n    \n as \n    \n    acctnumber\n    \n, \n    \n    \n    accttype\n    \n as \n    \n    accttype\n    \n, \n    \n    \n    sspecacct\n    \n as \n    \n    sspecacct\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    accountsearchdisplaynamecopy\n    \n as \n    \n    accountsearchdisplaynamecopy\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    deferralacct\n    \n as \n    \n    deferralacct\n    \n, \n    \n    \n    cashflowrate\n    \n as \n    \n    cashflowrate\n    \n, \n    \n    \n    generalrate\n    \n as \n    \n    generalrate\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    includechildren\n    \n as \n    \n    includechildren\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    issummary\n    \n as \n    \n    issummary\n    \n, \n    \n    \n    eliminate\n    \n as \n    \n    eliminate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as account_id, \n        externalid as account_external_id,\n        parent as parent_id,\n        acctnumber as account_number,\n        accttype as account_type_id,\n        sspecacct as special_account_type_id,\n        fullname as name,\n        accountsearchdisplaynamecopy as display_name,\n        description as account_description,\n        deferralacct as deferral_account_id,\n        cashflowrate as cash_flow_rate_type,\n        generalrate as general_rate_type,\n        currency as currency_id,\n        class as class_id,\n        department as department_id,\n        location as location_id,\n        includechildren = 'T' as is_including_child_subs,\n        isinactive = 'T' as is_inactive,\n        issummary = 'T' as is_summary,\n        eliminate = 'T' as is_eliminate,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your accounts_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:07.757358Z", "completed_at": "2024-09-16T09:21:08.846037Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:08.847358Z", "completed_at": "2024-09-16T09:21:08.847370Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2282612323760986, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__classes", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__classes_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as class_id,\n        externalid as class_external_id,\n        name,\n        fullname as full_name,\n        isinactive = 'T' as is_inactive,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your classes_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__classes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:08.877133Z", "completed_at": "2024-09-16T09:21:09.960336Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:09.960792Z", "completed_at": "2024-09-16T09:21:09.960798Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.1901249885559082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__currencies", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__currencies_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    currencyprecision\n    \n as \n    \n    currencyprecision\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    displaysymbol\n    \n as \n    \n    displaysymbol\n    \n, \n    \n    \n    exchangerate\n    \n as \n    \n    exchangerate\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fxrateupdatetimezone\n    \n as \n    \n    fxrateupdatetimezone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includeinfxrateupdates\n    \n as \n    \n    includeinfxrateupdates\n    \n, \n    \n    \n    isbasecurrency\n    \n as \n    \n    isbasecurrency\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    overridecurrencyformat\n    \n as \n    \n    overridecurrencyformat\n    \n, \n    \n    \n    symbol\n    \n as \n    \n    symbol\n    \n, \n    \n    \n    symbolplacement\n    \n as \n    \n    symbolplacement\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as currency_id,\n        name,\n        symbol\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__currencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:08.895401Z", "completed_at": "2024-09-16T09:21:09.961006Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:09.961716Z", "completed_at": "2024-09-16T09:21:09.961719Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.1764578819274902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__customers", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__customers_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    receivablesaccount\n    \n as \n    \n    receivablesaccount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    firstorderdate\n    \n as \n    \n    firstorderdate\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as customer_id,\n        entityid as entity_id,\n        externalid as customer_external_id,\n        parent as parent_id,\n        isperson = 'T' as is_person,\n        altname as alt_name,\n        companyname as company_name,\n        firstname as first_name,\n        lastname as last_name,\n        email as email_address,\n        phone as phone_number,\n        defaultbillingaddress as default_billing_address_id,\n        defaultshippingaddress as default_shipping_address_id,\n        receivablesaccount as receivables_account_id,\n        currency as currency_id,\n        firstorderdate as date_first_order_at\n\n        --The below macro adds the fields defined within your customers_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:08.940805Z", "completed_at": "2024-09-16T09:21:10.057692Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:10.058154Z", "completed_at": "2024-09-16T09:21:10.058159Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2284820079803467, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__employees", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__employees_tmp\"\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    cast(null as TEXT) as \n    \n    aliennumber\n    \n , \n    \n    \n    approvallimit\n    \n as \n    \n    approvallimit\n    \n, \n    cast(null as integer) as \n    \n    approver\n    \n , \n    cast(null as integer) as \n    \n    class\n    \n , \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    cast(null as integer) as \n    \n    employeestatus\n    \n , \n    cast(null as integer) as \n    \n    employeetype\n    \n , \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    expenselimit\n    \n as \n    \n    expenselimit\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    cast(null as TEXT) as \n    \n    giveaccess\n    \n , \n    cast(null as timestamp) as \n    \n    hiredate\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    cast(null as integer) as \n    \n    location\n    \n , \n    cast(null as TEXT) as \n    \n    middlename\n    \n , \n    \n    \n    purchaseorderapprovallimit\n    \n as \n    \n    purchaseorderapprovallimit\n    \n, \n    \n    \n    purchaseorderlimit\n    \n as \n    \n    purchaseorderlimit\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    \n    \n    supervisor\n    \n as \n    \n    supervisor\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as employee_id,\n        entityid as entity_id,\n        firstname as first_name,\n        lastname as last_name,\n        department as department_id,\n        subsidiary as subsidiary_id,\n        email,\n        supervisor as supervisor_id,\n        approvallimit as approval_limit,\n        expenselimit as expense_limit,\n        purchaseorderapprovallimit as purchase_order_approval_limit,\n        purchaseorderlimit as purchase_order_limit,\n        currency as currency_id,\n        isinactive = 'T' as is_inactive\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__employees\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:08.983223Z", "completed_at": "2024-09-16T09:21:10.085777Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:10.086410Z", "completed_at": "2024-09-16T09:21:10.086419Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2009079456329346, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__departments", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__departments_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as department_id,\n        parent as parent_id,\n        name,\n        fullname as full_name,\n        subsidiary as subsidiary_id,\n        isinactive = 'T' as is_inactive,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your departments_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__departments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:10.067139Z", "completed_at": "2024-09-16T09:21:11.083506Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:11.083974Z", "completed_at": "2024-09-16T09:21:11.083981Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.1211919784545898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entities", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__entities_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    employee\n    \n as \n    \n    employee\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    project\n    \n as \n    \n    project\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as entity_id,\n        parent as parent_id,\n        entitytitle as entity_name,\n        type as entity_type,\n        isperson = 'T' as is_person,\n        contact as contact_id,\n        customer as customer_id,\n        employee as employee_id,\n        project as job_id,\n        vendor as vendor_id\n\n        --The below macro adds the fields defined within your entities_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__entities\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:10.073131Z", "completed_at": "2024-09-16T09:21:11.183766Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:11.188162Z", "completed_at": "2024-09-16T09:21:11.188166Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2321279048919678, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__items", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__items_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as integer) as \n    \n    alternatedemandsourceitem\n    \n , \n    cast(null as integer) as \n    \n    amortizationperiod\n    \n , \n    cast(null as integer) as \n    \n    amortizationtemplate\n    \n , \n    \n    \n    assetaccount\n    \n as \n    \n    assetaccount\n    \n, \n    cast(null as TEXT) as \n    \n    atpmethod\n    \n , \n    cast(null as TEXT) as \n    \n    autoexpandkitforrevenuemgmt\n    \n , \n    cast(null as float) as \n    \n    averagecost\n    \n , \n    cast(null as integer) as \n    \n    backwardconsumptiondays\n    \n , \n    cast(null as integer) as \n    \n    billexchratevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    billingschedule\n    \n , \n    cast(null as integer) as \n    \n    billpricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    billqtyvarianceacct\n    \n , \n    cast(null as TEXT) as \n    \n    buildentireassembly\n    \n , \n    cast(null as float) as \n    \n    buildtime\n    \n , \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    cast(null as integer) as \n    \n    consumptionunit\n    \n , \n    cast(null as TEXT) as \n    \n    copydescription\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as float) as \n    \n    costestimate\n    \n , \n    cast(null as TEXT) as \n    \n    costestimatetype\n    \n , \n    cast(null as TEXT) as \n    \n    costingmethod\n    \n , \n    cast(null as TEXT) as \n    \n    costingmethoddisplay\n    \n , \n    cast(null as TEXT) as \n    \n    countryofmanufacture\n    \n , \n    cast(null as timestamp) as \n    \n    createddate\n    \n , \n    cast(null as integer) as \n    \n    createexpenseplanson\n    \n , \n    cast(null as TEXT) as \n    \n    createjob\n    \n , \n    cast(null as integer) as \n    \n    createrevenueplanson\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    \n    \n    deferralaccount\n    \n as \n    \n    deferralaccount\n    \n, \n    cast(null as integer) as \n    \n    deferredrevenueaccount\n    \n , \n    cast(null as TEXT) as \n    \n    deferrevrec\n    \n , \n    cast(null as float) as \n    \n    demandmodifier\n    \n , \n    cast(null as TEXT) as \n    \n    demandsource\n    \n , \n    cast(null as integer) as \n    \n    demandtimefence\n    \n , \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    cast(null as TEXT) as \n    \n    directrevenueposting\n    \n , \n    cast(null as TEXT) as \n    \n    displayname\n    \n , \n    cast(null as integer) as \n    \n    dropshipexpenseaccount\n    \n , \n    cast(null as TEXT) as \n    \n    enforceminqtyinternally\n    \n , \n    cast(null as TEXT) as \n    \n    excludefromsitemap\n    \n , \n    \n    \n    expenseaccount\n    \n as \n    \n    expenseaccount\n    \n, \n    cast(null as integer) as \n    \n    expenseamortizationrule\n    \n , \n    cast(null as TEXT) as \n    \n    externalid\n    \n , \n    cast(null as float) as \n    \n    fixedlotsize\n    \n , \n    cast(null as integer) as \n    \n    forwardconsumptiondays\n    \n , \n    cast(null as TEXT) as \n    \n    froogleproductfeed\n    \n , \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    cast(null as float) as \n    \n    fxcost\n    \n , \n    \n    \n    gainlossaccount\n    \n as \n    \n    gainlossaccount\n    \n, \n    cast(null as TEXT) as \n    \n    generateaccruals\n    \n , \n    cast(null as float) as \n    \n    handlingcost\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as TEXT) as \n    \n    includechildren\n    \n , \n    \n    \n    incomeaccount\n    \n as \n    \n    incomeaccount\n    \n, \n    cast(null as integer) as \n    \n    intercodefrevaccount\n    \n , \n    cast(null as integer) as \n    \n    intercoexpenseaccount\n    \n , \n    cast(null as integer) as \n    \n    intercoincomeaccount\n    \n , \n    cast(null as TEXT) as \n    \n    isdropshipitem\n    \n , \n    cast(null as TEXT) as \n    \n    isfulfillable\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    islotitem\n    \n , \n    cast(null as TEXT) as \n    \n    isonline\n    \n , \n    cast(null as TEXT) as \n    \n    isphantom\n    \n , \n    cast(null as TEXT) as \n    \n    isserialitem\n    \n , \n    cast(null as TEXT) as \n    \n    isspecialorderitem\n    \n , \n    cast(null as TEXT) as \n    \n    isspecialworkorderitem\n    \n , \n    cast(null as TEXT) as \n    \n    itemid\n    \n , \n    cast(null as integer) as \n    \n    itemrevenuecategory\n    \n , \n    \n    \n    itemtype\n    \n as \n    \n    itemtype\n    \n, \n    cast(null as timestamp) as \n    \n    lastmodifieddate\n    \n , \n    cast(null as float) as \n    \n    lastpurchaseprice\n    \n , \n    cast(null as integer) as \n    \n    leadtime\n    \n , \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    cast(null as TEXT) as \n    \n    manufacturer\n    \n , \n    cast(null as TEXT) as \n    \n    matchbilltoreceipt\n    \n , \n    cast(null as TEXT) as \n    \n    matrixitemnametemplate\n    \n , \n    cast(null as TEXT) as \n    \n    matrixtype\n    \n , \n    cast(null as integer) as \n    \n    maximumquantity\n    \n , \n    cast(null as integer) as \n    \n    minimumquantity\n    \n , \n    cast(null as TEXT) as \n    \n    mpn\n    \n , \n    cast(null as TEXT) as \n    \n    nextagcategory\n    \n , \n    cast(null as TEXT) as \n    \n    nextagproductfeed\n    \n , \n    cast(null as TEXT) as \n    \n    overallquantitypricingtype\n    \n , \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    cast(null as integer) as \n    \n    periodiclotsizedays\n    \n , \n    cast(null as TEXT) as \n    \n    periodiclotsizetype\n    \n , \n    cast(null as integer) as \n    \n    preferredlocation\n    \n , \n    cast(null as integer) as \n    \n    pricinggroup\n    \n , \n    cast(null as TEXT) as \n    \n    printitems\n    \n , \n    cast(null as integer) as \n    \n    prodpricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    prodqtyvarianceacct\n    \n , \n    cast(null as integer) as \n    \n    projectexpensetype\n    \n , \n    cast(null as integer) as \n    \n    projecttemplate\n    \n , \n    cast(null as TEXT) as \n    \n    purchasedescription\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as integer) as \n    \n    purchasepricevarianceacct\n    \n , \n    cast(null as integer) as \n    \n    purchaseunit\n    \n , \n    cast(null as integer) as \n    \n    quantitypricingschedule\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    relateditemsdescription\n    \n , \n    cast(null as integer) as \n    \n    rescheduleindays\n    \n , \n    cast(null as integer) as \n    \n    rescheduleoutdays\n    \n , \n    cast(null as float) as \n    \n    residual\n    \n , \n    cast(null as integer) as \n    \n    revenueallocationgroup\n    \n , \n    cast(null as integer) as \n    \n    revenuerecognitionrule\n    \n , \n    cast(null as integer) as \n    \n    revrecforecastrule\n    \n , \n    cast(null as integer) as \n    \n    revreclassfxaccount\n    \n , \n    cast(null as TEXT) as \n    \n    roundupascomponent\n    \n , \n    cast(null as float) as \n    \n    safetystocklevel\n    \n , \n    cast(null as integer) as \n    \n    saleunit\n    \n , \n    cast(null as integer) as \n    \n    scrapacct\n    \n , \n    cast(null as TEXT) as \n    \n    searchkeywords\n    \n , \n    cast(null as TEXT) as \n    \n    seasonaldemand\n    \n , \n    cast(null as TEXT) as \n    \n    shipindividually\n    \n , \n    cast(null as integer) as \n    \n    shippackage\n    \n , \n    cast(null as float) as \n    \n    shippingcost\n    \n , \n    cast(null as TEXT) as \n    \n    shoppingdotcomcategory\n    \n , \n    cast(null as TEXT) as \n    \n    shoppingproductfeed\n    \n , \n    cast(null as integer) as \n    \n    shopzillacategoryid\n    \n , \n    cast(null as TEXT) as \n    \n    shopzillaproductfeed\n    \n , \n    cast(null as TEXT) as \n    \n    sitemappriority\n    \n , \n    cast(null as TEXT) as \n    \n    stockdescription\n    \n , \n    cast(null as integer) as \n    \n    stockunit\n    \n , \n    cast(null as TEXT) as \n    \n    storedescription\n    \n , \n    cast(null as integer) as \n    \n    storedisplayimage\n    \n , \n    cast(null as TEXT) as \n    \n    storedisplayname\n    \n , \n    cast(null as integer) as \n    \n    storedisplaythumbnail\n    \n , \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    cast(null as TEXT) as \n    \n    subtype\n    \n , \n    cast(null as TEXT) as \n    \n    supplylotsizingmethod\n    \n , \n    cast(null as TEXT) as \n    \n    supplyreplenishmentmethod\n    \n , \n    cast(null as integer) as \n    \n    supplytimefence\n    \n , \n    cast(null as TEXT) as \n    \n    supplytype\n    \n , \n    cast(null as float) as \n    \n    totalquantityonhand\n    \n , \n    cast(null as float) as \n    \n    totalvalue\n    \n , \n    cast(null as float) as \n    \n    transferprice\n    \n , \n    cast(null as integer) as \n    \n    unbuildvarianceaccount\n    \n , \n    cast(null as integer) as \n    \n    unitstype\n    \n , \n    cast(null as TEXT) as \n    \n    upccode\n    \n , \n    cast(null as TEXT) as \n    \n    usebins\n    \n , \n    cast(null as TEXT) as \n    \n    usemarginalrates\n    \n , \n    cast(null as TEXT) as \n    \n    vendorname\n    \n , \n    cast(null as integer) as \n    \n    vendreturnvarianceaccount\n    \n , \n    cast(null as TEXT) as \n    \n    vsoedelivered\n    \n , \n    cast(null as TEXT) as \n    \n    vsoepermitdiscount\n    \n , \n    cast(null as TEXT) as \n    \n    vsoesopgroup\n    \n , \n    cast(null as float) as \n    \n    weight\n    \n , \n    cast(null as integer) as \n    \n    weightunit\n    \n , \n    cast(null as TEXT) as \n    \n    weightunits\n    \n , \n    cast(null as integer) as \n    \n    wipacct\n    \n , \n    cast(null as integer) as \n    \n    wipvarianceacct\n    \n , \n    cast(null as TEXT) as \n    \n    yahooproductfeed\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as item_id,\n        fullname as name,\n        itemtype as type_name,\n        description as sales_description,\n        department as department_id,\n        class as class_id,\n        location as location_id,\n        subsidiary as subsidiary_id,\n        assetaccount as asset_account_id,\n        expenseaccount as expense_account_id,\n        gainlossaccount as gain_loss_account_id,\n        incomeaccount as income_account_id,\n        intercoexpenseaccount as interco_expense_account_id,\n        intercoincomeaccount as interco_income_account_id,\n        deferralaccount as deferred_expense_account_id,\n        deferredrevenueaccount as deferred_revenue_account_id,\n        parent as parent_item_id\n\n        --The below macro adds the fields defined within your items_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:10.184183Z", "completed_at": "2024-09-16T09:21:11.203934Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:11.204389Z", "completed_at": "2024-09-16T09:21:11.204394Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.1291172504425049, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__entity_address", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__entity_address_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    addr1\n    \n as \n    \n    addr1\n    \n, \n    \n    \n    addr2\n    \n as \n    \n    addr2\n    \n, \n    \n    \n    addr3\n    \n as \n    \n    addr3\n    \n, \n    \n    \n    addressee\n    \n as \n    \n    addressee\n    \n, \n    \n    \n    addrphone\n    \n as \n    \n    addrphone\n    \n, \n    \n    \n    addrtext\n    \n as \n    \n    addrtext\n    \n, \n    \n    \n    attention\n    \n as \n    \n    attention\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    dropdownstate\n    \n as \n    \n    dropdownstate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    nkey\n    \n as \n    \n    nkey\n    \n, \n    \n    \n    override\n    \n as \n    \n    override\n    \n, \n    \n    \n    recordowner\n    \n as \n    \n    recordowner\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        addr1,\n        addr2,\n        addr3,\n        addressee,\n        addrtext as full_address,\n        city,\n        country,\n        coalesce(state, dropdownstate) as state,\n        nkey,\n        zip as zipcode\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__entity_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:10.172372Z", "completed_at": "2024-09-16T09:21:11.188797Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:11.190030Z", "completed_at": "2024-09-16T09:21:11.190034Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.143657922744751, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__jobs", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__jobs_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountnumber\n    \n as \n    \n    accountnumber\n    \n, \n    \n    \n    actualtime\n    \n as \n    \n    actualtime\n    \n, \n    \n    \n    allowallresourcesfortasks\n    \n as \n    \n    allowallresourcesfortasks\n    \n, \n    \n    \n    allowexpenses\n    \n as \n    \n    allowexpenses\n    \n, \n    \n    \n    allowtime\n    \n as \n    \n    allowtime\n    \n, \n    \n    \n    alternatecontact\n    \n as \n    \n    alternatecontact\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    billingschedule\n    \n as \n    \n    billingschedule\n    \n, \n    \n    \n    calculatedenddate\n    \n as \n    \n    calculatedenddate\n    \n, \n    \n    \n    calculatedenddatebaseline\n    \n as \n    \n    calculatedenddatebaseline\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    contactlist\n    \n as \n    \n    contactlist\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    currencyprecision\n    \n as \n    \n    currencyprecision\n    \n, \n    \n    \n    custentity1\n    \n as \n    \n    custentity1\n    \n, \n    \n    \n    custentity4\n    \n as \n    \n    custentity4\n    \n, \n    \n    \n    custentity5\n    \n as \n    \n    custentity5\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    enddate\n    \n as \n    \n    enddate\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitystatus\n    \n as \n    \n    entitystatus\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    estimatedcost\n    \n as \n    \n    estimatedcost\n    \n, \n    \n    \n    estimatedgrossprofit\n    \n as \n    \n    estimatedgrossprofit\n    \n, \n    \n    \n    estimatedgrossprofitpercent\n    \n as \n    \n    estimatedgrossprofitpercent\n    \n, \n    \n    \n    estimatedlaborcost\n    \n as \n    \n    estimatedlaborcost\n    \n, \n    \n    \n    estimatedlaborcostbaseline\n    \n as \n    \n    estimatedlaborcostbaseline\n    \n, \n    \n    \n    estimatedlaborrevenue\n    \n as \n    \n    estimatedlaborrevenue\n    \n, \n    \n    \n    estimatedrevenue\n    \n as \n    \n    estimatedrevenue\n    \n, \n    \n    \n    estimatedtime\n    \n as \n    \n    estimatedtime\n    \n, \n    \n    \n    estimatedtimeoverride\n    \n as \n    \n    estimatedtimeoverride\n    \n, \n    \n    \n    estimatedtimeoverridebaseline\n    \n as \n    \n    estimatedtimeoverridebaseline\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    files\n    \n as \n    \n    files\n    \n, \n    \n    \n    forecastchargerunondemand\n    \n as \n    \n    forecastchargerunondemand\n    \n, \n    \n    \n    fxrate\n    \n as \n    \n    fxrate\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    includecrmtasksintotals\n    \n as \n    \n    includecrmtasksintotals\n    \n, \n    \n    \n    isexempttime\n    \n as \n    \n    isexempttime\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isproductivetime\n    \n as \n    \n    isproductivetime\n    \n, \n    \n    \n    isutilizedtime\n    \n as \n    \n    isutilizedtime\n    \n, \n    \n    \n    jobbillingtype\n    \n as \n    \n    jobbillingtype\n    \n, \n    \n    \n    jobitem\n    \n as \n    \n    jobitem\n    \n, \n    \n    \n    jobprice\n    \n as \n    \n    jobprice\n    \n, \n    \n    \n    jobtype\n    \n as \n    \n    jobtype\n    \n, \n    \n    \n    lastbaselinedate\n    \n as \n    \n    lastbaselinedate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    limittimetoassignees\n    \n as \n    \n    limittimetoassignees\n    \n, \n    \n    \n    materializetime\n    \n as \n    \n    materializetime\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    percentcomplete\n    \n as \n    \n    percentcomplete\n    \n, \n    \n    \n    percenttimecomplete\n    \n as \n    \n    percenttimecomplete\n    \n, \n    \n    \n    primarycontact\n    \n as \n    \n    primarycontact\n    \n, \n    \n    \n    projectedenddate\n    \n as \n    \n    projectedenddate\n    \n, \n    \n    \n    projectedenddatebaseline\n    \n as \n    \n    projectedenddatebaseline\n    \n, \n    \n    \n    projectmanager\n    \n as \n    \n    projectmanager\n    \n, \n    \n    \n    startdate\n    \n as \n    \n    startdate\n    \n, \n    \n    \n    startdatebaseline\n    \n as \n    \n    startdatebaseline\n    \n, \n    \n    \n    timeapproval\n    \n as \n    \n    timeapproval\n    \n, \n    \n    \n    timeremaining\n    \n as \n    \n    timeremaining\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        id as job_id,\n        externalid as job_external_id,\n        customer as customer_id,\n        entityid as entity_id,\n        defaultbillingaddress as billing_address_id,\n        defaultshippingaddress as shipping_address_id,\n        parent as parent_id\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__jobs\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:11.190263Z", "completed_at": "2024-09-16T09:21:12.249444Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:12.249936Z", "completed_at": "2024-09-16T09:21:12.249943Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.183016300201416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__location_main_address", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__location_main_address_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    addr1\n    \n as \n    \n    addr1\n    \n, \n    \n    \n    addr2\n    \n as \n    \n    addr2\n    \n, \n    \n    \n    addr3\n    \n as \n    \n    addr3\n    \n, \n    \n    \n    addressee\n    \n as \n    \n    addressee\n    \n, \n    \n    \n    addrphone\n    \n as \n    \n    addrphone\n    \n, \n    \n    \n    addrtext\n    \n as \n    \n    addrtext\n    \n, \n    \n    \n    attention\n    \n as \n    \n    attention\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    dropdownstate\n    \n as \n    \n    dropdownstate\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    nkey\n    \n as \n    \n    nkey\n    \n, \n    \n    \n    override\n    \n as \n    \n    override\n    \n, \n    \n    \n    recordowner\n    \n as \n    \n    recordowner\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        addr1,\n        addr2,\n        addr3,\n        addressee,\n        addrtext as full_address,\n        city,\n        country,\n        coalesce(state, dropdownstate) as state,\n        nkey,\n        zip as zipcode\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__location_main_address\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:11.306204Z", "completed_at": "2024-09-16T09:21:12.358680Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:12.359161Z", "completed_at": "2024-09-16T09:21:12.359166Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.1566109657287598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__locations", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__locations_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    mainaddress\n    \n as \n    \n    mainaddress\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as location_id,\n        name,\n        fullname as full_name,\n        mainaddress as main_address_id,\n        parent as parent_id,\n        subsidiary as subsidiary_id\n\n        --The below macro adds the fields defined within your locations_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:11.315642Z", "completed_at": "2024-09-16T09:21:12.401550Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:12.402047Z", "completed_at": "2024-09-16T09:21:12.402053Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.1893599033355713, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_accounting_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account\n    \n as \n    \n    account\n    \n, \n    \n    \n    accountingbook\n    \n as \n    \n    accountingbook\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amountlinked\n    \n as \n    \n    amountlinked\n    \n, \n    \n    \n    amountpaid\n    \n as \n    \n    amountpaid\n    \n, \n    \n    \n    amountunpaid\n    \n as \n    \n    amountunpaid\n    \n, \n    \n    \n    credit\n    \n as \n    \n    credit\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    debit\n    \n as \n    \n    debit\n    \n, \n    \n    \n    exchangerate\n    \n as \n    \n    exchangerate\n    \n, \n    \n    \n    netamount\n    \n as \n    \n    netamount\n    \n, \n    \n    \n    overheadparentitem\n    \n as \n    \n    overheadparentitem\n    \n, \n    \n    \n    paymentamountunused\n    \n as \n    \n    paymentamountunused\n    \n, \n    \n    \n    paymentamountused\n    \n as \n    \n    paymentamountused\n    \n, \n    \n    \n    posting\n    \n as \n    \n    posting\n    \n, \n    \n    \n    transaction\n    \n as \n    \n    transaction\n    \n, \n    \n    \n    transactionline\n    \n as \n    \n    transactionline\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        transaction as transaction_id,\n        transactionline as transaction_line_id,\n        accountingbook as accounting_book_id,\n        account as account_id,\n        posting = 'T' as is_posting,\n        exchangerate as exchange_rate,\n        amount,\n        credit as credit_amount,\n        debit as debit_amount,\n        netamount as net_amount,\n        amountpaid as paid_amount,\n        amountunpaid as unpaid_amount\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:11.319673Z", "completed_at": "2024-09-16T09:21:12.402576Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:12.403042Z", "completed_at": "2024-09-16T09:21:12.403045Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2000072002410889, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__subsidiaries_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    fullname\n    \n as \n    \n    fullname\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    mainaddress\n    \n as \n    \n    mainaddress\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    fiscalcalendar\n    \n as \n    \n    fiscalcalendar\n    \n, \n    \n    \n    parent\n    \n as \n    \n    parent\n    \n, \n    \n    \n    iselimination\n    \n as \n    \n    iselimination\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as subsidiary_id,\n        name,\n        fullname as full_name,\n        email as email_address,\n        mainaddress as main_address_id,\n        country,\n        state,\n        fiscalcalendar as fiscal_calendar_id,\n        parent as parent_id,\n        iselimination = 'T' as is_elimination,\n        currency as currency_id\n\n        --The below macro adds the fields defined within your subsidiaries_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:12.468314Z", "completed_at": "2024-09-16T09:21:13.572375Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:13.572847Z", "completed_at": "2024-09-16T09:21:13.572853Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2186789512634277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transactions", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transactions_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    transactionnumber\n    \n as \n    \n    transactionnumber\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    trandate\n    \n as \n    \n    trandate\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    cast(null as integer) as \n    \n    createdby\n    \n , \n    \n    \n    createddate\n    \n as \n    \n    createddate\n    \n, \n    \n    \n    duedate\n    \n as \n    \n    duedate\n    \n, \n    \n    \n    closedate\n    \n as \n    \n    closedate\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    entity\n    \n as \n    \n    entity\n    \n, \n    cast(null as integer) as \n    \n    lastmodifiedby\n    \n , \n    \n    \n    postingperiod\n    \n as \n    \n    postingperiod\n    \n, \n    \n    \n    posting\n    \n as \n    \n    posting\n    \n, \n    cast(null as TEXT) as \n    \n    intercoadj\n    \n , \n    \n    \n    isreversal\n    \n as \n    \n    isreversal\n    \n, \n    \n    \n    reversal\n    \n as \n    \n    reversal\n    \n, \n    \n    \n    reversaldate\n    \n as \n    \n    reversaldate\n    \n, \n    \n    \n    reversaldefer\n    \n as \n    \n    reversaldefer\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        cast(_fivetran_synced as date) as _fivetran_synced_date,\n        id as transaction_id,\n        transactionnumber as transaction_number,\n        type as transaction_type,\n        memo,\n        cast(trandate as date) as transaction_date,\n        status,\n        createddate as created_at,\n        cast(duedate as date) as due_date_at,\n        closedate as closed_at,\n        currency as currency_id,\n        entity as entity_id,\n        postingperiod as accounting_period_id,\n        posting = 'T' as is_posting,\n        intercoadj = 'T' as is_intercompany_adjustment,\n        isreversal = 'T' as is_reversal,\n        reversal as reversal_transaction_id,\n        cast(reversaldate as date) as reversal_date,\n        reversaldefer = 'T' as is_reversal_defer\n\n        --The below macro adds the fields defined within your transactions_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:12.376034Z", "completed_at": "2024-09-16T09:21:13.573293Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:13.573744Z", "completed_at": "2024-09-16T09:21:13.573748Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.3239030838012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__transaction_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_lines_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    transaction\n    \n as \n    \n    transaction\n    \n, \n    \n    \n    linesequencenumber\n    \n as \n    \n    linesequencenumber\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    entity\n    \n as \n    \n    entity\n    \n, \n    \n    \n    item\n    \n as \n    \n    item\n    \n, \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    subsidiary\n    \n as \n    \n    subsidiary\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    isclosed\n    \n as \n    \n    isclosed\n    \n, \n    \n    \n    isbillable\n    \n as \n    \n    isbillable\n    \n, \n    \n    \n    iscogs\n    \n as \n    \n    iscogs\n    \n, \n    \n    \n    cleared\n    \n as \n    \n    cleared\n    \n, \n    \n    \n    commitmentfirm\n    \n as \n    \n    commitmentfirm\n    \n, \n    \n    \n    mainline\n    \n as \n    \n    mainline\n    \n, \n    \n    \n    taxline\n    \n as \n    \n    taxline\n    \n, \n    \n    \n    eliminate\n    \n as \n    \n    eliminate\n    \n, \n    \n    \n    netamount\n    \n as \n    \n    netamount\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as transaction_line_id,\n        transaction as transaction_id,\n        linesequencenumber as transaction_line_number,\n        memo,\n        entity as entity_id,\n        item as item_id,\n        class as class_id,\n        location as location_id,\n        subsidiary as subsidiary_id,\n        department as department_id,\n        isclosed = 'T' as is_closed,\n        isbillable = 'T' as is_billable,\n        iscogs = 'T' as is_cogs,\n        cleared = 'T' as is_cleared,\n        commitmentfirm = 'T' as is_commitment_firm,\n        mainline = 'T' as is_main_line,\n        taxline = 'T' as is_tax_line,\n        eliminate = 'T' as is_eliminate,\n        netamount\n\n        --The below macro adds the fields defined within your transaction_lines_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:12.516619Z", "completed_at": "2024-09-16T09:21:13.610461Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:13.610925Z", "completed_at": "2024-09-16T09:21:13.610930Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2271418571472168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendors", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendors_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountnumber\n    \n as \n    \n    accountnumber\n    \n, \n    \n    \n    altemail\n    \n as \n    \n    altemail\n    \n, \n    \n    \n    altname\n    \n as \n    \n    altname\n    \n, \n    \n    \n    altphone\n    \n as \n    \n    altphone\n    \n, \n    \n    \n    balance\n    \n as \n    \n    balance\n    \n, \n    \n    \n    balanceprimary\n    \n as \n    \n    balanceprimary\n    \n, \n    cast(null as integer) as \n    \n    billingclass\n    \n , \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    companyname\n    \n as \n    \n    companyname\n    \n, \n    \n    \n    contact\n    \n as \n    \n    contact\n    \n, \n    \n    \n    contactlist\n    \n as \n    \n    contactlist\n    \n, \n    \n    \n    creditlimit\n    \n as \n    \n    creditlimit\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    datecreated\n    \n as \n    \n    datecreated\n    \n, \n    \n    \n    defaultbankaccount\n    \n as \n    \n    defaultbankaccount\n    \n, \n    \n    \n    defaultbillingaddress\n    \n as \n    \n    defaultbillingaddress\n    \n, \n    \n    \n    defaultshippingaddress\n    \n as \n    \n    defaultshippingaddress\n    \n, \n    \n    \n    defaultvendorpaymentaccount\n    \n as \n    \n    defaultvendorpaymentaccount\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    emailpreference\n    \n as \n    \n    emailpreference\n    \n, \n    \n    \n    emailtransactions\n    \n as \n    \n    emailtransactions\n    \n, \n    \n    \n    entityid\n    \n as \n    \n    entityid\n    \n, \n    \n    \n    entitynumber\n    \n as \n    \n    entitynumber\n    \n, \n    \n    \n    entitytitle\n    \n as \n    \n    entitytitle\n    \n, \n    \n    \n    expenseaccount\n    \n as \n    \n    expenseaccount\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    fax\n    \n as \n    \n    fax\n    \n, \n    \n    \n    faxtransactions\n    \n as \n    \n    faxtransactions\n    \n, \n    \n    \n    firstname\n    \n as \n    \n    firstname\n    \n, \n    \n    \n    giveaccess\n    \n as \n    \n    giveaccess\n    \n, \n    \n    \n    homephone\n    \n as \n    \n    homephone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    incoterm\n    \n as \n    \n    incoterm\n    \n, \n    cast(null as TEXT) as \n    \n    isautogeneratedrepresentingentity\n    \n , \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    isjobresourcevend\n    \n as \n    \n    isjobresourcevend\n    \n, \n    \n    \n    isperson\n    \n as \n    \n    isperson\n    \n, \n    \n    \n    laborcost\n    \n as \n    \n    laborcost\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    lastname\n    \n as \n    \n    lastname\n    \n, \n    \n    \n    legalname\n    \n as \n    \n    legalname\n    \n, \n    \n    \n    middlename\n    \n as \n    \n    middlename\n    \n, \n    \n    \n    mobilephone\n    \n as \n    \n    mobilephone\n    \n, \n    \n    \n    payablesaccount\n    \n as \n    \n    payablesaccount\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    printoncheckas\n    \n as \n    \n    printoncheckas\n    \n, \n    \n    \n    printtransactions\n    \n as \n    \n    printtransactions\n    \n, \n    \n    \n    purchaseorderamount\n    \n as \n    \n    purchaseorderamount\n    \n, \n    \n    \n    purchaseorderquantity\n    \n as \n    \n    purchaseorderquantity\n    \n, \n    \n    \n    purchaseorderquantitydiff\n    \n as \n    \n    purchaseorderquantitydiff\n    \n, \n    \n    \n    receiptamount\n    \n as \n    \n    receiptamount\n    \n, \n    \n    \n    receiptquantity\n    \n as \n    \n    receiptquantity\n    \n, \n    \n    \n    receiptquantitydiff\n    \n as \n    \n    receiptquantitydiff\n    \n, \n    cast(null as integer) as \n    \n    representingsubsidiary\n    \n , \n    \n    \n    rolesforsearch\n    \n as \n    \n    rolesforsearch\n    \n, \n    \n    \n    salutation\n    \n as \n    \n    salutation\n    \n, \n    \n    \n    subsidiaryedition\n    \n as \n    \n    subsidiaryedition\n    \n, \n    \n    \n    terms\n    \n as \n    \n    terms\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    unbilledorders\n    \n as \n    \n    unbilledorders\n    \n, \n    \n    \n    unbilledordersprimary\n    \n as \n    \n    unbilledordersprimary\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    workcalendar\n    \n as \n    \n    workcalendar\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        id as vendor_id,\n        altname as alt_name,\n        companyname as company_name,\n        datecreated as create_date_at,\n        category as vendor_category_id\n\n        --The below macro adds the fields defined within your vendors_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendors\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:12.509163Z", "completed_at": "2024-09-16T09:21:13.668326Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:13.668770Z", "completed_at": "2024-09-16T09:21:13.668774Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2664520740509033, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite2__vendor_categories", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendor_categories_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    date_deleted\n    \n as \n    \n    date_deleted\n    \n, \n    \n    \n    externalid\n    \n as \n    \n    externalid\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    isinactive\n    \n as \n    \n    isinactive\n    \n, \n    \n    \n    istaxagency\n    \n as \n    \n    istaxagency\n    \n, \n    \n    \n    lastmodifieddate\n    \n as \n    \n    lastmodifieddate\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as vendor_category_id,\n        name,\n        _fivetran_synced\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendor_categories\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:13.774544Z", "completed_at": "2024-09-16T09:21:14.783270Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:14.784477Z", "completed_at": "2024-09-16T09:21:14.784481Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.1085307598114014, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__classes", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__classes_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    class_id\n    \n as \n    \n    class_id\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        class_id,\n        full_name,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your classes_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__classes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:13.699142Z", "completed_at": "2024-09-16T09:21:14.771821Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:14.784202Z", "completed_at": "2024-09-16T09:21:14.784210Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.1846940517425537, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_periods", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_periods_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as TEXT) as \n    \n    _fivetran_id\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    cast(null as TEXT) as \n    \n    closed_accounts_payable\n    \n , \n    cast(null as TEXT) as \n    \n    closed_accounts_receivable\n    \n , \n    cast(null as TEXT) as \n    \n    closed_all\n    \n , \n    cast(null as timestamp) as \n    \n    closed_on\n    \n , \n    cast(null as TEXT) as \n    \n    closed_payroll\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    \n    \n    ending\n    \n as \n    \n    ending\n    \n, \n    \n    \n    fiscal_calendar_id\n    \n as \n    \n    fiscal_calendar_id\n    \n, \n    cast(null as TEXT) as \n    \n    fivetran_index\n    \n , \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    is_adjustment\n    \n as \n    \n    is_adjustment\n    \n, \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    locked_accounts_payable\n    \n , \n    cast(null as TEXT) as \n    \n    locked_accounts_receivable\n    \n , \n    cast(null as TEXT) as \n    \n    locked_all\n    \n , \n    cast(null as TEXT) as \n    \n    locked_payroll\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    \n    \n    quarter\n    \n as \n    \n    quarter\n    \n, \n    \n    \n    starting\n    \n as \n    \n    starting\n    \n, \n    \n    \n    year_0\n    \n as \n    \n    year_0\n    \n, \n    \n    \n    year_id\n    \n as \n    \n    year_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        accounting_period_id,\n        name,\n        full_name,\n        fiscal_calendar_id,\n        year_id,\n        starting as starting_at,\n        ending as ending_at,\n        quarter,\n        year_0,\n        is_adjustment,\n        closed as is_closed,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_periods\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:13.687373Z", "completed_at": "2024-09-16T09:21:14.787856Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:14.788434Z", "completed_at": "2024-09-16T09:21:14.788439Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2093729972839355, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounting_books", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_books_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    accounting_book_extid\n    \n , \n    \n    \n    accounting_book_id\n    \n as \n    \n    accounting_book_id\n    \n, \n    cast(null as TEXT) as \n    \n    accounting_book_name\n    \n , \n    cast(null as float) as \n    \n    base_book_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_created\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as float) as \n    \n    effective_period_id\n    \n , \n    cast(null as TEXT) as \n    \n    form_template_component_id\n    \n , \n    cast(null as float) as \n    \n    form_template_id\n    \n , \n    cast(null as TEXT) as \n    \n    is_adjustment_only\n    \n , \n    cast(null as TEXT) as \n    \n    is_arrangement_level_reclass\n    \n , \n    cast(null as TEXT) as \n    \n    is_consolidated\n    \n , \n    cast(null as TEXT) as \n    \n    is_contingent_revenue_handling\n    \n , \n    cast(null as TEXT) as \n    \n    is_include_child_subsidiaries\n    \n , \n    \n    \n    is_primary\n    \n as \n    \n    is_primary\n    \n, \n    cast(null as TEXT) as \n    \n    is_two_step_revenue_allocation\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    unbilled_receivable_grouping\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        accounting_book_id,\n        is_primary,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_books\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:13.744248Z", "completed_at": "2024-09-16T09:21:14.804943Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:14.805430Z", "completed_at": "2024-09-16T09:21:14.805437Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1984219551086426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    \n    \n    general_rate_type\n    \n as \n    \n    general_rate_type\n    \n, \n    \n    \n    is_balancesheet\n    \n as \n    \n    is_balancesheet\n    \n, \n    \n    \n    is_leftside\n    \n as \n    \n    is_leftside\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    type_name\n    \n as \n    \n    type_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        account_id,\n        parent_id,\n        name,\n        type_name,\n        accountnumber as account_number,\n        general_rate_type,\n        is_leftside,\n        is_balancesheet,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your accounts_pass_through_columns variable into the staging model\n        \n\n\n\n\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:14.943487Z", "completed_at": "2024-09-16T09:21:15.971889Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:15.972386Z", "completed_at": "2024-09-16T09:21:15.972394Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1508541107177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__departments", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__departments_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    department_id\n    \n as \n    \n    department_id\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        department_id,\n        name,\n        full_name,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your departments_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__departments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:14.897603Z", "completed_at": "2024-09-16T09:21:15.972839Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:15.973333Z", "completed_at": "2024-09-16T09:21:15.973336Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2131969928741455, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__customers", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__customers_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    cast(null as TEXT) as \n    \n    companyname\n    \n , \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    cast(null as TEXT) as \n    \n    customer_extid\n    \n , \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date_first_order\n    \n as \n    \n    date_first_order\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    zipcode\n    \n as \n    \n    zipcode\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id,\n        companyname as company_name,\n        customer_extid as customer_external_id,\n        city,\n        state,\n        zipcode,\n        country,\n        date_first_order as date_first_order_at,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your customers_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:14.890852Z", "completed_at": "2024-09-16T09:21:15.989135Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:15.989623Z", "completed_at": "2024-09-16T09:21:15.989628Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.227858066558838, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__currencies", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__currencies_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    currency_extid\n    \n , \n    \n    \n    currency_id\n    \n as \n    \n    currency_id\n    \n, \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    is_inactive\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    precision_0\n    \n , \n    \n    \n    symbol\n    \n as \n    \n    symbol\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        currency_id,\n        name,\n        symbol,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__currencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:14.885291Z", "completed_at": "2024-09-16T09:21:16.131777Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:16.133007Z", "completed_at": "2024-09-16T09:21:16.133012Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.3553080558776855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__consolidated_exchange_rates", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accounting_book_id\n    \n as \n    \n    accounting_book_id\n    \n, \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    cast(null as float) as \n    \n    average_budget_rate\n    \n , \n    \n    \n    average_rate\n    \n as \n    \n    average_rate\n    \n, \n    \n    \n    consolidated_exchange_rate_id\n    \n as \n    \n    consolidated_exchange_rate_id\n    \n, \n    cast(null as float) as \n    \n    current_budget_rate\n    \n , \n    \n    \n    current_rate\n    \n as \n    \n    current_rate\n    \n, \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    \n    \n    from_subsidiary_id\n    \n as \n    \n    from_subsidiary_id\n    \n, \n    cast(null as float) as \n    \n    historical_budget_rate\n    \n , \n    \n    \n    historical_rate\n    \n as \n    \n    historical_rate\n    \n, \n    \n    \n    to_subsidiary_id\n    \n as \n    \n    to_subsidiary_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        consolidated_exchange_rate_id,\n        accounting_book_id,\n        accounting_period_id,\n        average_rate,\n        current_rate,\n        historical_rate,\n        from_subsidiary_id,\n        to_subsidiary_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your consolidated_exchange_rates_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:16.123958Z", "completed_at": "2024-09-16T09:21:17.183184Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:17.183643Z", "completed_at": "2024-09-16T09:21:17.183646Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.173203945159912, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__income_accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__income_accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as float) as \n    \n    current_balance\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    desription\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    income_account_extid\n    \n , \n    \n    \n    income_account_id\n    \n as \n    \n    income_account_id\n    \n, \n    cast(null as TEXT) as \n    \n    is_including_child_subs\n    \n , \n    cast(null as TEXT) as \n    \n    is_summary\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        income_account_id,\n        name, \n        parent_id,\n        account_number,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__income_accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:16.104612Z", "completed_at": "2024-09-16T09:21:17.182199Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:17.182716Z", "completed_at": "2024-09-16T09:21:17.182731Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1980319023132324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__expense_accounts", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__expense_accounts_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as float) as \n    \n    current_balance\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    desription\n    \n , \n    cast(null as TEXT) as \n    \n    expense_account_extid\n    \n , \n    \n    \n    expense_account_id\n    \n as \n    \n    expense_account_id\n    \n, \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    is_including_child_subs\n    \n , \n    cast(null as TEXT) as \n    \n    is_summary\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        expense_account_id,\n        name,\n        parent_id,\n        account_number,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__expense_accounts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:16.249933Z", "completed_at": "2024-09-16T09:21:17.289719Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:17.290250Z", "completed_at": "2024-09-16T09:21:17.290259Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.150390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__locations", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__locations_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        location_id,\n        name,\n        full_name,\n        city,\n        country,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your locations_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:16.128123Z", "completed_at": "2024-09-16T09:21:17.290822Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:17.291284Z", "completed_at": "2024-09-16T09:21:17.291288Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.282339096069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__items", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__items_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    allow_drop_ship\n    \n , \n    cast(null as float) as \n    \n    alt_demand_source_item_id\n    \n , \n    cast(null as float) as \n    \n    asset_account_id\n    \n , \n    cast(null as float) as \n    \n    atp_lead_time\n    \n , \n    cast(null as TEXT) as \n    \n    atp_method\n    \n , \n    cast(null as TEXT) as \n    \n    available_to_partners\n    \n , \n    cast(null as TEXT) as \n    \n    avatax_taxcode\n    \n , \n    cast(null as float) as \n    \n    averagecost\n    \n , \n    cast(null as float) as \n    \n    backward_consumption_days\n    \n , \n    cast(null as TEXT) as \n    \n    build_sub_assemblies\n    \n , \n    cast(null as float) as \n    \n    class_id\n    \n , \n    cast(null as float) as \n    \n    code_of_supply_id\n    \n , \n    cast(null as TEXT) as \n    \n    commodity_code\n    \n , \n    cast(null as float) as \n    \n    consumption_unit_id\n    \n , \n    cast(null as float) as \n    \n    cost_0\n    \n , \n    cast(null as TEXT) as \n    \n    cost_category\n    \n , \n    cast(null as TEXT) as \n    \n    cost_estimate_type\n    \n , \n    cast(null as TEXT) as \n    \n    costing_method\n    \n , \n    cast(null as TEXT) as \n    \n    country_of_manufacture\n    \n , \n    cast(null as TEXT) as \n    \n    create_plan_on_event_type\n    \n , \n    cast(null as timestamp) as \n    \n    created\n    \n , \n    cast(null as float) as \n    \n    current_on_order_count\n    \n , \n    cast(null as float) as \n    \n    custreturn_variance_account_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as timestamp) as \n    \n    date_of_last_transaction\n    \n , \n    cast(null as float) as \n    \n    default_return_cost\n    \n , \n    cast(null as float) as \n    \n    deferred_expense_account_id\n    \n , \n    cast(null as float) as \n    \n    deferred_revenue_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    demand_source\n    \n , \n    cast(null as float) as \n    \n    demand_time_fence\n    \n , \n    cast(null as float) as \n    \n    department_id\n    \n , \n    cast(null as TEXT) as \n    \n    deposit\n    \n , \n    cast(null as TEXT) as \n    \n    displayname\n    \n , \n    cast(null as TEXT) as \n    \n    distribution_category\n    \n , \n    cast(null as TEXT) as \n    \n    distribution_network\n    \n , \n    cast(null as float) as \n    \n    dropship_expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    effective_bom_control_type\n    \n , \n    cast(null as float) as \n    \n    expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    featureddescription\n    \n , \n    cast(null as TEXT) as \n    \n    featureditem\n    \n , \n    cast(null as float) as \n    \n    fixed_lot_size\n    \n , \n    cast(null as float) as \n    \n    forward_consumption_days\n    \n , \n    cast(null as TEXT) as \n    \n    fraud_risk\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as float) as \n    \n    fx_adjustment_account_id\n    \n , \n    cast(null as float) as \n    \n    gain_loss_account_id\n    \n , \n    cast(null as float) as \n    \n    handling_cost\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_hazard_class\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_id\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_item_units\n    \n , \n    cast(null as float) as \n    \n    hazmat_item_units_qty\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_packing_group\n    \n , \n    cast(null as TEXT) as \n    \n    hazmat_shipping_name\n    \n , \n    cast(null as TEXT) as \n    \n    include_child_subsidiaries\n    \n , \n    cast(null as float) as \n    \n    income_account_id\n    \n , \n    cast(null as float) as \n    \n    interco_expense_account_id\n    \n , \n    cast(null as float) as \n    \n    interco_income_account_id\n    \n , \n    cast(null as float) as \n    \n    invt_count_classification\n    \n , \n    cast(null as float) as \n    \n    invt_count_interval\n    \n , \n    cast(null as TEXT) as \n    \n    is_cont_rev_handling\n    \n , \n    cast(null as TEXT) as \n    \n    is_enforce_min_qty_internally\n    \n , \n    cast(null as TEXT) as \n    \n    is_hold_rev_rec\n    \n , \n    cast(null as TEXT) as \n    \n    is_moss\n    \n , \n    cast(null as TEXT) as \n    \n    is_phantom\n    \n , \n    cast(null as TEXT) as \n    \n    is_special_order_item\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    isonline\n    \n , \n    cast(null as TEXT) as \n    \n    istaxable\n    \n , \n    cast(null as float) as \n    \n    item_defined_cost\n    \n , \n    cast(null as TEXT) as \n    \n    item_extid\n    \n , \n    \n    \n    item_id\n    \n as \n    \n    item_id\n    \n, \n    cast(null as float) as \n    \n    item_image\n    \n , \n    cast(null as TEXT) as \n    \n    item_revenue_category\n    \n , \n    cast(null as float) as \n    \n    item_term_id\n    \n , \n    cast(null as timestamp) as \n    \n    last_cogs_correction\n    \n , \n    cast(null as timestamp) as \n    \n    last_invt_count_date\n    \n , \n    cast(null as float) as \n    \n    last_purchase_price\n    \n , \n    cast(null as float) as \n    \n    location_id\n    \n , \n    cast(null as TEXT) as \n    \n    lot_numbered_item\n    \n , \n    cast(null as TEXT) as \n    \n    lot_sizing_method\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturer\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturing_charge_item\n    \n , \n    cast(null as TEXT) as \n    \n    match_bill_to_receipt\n    \n , \n    cast(null as TEXT) as \n    \n    matrix_type\n    \n , \n    cast(null as float) as \n    \n    maximum_quantity\n    \n , \n    cast(null as float) as \n    \n    minimum_quantity\n    \n , \n    cast(null as timestamp) as \n    \n    modified\n    \n , \n    cast(null as TEXT) as \n    \n    mpn\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    nature_of_transaction_codes_id\n    \n , \n    cast(null as timestamp) as \n    \n    next_invt_count_date\n    \n , \n    cast(null as float) as \n    \n    ng_asset_type_id\n    \n , \n    cast(null as float) as \n    \n    ns_lead_time\n    \n , \n    cast(null as TEXT) as \n    \n    offersupport\n    \n , \n    cast(null as TEXT) as \n    \n    onspecial\n    \n , \n    cast(null as TEXT) as \n    \n    overhead_type\n    \n , \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    cast(null as float) as \n    \n    payment_method_id\n    \n , \n    cast(null as float) as \n    \n    periodic_lot_size_days\n    \n , \n    cast(null as TEXT) as \n    \n    periodic_lot_size_type\n    \n , \n    cast(null as float) as \n    \n    pref_purchase_tax_id\n    \n , \n    cast(null as float) as \n    \n    pref_sale_tax_id\n    \n , \n    cast(null as float) as \n    \n    pref_stock_level\n    \n , \n    cast(null as TEXT) as \n    \n    prices_include_tax\n    \n , \n    cast(null as float) as \n    \n    pricing_group_id\n    \n , \n    cast(null as TEXT) as \n    \n    print_sub_items\n    \n , \n    cast(null as float) as \n    \n    prod_price_var_account_id\n    \n , \n    cast(null as float) as \n    \n    prod_qty_var_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    prompt_payment_discount_item\n    \n , \n    cast(null as float) as \n    \n    purchase_price_var_account_id\n    \n , \n    cast(null as float) as \n    \n    purchase_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    purchasedescription\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as float) as \n    \n    quantityavailable\n    \n , \n    cast(null as float) as \n    \n    quantitybackordered\n    \n , \n    cast(null as float) as \n    \n    quantityonhand\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as float) as \n    \n    reorder_multiple\n    \n , \n    cast(null as float) as \n    \n    reorderpoint\n    \n , \n    cast(null as TEXT) as \n    \n    replenishment_method\n    \n , \n    cast(null as TEXT) as \n    \n    resalable\n    \n , \n    cast(null as float) as \n    \n    reschedule_in_days\n    \n , \n    cast(null as float) as \n    \n    reschedule_out_days\n    \n , \n    cast(null as float) as \n    \n    rev_rec_forecast_rule_id\n    \n , \n    cast(null as float) as \n    \n    rev_rec_rule_id\n    \n , \n    cast(null as TEXT) as \n    \n    revenue_allocation_group\n    \n , \n    cast(null as TEXT) as \n    \n    round_up_as_component\n    \n , \n    cast(null as float) as \n    \n    safety_stock_days\n    \n , \n    cast(null as float) as \n    \n    safety_stock_level\n    \n , \n    cast(null as float) as \n    \n    sale_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    salesdescription\n    \n , \n    cast(null as TEXT) as \n    \n    salesforce_id\n    \n , \n    cast(null as TEXT) as \n    \n    salesprice\n    \n , \n    cast(null as float) as \n    \n    scrap_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    serialized_item\n    \n , \n    cast(null as float) as \n    \n    shippingcost\n    \n , \n    cast(null as TEXT) as \n    \n    special_work_order_item\n    \n , \n    cast(null as TEXT) as \n    \n    specialsdescription\n    \n , \n    cast(null as float) as \n    \n    stock_unit_id\n    \n , \n    cast(null as TEXT) as \n    \n    storedescription\n    \n , \n    cast(null as TEXT) as \n    \n    storedetaileddescription\n    \n , \n    cast(null as TEXT) as \n    \n    storedisplayname\n    \n , \n    cast(null as TEXT) as \n    \n    subtype\n    \n , \n    cast(null as TEXT) as \n    \n    supplementary_unit__abberviat\n    \n , \n    cast(null as float) as \n    \n    supplementary_unit_id\n    \n , \n    cast(null as float) as \n    \n    supply_time_fence\n    \n , \n    cast(null as TEXT) as \n    \n    supply_type\n    \n , \n    cast(null as float) as \n    \n    tax_item_id\n    \n , \n    cast(null as float) as \n    \n    totalvalue\n    \n , \n    cast(null as float) as \n    \n    transferprice\n    \n , \n    \n    \n    type_name\n    \n as \n    \n    type_name\n    \n, \n    cast(null as float) as \n    \n    type_of_goods_id\n    \n , \n    cast(null as TEXT) as \n    \n    udf1\n    \n , \n    cast(null as TEXT) as \n    \n    udf2\n    \n , \n    cast(null as TEXT) as \n    \n    un_number\n    \n , \n    cast(null as float) as \n    \n    unbuild_variance_account_id\n    \n , \n    cast(null as float) as \n    \n    units_type_id\n    \n , \n    cast(null as TEXT) as \n    \n    upc_code\n    \n , \n    cast(null as TEXT) as \n    \n    use_component_yield\n    \n , \n    cast(null as float) as \n    \n    vendor_id\n    \n , \n    cast(null as TEXT) as \n    \n    vendorname\n    \n , \n    cast(null as float) as \n    \n    vendreturn_variance_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_deferral\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_delivered\n    \n , \n    cast(null as TEXT) as \n    \n    vsoe_discount\n    \n , \n    cast(null as float) as \n    \n    vsoe_price\n    \n , \n    cast(null as float) as \n    \n    weight\n    \n , \n    cast(null as float) as \n    \n    weight_in_user_defined_unit\n    \n , \n    cast(null as float) as \n    \n    weight_unit_index\n    \n , \n    cast(null as float) as \n    \n    wip_account_id\n    \n , \n    cast(null as float) as \n    \n    wip_cost_variance_account_id\n    \n , \n    cast(null as float) as \n    \n    work_order_lead_time\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        item_id,\n        name,\n        type_name,\n        salesdescription as sales_description,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your items_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:17.406573Z", "completed_at": "2024-09-16T09:21:18.985168Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:18.987350Z", "completed_at": "2024-09-16T09:21:18.987677Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.7913239002227783, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendor_types", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendor_types_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as float) as \n    \n    parent_id\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_type_extid\n    \n , \n    \n    \n    vendor_type_id\n    \n as \n    \n    vendor_type_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        vendor_type_id,\n        name,\n        _fivetran_deleted\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendor_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:17.295291Z", "completed_at": "2024-09-16T09:21:18.989270Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.036046Z", "completed_at": "2024-09-16T09:21:19.036057Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.9039607048034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__subsidiaries", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__subsidiaries_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    address\n    \n , \n    cast(null as TEXT) as \n    \n    address1\n    \n , \n    cast(null as TEXT) as \n    \n    address2\n    \n , \n    cast(null as float) as \n    \n    base_currency_id\n    \n , \n    cast(null as TEXT) as \n    \n    branch_id\n    \n , \n    cast(null as TEXT) as \n    \n    brn\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    edition\n    \n , \n    cast(null as TEXT) as \n    \n    federal_number\n    \n , \n    \n    \n    fiscal_calendar_id\n    \n as \n    \n    fiscal_calendar_id\n    \n, \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    is_elimination\n    \n , \n    cast(null as TEXT) as \n    \n    is_moss\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive_bool\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    cast(null as float) as \n    \n    moss_nexus_id\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    return_address\n    \n , \n    cast(null as TEXT) as \n    \n    return_address1\n    \n , \n    cast(null as TEXT) as \n    \n    return_address2\n    \n , \n    cast(null as TEXT) as \n    \n    return_city\n    \n , \n    cast(null as TEXT) as \n    \n    return_country\n    \n , \n    cast(null as TEXT) as \n    \n    return_state\n    \n , \n    cast(null as TEXT) as \n    \n    return_zipcode\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address1\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_address2\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_city\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_country\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_state\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_zipcode\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    state_tax_number\n    \n , \n    cast(null as float) as \n    \n    subnav__searchable_subsidiary\n    \n , \n    cast(null as TEXT) as \n    \n    subsidiary_extid\n    \n , \n    \n    \n    subsidiary_id\n    \n as \n    \n    subsidiary_id\n    \n, \n    cast(null as float) as \n    \n    taxonomy_reference_id\n    \n , \n    cast(null as TEXT) as \n    \n    tran_num_prefix\n    \n , \n    cast(null as TEXT) as \n    \n    uen\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n , \n    cast(null as TEXT) as \n    \n    zipcode\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        subsidiary_id,\n        fiscal_calendar_id,\n        full_name,\n        name,\n        parent_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your subsidiaries_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__subsidiaries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:17.399604Z", "completed_at": "2024-09-16T09:21:18.988173Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.013883Z", "completed_at": "2024-09-16T09:21:19.013889Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.802483081817627, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transactions", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transactions_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    accounting_period_id\n    \n as \n    \n    accounting_period_id\n    \n, \n    \n    \n    currency_id\n    \n as \n    \n    currency_id\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    is_advanced_intercompany\n    \n as \n    \n    is_advanced_intercompany\n    \n, \n    \n    \n    is_intercompany\n    \n as \n    \n    is_intercompany\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    cast(null as timestamp) as \n    \n    trandate\n    \n , \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    transaction_type\n    \n as \n    \n    transaction_type\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        transaction_id,\n        status,\n        trandate as transaction_date,\n        currency_id,\n        accounting_period_id,\n        due_date as due_date_at,\n        transaction_type,\n        is_intercompany,\n        is_advanced_intercompany,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your transactions_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:17.301678Z", "completed_at": "2024-09-16T09:21:18.986928Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.012517Z", "completed_at": "2024-09-16T09:21:19.012529Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.9050629138946533, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__transaction_lines", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transaction_lines_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    class_id\n    \n as \n    \n    class_id\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n, \n    \n    \n    department_id\n    \n as \n    \n    department_id\n    \n, \n    \n    \n    item_id\n    \n as \n    \n    item_id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    memo\n    \n as \n    \n    memo\n    \n, \n    \n    \n    non_posting_line\n    \n as \n    \n    non_posting_line\n    \n, \n    \n    \n    subsidiary_id\n    \n as \n    \n    subsidiary_id\n    \n, \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    transaction_line_id\n    \n as \n    \n    transaction_line_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        transaction_id,\n        transaction_line_id,\n        subsidiary_id,\n        account_id,\n        company_id,\n        item_id,\n        amount,\n        non_posting_line,\n        class_id,\n        location_id,\n        department_id,\n        memo\n\n        --The below macro adds the fields defined within your transaction_lines_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transaction_lines\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.475393Z", "completed_at": "2024-09-16T09:21:19.611198Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.613865Z", "completed_at": "2024-09-16T09:21:19.613876Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.23041892051696777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_books_accounting_book_id.70d96d1230", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_book_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_books\"\nwhere accounting_book_id is not null\ngroup by accounting_book_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.589635Z", "completed_at": "2024-09-16T09:21:19.611769Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.614185Z", "completed_at": "2024-09-16T09:21:19.614189Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.24611663818359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__account_types_account_type_id.20889967ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_type_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__account_types\"\nwhere account_type_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.446875Z", "completed_at": "2024-09-16T09:21:19.612351Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.617901Z", "completed_at": "2024-09-16T09:21:19.617908Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2615180015563965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_books_accounting_book_id.1b7504d30e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_book_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_books\"\nwhere accounting_book_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.663201Z", "completed_at": "2024-09-16T09:21:19.709376Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.710941Z", "completed_at": "2024-09-16T09:21:19.710956Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.054904937744140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_book_subsidiaries__fivetran_id.76e6e71411", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.697330Z", "completed_at": "2024-09-16T09:21:19.709735Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.711940Z", "completed_at": "2024-09-16T09:21:19.711947Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.055909156799316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__account_types_account_type_id.aaea9bec0f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_type_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__account_types\"\nwhere account_type_id is not null\ngroup by account_type_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.702310Z", "completed_at": "2024-09-16T09:21:19.711549Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.721277Z", "completed_at": "2024-09-16T09:21:19.721287Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0651710033416748, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_book_subsidiaries__fivetran_id.27ddb08396", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_book_subsidiaries\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.728576Z", "completed_at": "2024-09-16T09:21:19.851948Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.853324Z", "completed_at": "2024-09-16T09:21:19.853332Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.13187289237976074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_period_fiscal_cal__fivetran_id.ec8750b679", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.845865Z", "completed_at": "2024-09-16T09:21:19.852278Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.853686Z", "completed_at": "2024-09-16T09:21:19.853693Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12938594818115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_period_fiscal_cal__fivetran_id.d2038de348", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_period_fiscal_cal\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.849138Z", "completed_at": "2024-09-16T09:21:19.853984Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.856242Z", "completed_at": "2024-09-16T09:21:19.856246Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01212000846862793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__consolidated_exchange_rates_consolidated_exchange_rate_id.09703507c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect consolidated_exchange_rate_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.858595Z", "completed_at": "2024-09-16T09:21:19.869274Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.870988Z", "completed_at": "2024-09-16T09:21:19.870996Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015897035598754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__consolidated_exchange_rates_consolidated_exchange_rate_id.2d4725bb7a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    consolidated_exchange_rate_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is not null\ngroup by consolidated_exchange_rate_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.861732Z", "completed_at": "2024-09-16T09:21:19.869558Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.871383Z", "completed_at": "2024-09-16T09:21:19.871389Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0160219669342041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounting_periods_accounting_period_id.f2db2c547c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_period_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_periods\"\nwhere accounting_period_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.865349Z", "completed_at": "2024-09-16T09:21:19.870584Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.873538Z", "completed_at": "2024-09-16T09:21:19.873543Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010432958602905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounting_periods_accounting_period_id.a9d8f4c6e1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_period_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounting_periods\"\nwhere accounting_period_id is not null\ngroup by accounting_period_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.885624Z", "completed_at": "2024-09-16T09:21:19.900424Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.902211Z", "completed_at": "2024-09-16T09:21:19.902220Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02782273292541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__accounts_account_id.23a63b3e17", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounts\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.877676Z", "completed_at": "2024-09-16T09:21:19.900797Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.902608Z", "completed_at": "2024-09-16T09:21:19.902613Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0289461612701416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__accounts_account_id.5a542e47a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__accounts\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.896634Z", "completed_at": "2024-09-16T09:21:19.901857Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.904713Z", "completed_at": "2024-09-16T09:21:19.904719Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029259920120239258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__classes_class_id.799b01ffba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect class_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__classes\"\nwhere class_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.912144Z", "completed_at": "2024-09-16T09:21:19.933592Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.943140Z", "completed_at": "2024-09-16T09:21:19.943149Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.039092063903808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__currencies_currency_id.7eff9f9c1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect currency_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__currencies\"\nwhere currency_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.909136Z", "completed_at": "2024-09-16T09:21:19.941087Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.949417Z", "completed_at": "2024-09-16T09:21:19.949426Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04491591453552246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__classes_class_id.d069e30c98", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    class_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__classes\"\nwhere class_id is not null\ngroup by class_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.916494Z", "completed_at": "2024-09-16T09:21:19.944649Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:19.952511Z", "completed_at": "2024-09-16T09:21:19.952517Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04683685302734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__currencies_currency_id.50d9c37c78", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    currency_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__currencies\"\nwhere currency_id is not null\ngroup by currency_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.958561Z", "completed_at": "2024-09-16T09:21:19.982777Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.003063Z", "completed_at": "2024-09-16T09:21:20.003071Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.06200981140136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__customers_customer_id.65a5ae302a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.970421Z", "completed_at": "2024-09-16T09:21:20.002162Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.020040Z", "completed_at": "2024-09-16T09:21:20.020047Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07328009605407715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__customers_customer_id.05ca0360f2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.983512Z", "completed_at": "2024-09-16T09:21:20.018852Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.030753Z", "completed_at": "2024-09-16T09:21:20.030759Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.06812691688537598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__employees_employee_id.acce687f22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect employee_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__employees\"\nwhere employee_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.038461Z", "completed_at": "2024-09-16T09:21:20.054320Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.060572Z", "completed_at": "2024-09-16T09:21:20.060690Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03231096267700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__employees_employee_id.3c6cf9e444", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    employee_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__employees\"\nwhere employee_id is not null\ngroup by employee_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.047412Z", "completed_at": "2024-09-16T09:21:20.061177Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.065499Z", "completed_at": "2024-09-16T09:21:20.065505Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.038110971450805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__departments_department_id.7395bbfe71", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect department_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__departments\"\nwhere department_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.055766Z", "completed_at": "2024-09-16T09:21:20.064438Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.077326Z", "completed_at": "2024-09-16T09:21:20.077349Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.037735939025878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__departments_department_id.13e4897f0b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    department_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__departments\"\nwhere department_id is not null\ngroup by department_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.078614Z", "completed_at": "2024-09-16T09:21:20.096278Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.119791Z", "completed_at": "2024-09-16T09:21:20.119800Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.056113243103027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__entities_entity_id.f22c18cfa2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect entity_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__entities\"\nwhere entity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.087847Z", "completed_at": "2024-09-16T09:21:20.100044Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.125423Z", "completed_at": "2024-09-16T09:21:20.125435Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.042109012603759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__entities_entity_id.f9acd04f50", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    entity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__entities\"\nwhere entity_id is not null\ngroup by entity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.101489Z", "completed_at": "2024-09-16T09:21:20.126383Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.142725Z", "completed_at": "2024-09-16T09:21:20.142735Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0691988468170166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__items_item_id.e216b5b06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__items\"\nwhere item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.144533Z", "completed_at": "2024-09-16T09:21:20.158323Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.167061Z", "completed_at": "2024-09-16T09:21:20.167068Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.051354169845581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__items_item_id.3fcafd9eee", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__items\"\nwhere item_id is not null\ngroup by item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.158602Z", "completed_at": "2024-09-16T09:21:20.178503Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.183592Z", "completed_at": "2024-09-16T09:21:20.183598Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0438237190246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__jobs_job_id.d7b5b06b33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect job_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__jobs\"\nwhere job_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.167984Z", "completed_at": "2024-09-16T09:21:20.183199Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.188910Z", "completed_at": "2024-09-16T09:21:20.188917Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03147315979003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__jobs_job_id.c294ea849c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    job_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__jobs\"\nwhere job_id is not null\ngroup by job_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.189581Z", "completed_at": "2024-09-16T09:21:20.200875Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.242641Z", "completed_at": "2024-09-16T09:21:20.242653Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0667870044708252, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__locations_location_id.c335a5985e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__locations\"\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.201680Z", "completed_at": "2024-09-16T09:21:20.239481Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.252694Z", "completed_at": "2024-09-16T09:21:20.252704Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.056339263916015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__locations_location_id.f1469a5149", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.211156Z", "completed_at": "2024-09-16T09:21:20.253502Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.257295Z", "completed_at": "2024-09-16T09:21:20.257303Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.06679511070251465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite2__transaction_accounting_lines_transaction_id__transaction_line_id__accounting_book_id.ac47a8ecc1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id, accounting_book_id\n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\n    group by transaction_id, transaction_line_id, accounting_book_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.258248Z", "completed_at": "2024-09-16T09:21:20.272369Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.279099Z", "completed_at": "2024-09-16T09:21:20.279106Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025426864624023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_accounting_lines_transaction_id.f28afbfa25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.268291Z", "completed_at": "2024-09-16T09:21:20.278497Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.281993Z", "completed_at": "2024-09-16T09:21:20.282023Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02637004852294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_accounting_lines_transaction_line_id.0f72869807", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_accounting_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.273607Z", "completed_at": "2024-09-16T09:21:20.281218Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.285245Z", "completed_at": "2024-09-16T09:21:20.285284Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015094995498657227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__subsidiaries_subsidiary_id.0ab6516626", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subsidiary_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__subsidiaries\"\nwhere subsidiary_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.287935Z", "completed_at": "2024-09-16T09:21:20.300904Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.305274Z", "completed_at": "2024-09-16T09:21:20.305285Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021949052810668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__subsidiaries_subsidiary_id.8edc974229", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    subsidiary_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__subsidiaries\"\nwhere subsidiary_id is not null\ngroup by subsidiary_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.295637Z", "completed_at": "2024-09-16T09:21:20.304825Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.306905Z", "completed_at": "2024-09-16T09:21:20.306913Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020708799362182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transactions_transaction_id.b4f6c6a72b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transactions\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.301383Z", "completed_at": "2024-09-16T09:21:20.305908Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.308592Z", "completed_at": "2024-09-16T09:21:20.308597Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015486001968383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__transactions_transaction_id.af3d15dce4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transactions\"\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.312198Z", "completed_at": "2024-09-16T09:21:20.329069Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.348638Z", "completed_at": "2024-09-16T09:21:20.348647Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04146099090576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite2__transaction_lines_transaction_id__transaction_line_id.07b823514f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id\n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_lines\"\n    group by transaction_id, transaction_line_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.316954Z", "completed_at": "2024-09-16T09:21:20.345375Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.349190Z", "completed_at": "2024-09-16T09:21:20.349195Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04051494598388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_lines_transaction_id.267b150890", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.321355Z", "completed_at": "2024-09-16T09:21:20.348942Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.352779Z", "completed_at": "2024-09-16T09:21:20.352783Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03790688514709473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__transaction_lines_transaction_line_id.a82e70adc1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__transaction_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.356300Z", "completed_at": "2024-09-16T09:21:20.368542Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.369761Z", "completed_at": "2024-09-16T09:21:20.369768Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017393827438354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__vendors_vendor_id.777b758daf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendors\"\nwhere vendor_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.360929Z", "completed_at": "2024-09-16T09:21:20.369367Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.371431Z", "completed_at": "2024-09-16T09:21:20.371438Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018395185470581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__vendors_vendor_id.415829ac1d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendors\"\nwhere vendor_id is not null\ngroup by vendor_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.364718Z", "completed_at": "2024-09-16T09:21:20.370390Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.373485Z", "completed_at": "2024-09-16T09:21:20.373492Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01462697982788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite2__vendor_categories_vendor_category_id.60acd9acb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_category_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendor_categories\"\nwhere vendor_category_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.376415Z", "completed_at": "2024-09-16T09:21:20.389506Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.390417Z", "completed_at": "2024-09-16T09:21:20.390428Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01778411865234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite2__vendor_categories_vendor_category_id.874da088c6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_category_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite2__vendor_categories\"\nwhere vendor_category_id is not null\ngroup by vendor_category_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.380562Z", "completed_at": "2024-09-16T09:21:20.390922Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.393943Z", "completed_at": "2024-09-16T09:21:20.393948Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01981496810913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__classes_class_id.462bfda765", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect class_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__classes\"\nwhere class_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.385538Z", "completed_at": "2024-09-16T09:21:20.392283Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.394874Z", "completed_at": "2024-09-16T09:21:20.394879Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016550064086914062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__classes_class_id.c63c54840b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    class_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__classes\"\nwhere class_id is not null\ngroup by class_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.397360Z", "completed_at": "2024-09-16T09:21:20.408845Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.414327Z", "completed_at": "2024-09-16T09:21:20.414336Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021030902862548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite__accounting_periods_accounting_period_id__fiscal_calendar_id.43005ecb69", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        accounting_period_id, fiscal_calendar_id\n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_periods\"\n    group by accounting_period_id, fiscal_calendar_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.404365Z", "completed_at": "2024-09-16T09:21:20.414750Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.417600Z", "completed_at": "2024-09-16T09:21:20.417605Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016824960708618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_periods_accounting_period_id.5c1c46821c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_period_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_periods\"\nwhere accounting_period_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.409467Z", "completed_at": "2024-09-16T09:21:20.415867Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.418482Z", "completed_at": "2024-09-16T09:21:20.418491Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017080068588256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_periods_fiscal_calendar_id.8d75190563", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fiscal_calendar_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_periods\"\nwhere fiscal_calendar_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.420983Z", "completed_at": "2024-09-16T09:21:20.429022Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.435571Z", "completed_at": "2024-09-16T09:21:20.435581Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01842498779296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounting_books_accounting_book_id.12972ee6fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accounting_book_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_books\"\nwhere accounting_book_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.429354Z", "completed_at": "2024-09-16T09:21:20.436674Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.438867Z", "completed_at": "2024-09-16T09:21:20.438872Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014560222625732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__accounting_books_accounting_book_id.22e0106417", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    accounting_book_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounting_books\"\nwhere accounting_book_id is not null\ngroup by accounting_book_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.432161Z", "completed_at": "2024-09-16T09:21:20.437022Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.439135Z", "completed_at": "2024-09-16T09:21:20.439143Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015302181243896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__accounts_account_id.f03cddbace", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounts\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.447929Z", "completed_at": "2024-09-16T09:21:20.457067Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.464172Z", "completed_at": "2024-09-16T09:21:20.464188Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03938698768615723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__accounts_account_id.e94563d281", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__accounts\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.470118Z", "completed_at": "2024-09-16T09:21:20.478617Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.480376Z", "completed_at": "2024-09-16T09:21:20.480382Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02565598487854004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__departments_department_id.2df16a9aa1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    department_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__departments\"\nwhere department_id is not null\ngroup by department_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.465110Z", "completed_at": "2024-09-16T09:21:20.478909Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.480647Z", "completed_at": "2024-09-16T09:21:20.480654Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026835918426513672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__departments_department_id.6d96b00002", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect department_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__departments\"\nwhere department_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.480921Z", "completed_at": "2024-09-16T09:21:20.485831Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.490094Z", "completed_at": "2024-09-16T09:21:20.490101Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014644145965576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__customers_customer_id.bbb9eed2dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.487060Z", "completed_at": "2024-09-16T09:21:20.494547Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.497733Z", "completed_at": "2024-09-16T09:21:20.497741Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013499259948730469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__customers_customer_id.7c9debe8d9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.490419Z", "completed_at": "2024-09-16T09:21:20.495273Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.498395Z", "completed_at": "2024-09-16T09:21:20.498401Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01686716079711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__currencies_currency_id.e8b331ffb3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect currency_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__currencies\"\nwhere currency_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.499341Z", "completed_at": "2024-09-16T09:21:20.505424Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.516324Z", "completed_at": "2024-09-16T09:21:20.516333Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020292997360229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__currencies_currency_id.09ab867f2c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    currency_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__currencies\"\nwhere currency_id is not null\ngroup by currency_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.506820Z", "completed_at": "2024-09-16T09:21:20.518577Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.523085Z", "completed_at": "2024-09-16T09:21:20.523091Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01916193962097168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__consolidated_exchange_rates_consolidated_exchange_rate_id.83de8c8e97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect consolidated_exchange_rate_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.511892Z", "completed_at": "2024-09-16T09:21:20.522750Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.524348Z", "completed_at": "2024-09-16T09:21:20.524352Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020300865173339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__consolidated_exchange_rates_consolidated_exchange_rate_id.2ca94ecb54", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    consolidated_exchange_rate_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__consolidated_exchange_rates\"\nwhere consolidated_exchange_rate_id is not null\ngroup by consolidated_exchange_rate_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.518968Z", "completed_at": "2024-09-16T09:21:20.524098Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.526233Z", "completed_at": "2024-09-16T09:21:20.526238Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009377002716064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__income_accounts_income_account_id.a38311d5f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect income_account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__income_accounts\"\nwhere income_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.527889Z", "completed_at": "2024-09-16T09:21:20.535358Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.538926Z", "completed_at": "2024-09-16T09:21:20.538933Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014150857925415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__income_accounts_income_account_id.28b4166a07", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    income_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__income_accounts\"\nwhere income_account_id is not null\ngroup by income_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.532154Z", "completed_at": "2024-09-16T09:21:20.538589Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.540570Z", "completed_at": "2024-09-16T09:21:20.540574Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014094829559326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__expense_accounts_expense_account_id.4de138ed23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect expense_account_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__expense_accounts\"\nwhere expense_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.535646Z", "completed_at": "2024-09-16T09:21:20.539233Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.541153Z", "completed_at": "2024-09-16T09:21:20.541158Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010692834854125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__expense_accounts_expense_account_id.5e813830ff", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    expense_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__expense_accounts\"\nwhere expense_account_id is not null\ngroup by expense_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.543841Z", "completed_at": "2024-09-16T09:21:20.554104Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.554733Z", "completed_at": "2024-09-16T09:21:20.554739Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013267993927001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__locations_location_id.9f68ecaa6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__locations\"\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.548963Z", "completed_at": "2024-09-16T09:21:20.559046Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.560196Z", "completed_at": "2024-09-16T09:21:20.560201Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01753067970275879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__locations_location_id.3857e2cac2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.551530Z", "completed_at": "2024-09-16T09:21:20.559335Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.560612Z", "completed_at": "2024-09-16T09:21:20.560615Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013643026351928711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__items_item_id.ba322d7da3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__items\"\nwhere item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.556416Z", "completed_at": "2024-09-16T09:21:20.559764Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.561313Z", "completed_at": "2024-09-16T09:21:20.561317Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006678104400634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__items_item_id.760a674654", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__items\"\nwhere item_id is not null\ngroup by item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.564548Z", "completed_at": "2024-09-16T09:21:20.573440Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.573898Z", "completed_at": "2024-09-16T09:21:20.573902Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01134490966796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__vendor_types_vendor_type_id.faed6fe0e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_type_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendor_types\"\nwhere vendor_type_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.567435Z", "completed_at": "2024-09-16T09:21:20.577814Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.578533Z", "completed_at": "2024-09-16T09:21:20.578536Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0158541202545166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__vendor_types_vendor_type_id.6ba4f59b69", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_type_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendor_types\"\nwhere vendor_type_id is not null\ngroup by vendor_type_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.570820Z", "completed_at": "2024-09-16T09:21:20.578304Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.579870Z", "completed_at": "2024-09-16T09:21:20.579873Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016693115234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__subsidiaries_subsidiary_id.9aa9c2d015", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subsidiary_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__subsidiaries\"\nwhere subsidiary_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.575343Z", "completed_at": "2024-09-16T09:21:20.578768Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.580341Z", "completed_at": "2024-09-16T09:21:20.580344Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0066912174224853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__subsidiaries_subsidiary_id.7d0dfe64f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    subsidiary_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__subsidiaries\"\nwhere subsidiary_id is not null\ngroup by subsidiary_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.582782Z", "completed_at": "2024-09-16T09:21:20.592161Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.592710Z", "completed_at": "2024-09-16T09:21:20.592715Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012157917022705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transactions_transaction_id.9439fe1532", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transactions\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.588724Z", "completed_at": "2024-09-16T09:21:20.593465Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.594966Z", "completed_at": "2024-09-16T09:21:20.594970Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010328054428100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.dbt_utils_unique_combination_of_columns_stg_netsuite__transaction_lines_transaction_id__transaction_line_id.651bc3120d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, transaction_line_id\n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transaction_lines\"\n    group by transaction_id, transaction_line_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.586254Z", "completed_at": "2024-09-16T09:21:20.593949Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.595390Z", "completed_at": "2024-09-16T09:21:20.595394Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016405820846557617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__transactions_transaction_id.fd6bd3af79", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transactions\"\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.596072Z", "completed_at": "2024-09-16T09:21:20.602523Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.602970Z", "completed_at": "2024-09-16T09:21:20.602974Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008949995040893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transaction_lines_transaction_id.e8055d67bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transaction_lines\"\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.600031Z", "completed_at": "2024-09-16T09:21:20.603678Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.604100Z", "completed_at": "2024-09-16T09:21:20.604103Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005007743835449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__transaction_lines_transaction_line_id.420bd8637c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_line_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__transaction_lines\"\nwhere transaction_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:19.539480Z", "completed_at": "2024-09-16T09:21:20.659013Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.659494Z", "completed_at": "2024-09-16T09:21:20.659501Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.3859500885009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.netsuite_source.stg_netsuite__vendors", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendors_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_salesforce_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_salesforce_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_owner\n    \n , \n    cast(null as TEXT) as \n    \n    accountnumber\n    \n , \n    cast(null as TEXT) as \n    \n    accounts_email\n    \n , \n    cast(null as float) as \n    \n    annual_revenue\n    \n , \n    cast(null as TEXT) as \n    \n    auto_renewals\n    \n , \n    cast(null as TEXT) as \n    \n    auto_send_statements\n    \n , \n    cast(null as TEXT) as \n    \n    billaddress\n    \n , \n    cast(null as float) as \n    \n    billing_class_id\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    comments\n    \n , \n    cast(null as TEXT) as \n    \n    companyname\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    \n    \n    create_date\n    \n as \n    \n    create_date\n    \n, \n    cast(null as float) as \n    \n    creditlimit\n    \n , \n    cast(null as float) as \n    \n    currency_id\n    \n , \n    cast(null as timestamp) as \n    \n    date_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    date_last_modified\n    \n , \n    cast(null as TEXT) as \n    \n    dic\n    \n , \n    cast(null as TEXT) as \n    \n    email\n    \n , \n    cast(null as TEXT) as \n    \n    email_bill_payment_vouchers\n    \n , \n    cast(null as TEXT) as \n    \n    email_cash_sales\n    \n , \n    cast(null as TEXT) as \n    \n    email_credit_notes\n    \n , \n    cast(null as TEXT) as \n    \n    email_invoices\n    \n , \n    cast(null as TEXT) as \n    \n    email_item_fulfilments\n    \n , \n    cast(null as TEXT) as \n    \n    email_purchase_orders\n    \n , \n    cast(null as TEXT) as \n    \n    email_quotes\n    \n , \n    cast(null as TEXT) as \n    \n    email_sales_orders\n    \n , \n    cast(null as TEXT) as \n    \n    email_statements\n    \n , \n    cast(null as TEXT) as \n    \n    employee_number\n    \n , \n    cast(null as TEXT) as \n    \n    exemption_certificate_no\n    \n , \n    cast(null as float) as \n    \n    expense_account_id\n    \n , \n    cast(null as TEXT) as \n    \n    fax\n    \n , \n    cast(null as TEXT) as \n    \n    full_name\n    \n , \n    cast(null as TEXT) as \n    \n    home_phone\n    \n , \n    cast(null as TEXT) as \n    \n    hris_id\n    \n , \n    cast(null as TEXT) as \n    \n    ico\n    \n , \n    cast(null as TEXT) as \n    \n    id_number_in_the_country_of_r\n    \n , \n    cast(null as float) as \n    \n    id_type_in_the_country_of_r_id\n    \n , \n    cast(null as float) as \n    \n    in_transit_balance\n    \n , \n    cast(null as TEXT) as \n    \n    incoterm\n    \n , \n    cast(null as float) as \n    \n    industry_id\n    \n , \n    cast(null as TEXT) as \n    \n    invoice_via_procurement_syste\n    \n , \n    cast(null as TEXT) as \n    \n    invoicing_details\n    \n , \n    cast(null as TEXT) as \n    \n    is1099eligible\n    \n , \n    cast(null as TEXT) as \n    \n    is_partner\n    \n , \n    cast(null as TEXT) as \n    \n    is_person\n    \n , \n    cast(null as TEXT) as \n    \n    isemailhtml\n    \n , \n    cast(null as TEXT) as \n    \n    isemailpdf\n    \n , \n    cast(null as TEXT) as \n    \n    isinactive\n    \n , \n    cast(null as float) as \n    \n    labor_cost\n    \n , \n    cast(null as timestamp) as \n    \n    last_modified_date\n    \n , \n    cast(null as timestamp) as \n    \n    last_sales_activity\n    \n , \n    cast(null as TEXT) as \n    \n    line1\n    \n , \n    cast(null as TEXT) as \n    \n    line2\n    \n , \n    cast(null as TEXT) as \n    \n    line3\n    \n , \n    cast(null as TEXT) as \n    \n    loginaccess\n    \n , \n    cast(null as TEXT) as \n    \n    lsa_link\n    \n , \n    cast(null as TEXT) as \n    \n    lsa_link_name\n    \n , \n    cast(null as TEXT) as \n    \n    mobile_phone\n    \n , \n    cast(null as timestamp) as \n    \n    msa_effective_date\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as float) as \n    \n    no__of_employees\n    \n , \n    cast(null as float) as \n    \n    openbalance\n    \n , \n    cast(null as float) as \n    \n    openbalance_foreign\n    \n , \n    cast(null as float) as \n    \n    payables_account_id\n    \n , \n    cast(null as float) as \n    \n    payment_terms_id\n    \n , \n    cast(null as TEXT) as \n    \n    phone\n    \n , \n    cast(null as float) as \n    \n    prepayment_balance\n    \n , \n    cast(null as TEXT) as \n    \n    printoncheckas\n    \n , \n    cast(null as float) as \n    \n    purchaseorderamount\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantity\n    \n , \n    cast(null as float) as \n    \n    purchaseorderquantitydiff\n    \n , \n    cast(null as TEXT) as \n    \n    purchases_email\n    \n , \n    cast(null as float) as \n    \n    receiptamount\n    \n , \n    cast(null as float) as \n    \n    receiptquantity\n    \n , \n    cast(null as float) as \n    \n    receiptquantitydiff\n    \n , \n    cast(null as float) as \n    \n    represents_subsidiary_id\n    \n , \n    cast(null as TEXT) as \n    \n    restrict_access_to_expensify\n    \n , \n    cast(null as TEXT) as \n    \n    salesforce_id\n    \n , \n    cast(null as TEXT) as \n    \n    shipaddress\n    \n , \n    cast(null as TEXT) as \n    \n    shipping_email\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as float) as \n    \n    subsidiary\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_first_name\n    \n , \n    cast(null as float) as \n    \n    tax_contact_id\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_last_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_contact_middle_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number\n    \n , \n    cast(null as TEXT) as \n    \n    taxidnum\n    \n , \n    cast(null as float) as \n    \n    time_approver_id\n    \n , \n    cast(null as TEXT) as \n    \n    transactions_need_approval\n    \n , \n    cast(null as TEXT) as \n    \n    uen\n    \n , \n    cast(null as float) as \n    \n    unbilled_orders\n    \n , \n    cast(null as float) as \n    \n    unbilled_orders_foreign\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n , \n    cast(null as TEXT) as \n    \n    vat_registration_no\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_extid\n    \n , \n    \n    \n    vendor_id\n    \n as \n    \n    vendor_id\n    \n, \n    \n    \n    vendor_type_id\n    \n as \n    \n    vendor_type_id\n    \n, \n    cast(null as TEXT) as \n    \n    zipcode\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        vendor_id,\n        companyname as company_name,\n        create_date as create_date_at,\n        vendor_type_id,\n        _fivetran_deleted\n\n        --The below macro adds the fields defined within your vendors_pass_through_columns variable into the staging model\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendors\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.771488Z", "completed_at": "2024-09-16T09:21:20.774344Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.775077Z", "completed_at": "2024-09-16T09:21:20.775083Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007975101470947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.unique_stg_netsuite__vendors_vendor_id.a981580d39", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    vendor_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendors\"\nwhere vendor_id is not null\ngroup by vendor_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-16T09:21:20.768457Z", "completed_at": "2024-09-16T09:21:20.774830Z"}, {"name": "execute", "started_at": "2024-09-16T09:21:20.776016Z", "completed_at": "2024-09-16T09:21:20.776019Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009123802185058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.netsuite_source.not_null_stg_netsuite__vendors_vendor_id.15978cc531", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect vendor_id\nfrom \"postgres\".\"netsuite_source_integration_tests_4_netsuite_source\".\"stg_netsuite__vendors\"\nwhere vendor_id is null\n\n\n", "relation_name": null}], "elapsed_time": 18.30712389945984, "args": {"exclude": [], "introspect": true, "print": true, "send_anonymous_usage_stats": true, "invocation_command": "dbt docs generate -t postgres", "log_level": "info", "use_colors": true, "partial_parse_file_diff": true, "empty_catalog": false, "printer_width": 80, "log_level_file": "debug", "target": "postgres", "quiet": false, "favor_state": false, "profiles_dir": "/Users/avinash.kunnath/.dbt", "enable_legacy_logger": false, "vars": {}, "show_resource_report": false, "populate_cache": true, "write_json": true, "cache_selected_only": false, "select": [], "defer": false, "project_dir": "/Users/avinash.kunnath/Documents/dbt_packages/netsuite/dbt_netsuite_source/integration_tests", "partial_parse": true, "compile": true, "macro_debugging": false, "use_colors_file": true, "log_path": "/Users/avinash.kunnath/Documents/dbt_packages/netsuite/dbt_netsuite_source/integration_tests/logs", "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "log_format": "default", "log_file_max_bytes": 10485760, "static": false, "indirect_selection": "eager", "which": "generate", "strict_mode": false, "static_parser": true, "log_format_file": "debug"}}